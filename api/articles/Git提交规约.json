{"title":"Git 提交规约","slug":"Git提交规约","date":"2022-08-02T09:18:54.000Z","updated":"2022-08-02T09:18:54.000Z","comments":true,"path":"api/articles/Git提交规约.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172601.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172616.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172624.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172714.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807171912.png"],"content":"<h2 id=\"通用规约\"><a href=\"#通用规约\" class=\"headerlink\" title=\"通用规约\"></a>通用规约</h2><ul>\n<li><strong>【强制】</strong>开发环境的配置文件严禁提交到远程库（前后端都适用）</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地修改配置文件之后不让git跟踪文件修改状态</span></span><br><span class=\"line\"><span class=\"comment\"># git关闭跟踪文件修改提交</span></span><br><span class=\"line\">git update-index --assume-unchanged <span class=\"string\">&quot;application-dev.yml&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># git打开跟踪文件修改提交</span></span><br><span class=\"line\">git update-index --no-assume-unchanged <span class=\"string\">&quot;application-dev.yml&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>【强制】</strong>必须设置 git 提交用户信息</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git生成ssh密钥</span></span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;xxx@vanxsoft.net&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 查看git的配置</span></span><br><span class=\"line\">git config --list</span><br><span class=\"line\"><span class=\"comment\"># 配置git用户信息，username必须为公司档案中文姓名，email必须为公司企业邮箱</span></span><br><span class=\"line\">git config --global user.name  <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\">git config --global user.email  <span class=\"string\">&quot;email&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 若出现中文乱码，请设置git的字符编码为utf-8</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一、提交信息格式\"><a href=\"#一、提交信息格式\" class=\"headerlink\" title=\"一、提交信息格式\"></a>一、提交信息格式</h2><p>提交信息需保持统一的格式，每次提交的 commit message 必须包括 type、scope 和 subject 三部分。</p>\n<p><strong>组成部分：</strong></p>\n<p>主要分为下面三个部分： Header，Body，Footer。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>(<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>): <span class=\"tag\">&lt;<span class=\"name\">subject</span>&gt;</span></span><br><span class=\"line\">// 空一行</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">// 空一行</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下面详细解释下个个部分的含义。</p>\n<h3 id=\"1-Header\"><a href=\"#1-Header\" class=\"headerlink\" title=\"1. Header\"></a>1. Header</h3><p>Header 的部分只有一行,包括三个字段: type(必需), scope(可选), subject(必需)</p>\n<p>对应到 idea 插件上图的配置分别为 Header 部分的:</p>\n<table>\n<thead>\n<tr>\n<th><strong>type(必需)</strong></th>\n<th><strong>Type of change</strong></th>\n<th><strong>commit 类别</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>scope(可选)</td>\n<td>Scope of this change</td>\n<td>commint 影响的范围</td>\n</tr>\n<tr>\n<td><strong>subject(必需)</strong></td>\n<td><strong>Short description</strong></td>\n<td><strong>简短的描述</strong></td>\n</tr>\n</tbody></table>\n<ol>\n<li><h5 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a><strong>type</strong></h5></li>\n</ol>\n<p>type 用于说明 commit 的类别，只允许使用下面标识</p>\n<ul>\n<li><code>feat</code>：新功能（feature）</li>\n<li><code>fix</code>：修补 bug</li>\n<li><code>docs</code>：文档（documentation）</li>\n<li><code>style</code>： 格式（不影响代码运行的变动,空格,格式化,等等）</li>\n<li><code>refactor</code>：重构（即不是新增功能，也不是修改 bug 的代码变动）</li>\n<li><code>perf</code>: 性能 (提高代码性能的改变)</li>\n<li><code>test</code>：增加测试或者修改测试</li>\n<li><code>build</code>: 影响构建系统或外部依赖项的更改(maven,gradle,npm 等等)</li>\n<li><code>ci</code>: 对 CI 配置文件和脚本的更改</li>\n<li><code>chore</code>：对非 src 和 test 目录的修改</li>\n<li><code>revert</code>: Revert a commit</li>\n</ul>\n<ol>\n<li><h5 id=\"scope\"><a href=\"#scope\" class=\"headerlink\" title=\"scope\"></a><strong>scope</strong></h5></li>\n</ol>\n<p><code>scope</code>用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p>\n<ol>\n<li><h5 id=\"subject\"><a href=\"#subject\" class=\"headerlink\" title=\"subject\"></a><strong>subject</strong></h5></li>\n</ol>\n<p><code>subject</code>是 commit 目的的简短描述，不超过 50 个字符。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以动词开头，使用第一人称现在时，比如change，而不是changed或changes</span><br><span class=\"line\">第一个字母小写</span><br><span class=\"line\">结尾不加句号（.）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Body\"><a href=\"#2-Body\" class=\"headerlink\" title=\"2. Body\"></a>2. Body</h3><p>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如有必要，更详细的说明文本。包装它</span><br><span class=\"line\">大概72个字左右。</span><br><span class=\"line\"></span><br><span class=\"line\">后面的段落在空行之后。</span><br><span class=\"line\"></span><br><span class=\"line\">-要点也可以</span><br><span class=\"line\">-使用悬挂缩进</span><br></pre></td></tr></table></figure>\n\n<p>有一个注意点。</p>\n<p>（1）应该说明代码变动的动机，以及与以前行为的对比。</p>\n<h3 id=\"3-Footer\"><a href=\"#3-Footer\" class=\"headerlink\" title=\"3. Footer\"></a>3. Footer</h3><p>Footer 部分只用于两种情况。</p>\n<h4 id=\"（1）不兼容变动\"><a href=\"#（1）不兼容变动\" class=\"headerlink\" title=\"（1）不兼容变动\"></a><strong>（1）不兼容变动</strong></h4><p>如果当前代码与上一个版本不兼容，则 Footer 部分以<code>BREAKING CHANGE</code>开头，后面是对变动的描述、以及变动理由和迁移方法。</p>\n<h4 id=\"（2）关闭-Issue\"><a href=\"#（2）关闭-Issue\" class=\"headerlink\" title=\"（2）关闭 Issue\"></a><strong>（2）关闭 Issue</strong></h4><blockquote>\n<p>这里填写 Jira 的 Issue ID，可以关联 Jira 问题</p>\n</blockquote>\n<blockquote>\n<p>这里的关闭 Issue 并不能改变 Jira Issue 的状态，Gitlab 与 Jira 的插件支持不稳定。但是可以将 Git Commit 关联到 Jira Issue</p>\n</blockquote>\n<p>如果当前 commit 针对某个 issue，那么可以在 Footer 部分关闭这个 issue 。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Closes</span> <span class=\"comment\">#234</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以一次关闭多个 issue 。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Closes</span> #<span class=\"number\">123</span>, #<span class=\"number\">245</span>, #<span class=\"number\">992</span></span><br></pre></td></tr></table></figure>\n\n<p>最后一个完整的 <code>commit message</code> 示例如下：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature(流程管理): 流程管理</span><br><span class=\"line\"></span><br><span class=\"line\">-流程模型</span><br><span class=\"line\">-人员分组</span><br><span class=\"line\">-流程表单</span><br><span class=\"line\"></span><br><span class=\"line\">BREAKING CHANGE: 不兼容老版本</span><br><span class=\"line\"></span><br><span class=\"line\">Closes #101</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、提交信息生成方式\"><a href=\"#二、提交信息生成方式\" class=\"headerlink\" title=\"二、提交信息生成方式\"></a>二、提交信息生成方式</h2><h3 id=\"JetBrains-系列-IDE\"><a href=\"#JetBrains-系列-IDE\" class=\"headerlink\" title=\"JetBrains 系列 IDE\"></a>JetBrains 系列 IDE</h3><p><code>JetBrains</code> 公司的 <code>IDEA</code>、<code>WebStrom</code> 可以安装 <code>Git Commit Message Plugins</code> 插件</p>\n<p>安装步骤如下：</p>\n<h4 id=\"（1）安装-Git-Commit-Message-Plugins-插件\"><a href=\"#（1）安装-Git-Commit-Message-Plugins-插件\" class=\"headerlink\" title=\"（1）安装 Git Commit Message Plugins 插件\"></a>（1）安装 Git Commit Message Plugins 插件</h4><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F<span class=\"function\"><span class=\"title\">ile</span> -&gt;</span> S<span class=\"function\"><span class=\"title\">ettings</span> -&gt;</span> P<span class=\"function\"><span class=\"title\">lugins</span> -&gt;</span> M<span class=\"function\"><span class=\"title\">arketplace</span> -&gt;</span> 搜索 <span class=\"string\">&quot;Git Commit Message Plugins&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172601.png\" alt=\"image-20220807172600964\"></p>\n<h4 id=\"（2）使用插件规范提交信息\"><a href=\"#（2）使用插件规范提交信息\" class=\"headerlink\" title=\"（2）使用插件规范提交信息\"></a>（2）使用插件规范提交信息</h4><p>在 Commit 代码处，选择使用<strong>Git Commit Message Plugins</strong>插件，如下图所示</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172616.png\" alt=\"image-20220807172616778\"></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172624.png\" alt=\"image-20220807172624828\"></p>\n<h3 id=\"VS-Code\"><a href=\"#VS-Code\" class=\"headerlink\" title=\"VS Code\"></a>VS Code</h3><h4 id=\"（1）安装插件\"><a href=\"#（1）安装插件\" class=\"headerlink\" title=\"（1）安装插件\"></a>（1）安装插件</h4><p>扩展商店搜索 -&gt; <code>git-commit-plugin</code> -&gt; <code>安装</code></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172714.png\" alt=\"image-20220807172714708\"></p>\n<h4 id=\"（2）使用插件生成提交信息\"><a href=\"#（2）使用插件生成提交信息\" class=\"headerlink\" title=\"（2）使用插件生成提交信息\"></a>（2）使用插件生成提交信息</h4><p>选择对应的部分进行填写，回车确认到下一步</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807171912.png\" alt=\"img\"></p>\n<p>填写好提交信息之后正常提交即可</p>\n<h3 id=\"命令行提交\"><a href=\"#命令行提交\" class=\"headerlink\" title=\"命令行提交\"></a>命令行提交</h3><blockquote>\n<p>通过多个 -m 做到多行注释提交，每个 -m 代表一行</p>\n</blockquote>\n<p>通过多行注释提交命令，将上面说到的 <code>提交注释模板</code> 分块填写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;header&quot;</span> -m <span class=\"string\">&quot;body&quot;</span> -m <span class=\"string\">&quot;footer&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>例子如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">git</span> commit -m <span class=\"string\">&quot;feature(流程管理): 流程管理&quot;</span> -m <span class=\"string\">&quot;-流程模型&quot;</span> -m <span class=\"string\">&quot;Closes #101&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SoureTree\"><a href=\"#SoureTree\" class=\"headerlink\" title=\"SoureTree\"></a>SoureTree</h3><p>直接在提交注释输入框内编辑注释信息即可（支持多行编辑）</p>\n","more":"<h2 id=\"通用规约\"><a href=\"#通用规约\" class=\"headerlink\" title=\"通用规约\"></a>通用规约</h2><ul>\n<li><strong>【强制】</strong>开发环境的配置文件严禁提交到远程库（前后端都适用）</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 本地修改配置文件之后不让git跟踪文件修改状态</span></span><br><span class=\"line\"><span class=\"comment\"># git关闭跟踪文件修改提交</span></span><br><span class=\"line\">git update-index --assume-unchanged <span class=\"string\">&quot;application-dev.yml&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># git打开跟踪文件修改提交</span></span><br><span class=\"line\">git update-index --no-assume-unchanged <span class=\"string\">&quot;application-dev.yml&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>【强制】</strong>必须设置 git 提交用户信息</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># git生成ssh密钥</span></span><br><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;xxx@vanxsoft.net&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 查看git的配置</span></span><br><span class=\"line\">git config --list</span><br><span class=\"line\"><span class=\"comment\"># 配置git用户信息，username必须为公司档案中文姓名，email必须为公司企业邮箱</span></span><br><span class=\"line\">git config --global user.name  <span class=\"string\">&quot;username&quot;</span></span><br><span class=\"line\">git config --global user.email  <span class=\"string\">&quot;email&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 若出现中文乱码，请设置git的字符编码为utf-8</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一、提交信息格式\"><a href=\"#一、提交信息格式\" class=\"headerlink\" title=\"一、提交信息格式\"></a>一、提交信息格式</h2><p>提交信息需保持统一的格式，每次提交的 commit message 必须包括 type、scope 和 subject 三部分。</p>\n<p><strong>组成部分：</strong></p>\n<p>主要分为下面三个部分： Header，Body，Footer。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>(<span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>): <span class=\"tag\">&lt;<span class=\"name\">subject</span>&gt;</span></span><br><span class=\"line\">// 空一行</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">// 空一行</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">footer</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>下面详细解释下个个部分的含义。</p>\n<h3 id=\"1-Header\"><a href=\"#1-Header\" class=\"headerlink\" title=\"1. Header\"></a>1. Header</h3><p>Header 的部分只有一行,包括三个字段: type(必需), scope(可选), subject(必需)</p>\n<p>对应到 idea 插件上图的配置分别为 Header 部分的:</p>\n<table>\n<thead>\n<tr>\n<th><strong>type(必需)</strong></th>\n<th><strong>Type of change</strong></th>\n<th><strong>commit 类别</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>scope(可选)</td>\n<td>Scope of this change</td>\n<td>commint 影响的范围</td>\n</tr>\n<tr>\n<td><strong>subject(必需)</strong></td>\n<td><strong>Short description</strong></td>\n<td><strong>简短的描述</strong></td>\n</tr>\n</tbody></table>\n<ol>\n<li><h5 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a><strong>type</strong></h5></li>\n</ol>\n<p>type 用于说明 commit 的类别，只允许使用下面标识</p>\n<ul>\n<li><code>feat</code>：新功能（feature）</li>\n<li><code>fix</code>：修补 bug</li>\n<li><code>docs</code>：文档（documentation）</li>\n<li><code>style</code>： 格式（不影响代码运行的变动,空格,格式化,等等）</li>\n<li><code>refactor</code>：重构（即不是新增功能，也不是修改 bug 的代码变动）</li>\n<li><code>perf</code>: 性能 (提高代码性能的改变)</li>\n<li><code>test</code>：增加测试或者修改测试</li>\n<li><code>build</code>: 影响构建系统或外部依赖项的更改(maven,gradle,npm 等等)</li>\n<li><code>ci</code>: 对 CI 配置文件和脚本的更改</li>\n<li><code>chore</code>：对非 src 和 test 目录的修改</li>\n<li><code>revert</code>: Revert a commit</li>\n</ul>\n<ol>\n<li><h5 id=\"scope\"><a href=\"#scope\" class=\"headerlink\" title=\"scope\"></a><strong>scope</strong></h5></li>\n</ol>\n<p><code>scope</code>用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p>\n<ol>\n<li><h5 id=\"subject\"><a href=\"#subject\" class=\"headerlink\" title=\"subject\"></a><strong>subject</strong></h5></li>\n</ol>\n<p><code>subject</code>是 commit 目的的简短描述，不超过 50 个字符。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">以动词开头，使用第一人称现在时，比如change，而不是changed或changes</span><br><span class=\"line\">第一个字母小写</span><br><span class=\"line\">结尾不加句号（.）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Body\"><a href=\"#2-Body\" class=\"headerlink\" title=\"2. Body\"></a>2. Body</h3><p>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">如有必要，更详细的说明文本。包装它</span><br><span class=\"line\">大概72个字左右。</span><br><span class=\"line\"></span><br><span class=\"line\">后面的段落在空行之后。</span><br><span class=\"line\"></span><br><span class=\"line\">-要点也可以</span><br><span class=\"line\">-使用悬挂缩进</span><br></pre></td></tr></table></figure>\n\n<p>有一个注意点。</p>\n<p>（1）应该说明代码变动的动机，以及与以前行为的对比。</p>\n<h3 id=\"3-Footer\"><a href=\"#3-Footer\" class=\"headerlink\" title=\"3. Footer\"></a>3. Footer</h3><p>Footer 部分只用于两种情况。</p>\n<h4 id=\"（1）不兼容变动\"><a href=\"#（1）不兼容变动\" class=\"headerlink\" title=\"（1）不兼容变动\"></a><strong>（1）不兼容变动</strong></h4><p>如果当前代码与上一个版本不兼容，则 Footer 部分以<code>BREAKING CHANGE</code>开头，后面是对变动的描述、以及变动理由和迁移方法。</p>\n<h4 id=\"（2）关闭-Issue\"><a href=\"#（2）关闭-Issue\" class=\"headerlink\" title=\"（2）关闭 Issue\"></a><strong>（2）关闭 Issue</strong></h4><blockquote>\n<p>这里填写 Jira 的 Issue ID，可以关联 Jira 问题</p>\n</blockquote>\n<blockquote>\n<p>这里的关闭 Issue 并不能改变 Jira Issue 的状态，Gitlab 与 Jira 的插件支持不稳定。但是可以将 Git Commit 关联到 Jira Issue</p>\n</blockquote>\n<p>如果当前 commit 针对某个 issue，那么可以在 Footer 部分关闭这个 issue 。</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Closes</span> <span class=\"comment\">#234</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以一次关闭多个 issue 。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Closes</span> #<span class=\"number\">123</span>, #<span class=\"number\">245</span>, #<span class=\"number\">992</span></span><br></pre></td></tr></table></figure>\n\n<p>最后一个完整的 <code>commit message</code> 示例如下：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">feature(流程管理): 流程管理</span><br><span class=\"line\"></span><br><span class=\"line\">-流程模型</span><br><span class=\"line\">-人员分组</span><br><span class=\"line\">-流程表单</span><br><span class=\"line\"></span><br><span class=\"line\">BREAKING CHANGE: 不兼容老版本</span><br><span class=\"line\"></span><br><span class=\"line\">Closes #101</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"二、提交信息生成方式\"><a href=\"#二、提交信息生成方式\" class=\"headerlink\" title=\"二、提交信息生成方式\"></a>二、提交信息生成方式</h2><h3 id=\"JetBrains-系列-IDE\"><a href=\"#JetBrains-系列-IDE\" class=\"headerlink\" title=\"JetBrains 系列 IDE\"></a>JetBrains 系列 IDE</h3><p><code>JetBrains</code> 公司的 <code>IDEA</code>、<code>WebStrom</code> 可以安装 <code>Git Commit Message Plugins</code> 插件</p>\n<p>安装步骤如下：</p>\n<h4 id=\"（1）安装-Git-Commit-Message-Plugins-插件\"><a href=\"#（1）安装-Git-Commit-Message-Plugins-插件\" class=\"headerlink\" title=\"（1）安装 Git Commit Message Plugins 插件\"></a>（1）安装 Git Commit Message Plugins 插件</h4><figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">F<span class=\"function\"><span class=\"title\">ile</span> -&gt;</span> S<span class=\"function\"><span class=\"title\">ettings</span> -&gt;</span> P<span class=\"function\"><span class=\"title\">lugins</span> -&gt;</span> M<span class=\"function\"><span class=\"title\">arketplace</span> -&gt;</span> 搜索 <span class=\"string\">&quot;Git Commit Message Plugins&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172601.png\" alt=\"image-20220807172600964\"></p>\n<h4 id=\"（2）使用插件规范提交信息\"><a href=\"#（2）使用插件规范提交信息\" class=\"headerlink\" title=\"（2）使用插件规范提交信息\"></a>（2）使用插件规范提交信息</h4><p>在 Commit 代码处，选择使用<strong>Git Commit Message Plugins</strong>插件，如下图所示</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172616.png\" alt=\"image-20220807172616778\"></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172624.png\" alt=\"image-20220807172624828\"></p>\n<h3 id=\"VS-Code\"><a href=\"#VS-Code\" class=\"headerlink\" title=\"VS Code\"></a>VS Code</h3><h4 id=\"（1）安装插件\"><a href=\"#（1）安装插件\" class=\"headerlink\" title=\"（1）安装插件\"></a>（1）安装插件</h4><p>扩展商店搜索 -&gt; <code>git-commit-plugin</code> -&gt; <code>安装</code></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807172714.png\" alt=\"image-20220807172714708\"></p>\n<h4 id=\"（2）使用插件生成提交信息\"><a href=\"#（2）使用插件生成提交信息\" class=\"headerlink\" title=\"（2）使用插件生成提交信息\"></a>（2）使用插件生成提交信息</h4><p>选择对应的部分进行填写，回车确认到下一步</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807171912.png\" alt=\"img\"></p>\n<p>填写好提交信息之后正常提交即可</p>\n<h3 id=\"命令行提交\"><a href=\"#命令行提交\" class=\"headerlink\" title=\"命令行提交\"></a>命令行提交</h3><blockquote>\n<p>通过多个 -m 做到多行注释提交，每个 -m 代表一行</p>\n</blockquote>\n<p>通过多行注释提交命令，将上面说到的 <code>提交注释模板</code> 分块填写</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&quot;header&quot;</span> -m <span class=\"string\">&quot;body&quot;</span> -m <span class=\"string\">&quot;footer&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>例子如下：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">git</span> commit -m <span class=\"string\">&quot;feature(流程管理): 流程管理&quot;</span> -m <span class=\"string\">&quot;-流程模型&quot;</span> -m <span class=\"string\">&quot;Closes #101&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"SoureTree\"><a href=\"#SoureTree\" class=\"headerlink\" title=\"SoureTree\"></a>SoureTree</h3><p>直接在提交注释输入框内编辑注释信息即可（支持多行编辑）</p>\n","categories":[{"name":"DevOps","path":"api/categories/DevOps.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"},{"name":"开发规范","path":"api/tags/开发规范.json"}]}