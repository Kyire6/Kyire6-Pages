{"title":"分布式系统理论","slug":"分布式系统理论","date":"2021-04-13T08:25:44.000Z","updated":"2021-04-13T08:26:26.000Z","comments":true,"path":"api/articles/分布式系统理论.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110820.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110902.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110941.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111036.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111136.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111312.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111426.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413112417.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413155414.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413160348.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162217.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162711.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162803.png"],"content":"<h2 id=\"什么是分布式系统？\"><a href=\"#什么是分布式系统？\" class=\"headerlink\" title=\"什么是分布式系统？\"></a>什么是分布式系统？</h2><p>分布式是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统。</p>\n<p>分布式系统是由一组通过网络进行通信、为了完成共同的任务而协调工作的计算机节点组成的系统。分布式系统的出现是为了用廉价的、普通的机器完成单个计算机无法完成的计算、存储任务。其目的是<strong>利用更多的机器，处理更多的数据</strong>。</p>\n<p>首先需要明确的是，只有当单个节点的处理能力无法满足日益增长的计算、存储任务的时候，且硬件的提升（加内存、加磁盘、使用更好的 CPU）高昂到得不偿失的时候，应用程序也不能进一步优化的时候，我们才需要考虑分布式系统。因为，分布式系统要解决的问题本身就是和单机系统一样的，而由于分布式系统多节点、通过网络通信的拓扑结构，会引入很多单机系统没有的问题，为了解决这些问题又会引入更多的机制、协议，带来更多的问题。</p>\n<h2 id=\"Dubbo-文档\"><a href=\"#Dubbo-文档\" class=\"headerlink\" title=\"Dubbo 文档\"></a>Dubbo 文档</h2><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，急需<strong>一个治理系统</strong>确保架构有条不紊的演进。</p>\n<p>在 Dubbo 的官网文档有这样一张图</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110820.png\" alt=\"img\"></p>\n<h3 id=\"单一应用架构\"><a href=\"#单一应用架构\" class=\"headerlink\" title=\"单一应用架构\"></a><strong>单一应用架构</strong></h3><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110902.png\" alt=\"img\"></p>\n<p>适用于小型网站，小型管理系统，将所有功能都部署到一个功能里，简单易用。</p>\n<p><strong>缺点：</strong></p>\n<p>1、性能扩展比较难</p>\n<p>2、协同开发问题</p>\n<p>3、不利于升级维护</p>\n<h3 id=\"垂直应用架构\"><a href=\"#垂直应用架构\" class=\"headerlink\" title=\"垂直应用架构\"></a>垂直应用架构</h3><p>当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的 Web 框架(MVC)是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110941.png\" alt=\"img\"></p>\n<p>通过切分业务来实现各个模块独立部署，降低了维护和部署的难度，团队各司其职更易管理，性能扩展也更方便，更有针对性。</p>\n<p>缺点：公用模块无法重复利用，开发性的浪费</p>\n<h3 id=\"分布式服务架构\"><a href=\"#分布式服务架构\" class=\"headerlink\" title=\"分布式服务架构\"></a>分布式服务架构</h3><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的**分布式服务框架(RPC)**是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111036.png\" alt=\"img\"></p>\n<h3 id=\"流式计算架构\"><a href=\"#流式计算架构\" class=\"headerlink\" title=\"流式计算架构\"></a>流式计算架构</h3><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于<strong>提高机器利用率的资源调度和治理中心</strong>(SOA)[Service Oriented Architecture]是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111136.png\" alt=\"img\"></p>\n<h2 id=\"RPC\"><a href=\"#RPC\" class=\"headerlink\" title=\"RPC\"></a>RPC</h2><h3 id=\"什么是-RPC？\"><a href=\"#什么是-RPC？\" class=\"headerlink\" title=\"什么是 RPC？\"></a>什么是 RPC？</h3><p>RPC【Remote Procedure Call】是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。</p>\n<p>也就是说两台服务器 A，B，一个应用部署在 A 服务器上，想要调用 B 服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。为什么要用 RPC 呢？就是无法在一个进程内，甚至一个计算机内通过本地调用的方式完成的需求，比如不同的系统间的通讯，甚至不同的组织间的通讯，由于计算能力需要横向扩展，需要在多台机器组成的集群上部署应用。RPC 就是要像调用本地的函数一样去调远程函数。</p>\n<p>推荐阅读文章：<a href=\"https://www.jianshu.com/p/2accc2840a1b\">https://www.jianshu.com/p/2accc2840a1b</a></p>\n<h3 id=\"RPC-基本原理\"><a href=\"#RPC-基本原理\" class=\"headerlink\" title=\"RPC 基本原理\"></a>RPC 基本原理</h3><p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111312.png\" alt=\"img\"></p>\n<h3 id=\"步骤解析：\"><a href=\"#步骤解析：\" class=\"headerlink\" title=\"步骤解析：\"></a>步骤解析：</h3><p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111426.png\" alt=\"img\"></p>\n<p>RPC 的两个核心模块：通讯、序列化！</p>\n<h2 id=\"测试环境搭建\"><a href=\"#测试环境搭建\" class=\"headerlink\" title=\"测试环境搭建\"></a>测试环境搭建</h2><h3 id=\"Dubbo\"><a href=\"#Dubbo\" class=\"headerlink\" title=\"Dubbo\"></a>Dubbo</h3><p>Apache Dubbo<code>|ˈdʌbəʊ|</code>是一款高性能、轻量级的开源 Java RPC 框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。</p>\n<p>dubbo 官网 <a href=\"http://dubbo.apache.org/zh-cn/index.html\">http://dubbo.apache.org/zh-cn/index.html</a></p>\n<p>1.了解 Dubbo 的特性</p>\n<p>2.查看官方文档</p>\n<p><strong>dubbo 基本概念</strong></p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413112417.png\" alt=\"img\" style=\"zoom:67%;\" />\n\n<p><strong>服务提供者（Provider）：</strong>暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n<p><strong>服务消费者（Consumer）：</strong>调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n<p><strong>注册中心（Registry）：</strong>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</p>\n<p><strong>监控中心（Monitor）：</strong>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</p>\n<p>调用关系说明</p>\n<blockquote>\n<p>服务容器负责启动，加载，运行服务提供者。</p>\n</blockquote>\n<blockquote>\n<p>服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n</blockquote>\n<blockquote>\n<p>服务消费者在启动时，向注册中心订阅自己所需的服务。</p>\n</blockquote>\n<blockquote>\n<p>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</p>\n</blockquote>\n<blockquote>\n<p>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n</blockquote>\n<blockquote>\n<p>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</p>\n</blockquote>\n<h3 id=\"Dubbo-环境搭建\"><a href=\"#Dubbo-环境搭建\" class=\"headerlink\" title=\"Dubbo 环境搭建\"></a>Dubbo 环境搭建</h3><ul>\n<li><p>安装 Zookeeper 注册中心</p>\n<ol>\n<li><p>点击下载<a href=\"https://downloads.apache.org/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz\">zookeeper</a>，直接解压</p>\n</li>\n<li><p>运行<code>/bin/zkServer.cmd</code>，初次运行会报错，没有<code>zoo.cfg</code>配置文件</p>\n</li>\n<li><p>修改 zoo.cfg 配置文件</p>\n<p>将 conf 文件夹下面的 zoo_sample.cfg 复制一份改名为 zoo.cfg 即可。</p>\n</li>\n</ol>\n</li>\n</ul>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413155414.png\" alt=\"image-20210413155414083\" style=\"zoom: 67%;\" />\n\n<h3 id=\"安装-Dubbo-admin\"><a href=\"#安装-Dubbo-admin\" class=\"headerlink\" title=\"安装 Dubbo-admin\"></a>安装 Dubbo-admin</h3><p>dubbo 本身并不是一个服务软件。它其实就是一个 jar 包，能够帮你的 java 程序连接到 zookeeper，并利用 zookeeper 消费、提供服务。</p>\n<p>但是为了让用户更好的管理监控众多的 dubbo 服务，官方提供了一个可视化的监控程序 dubbo-admin，不过这个监控即使不装也不影响使用。</p>\n<h4 id=\"1、下载-dubbo-admin\"><a href=\"#1、下载-dubbo-admin\" class=\"headerlink\" title=\"1、下载 dubbo-admin\"></a>1、下载 dubbo-admin</h4><p>地址：<a href=\"https://github.com/apache/dubbo-admin/tree/master\">点击下载</a></p>\n<h4 id=\"2、解压进入目录\"><a href=\"#2、解压进入目录\" class=\"headerlink\" title=\"2、解压进入目录\"></a>2、解压进入目录</h4><p>修改 dubbo-admin\\src\\main\\resources \\application.properties 指定 zookeeper 地址</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">7001</span></span><br><span class=\"line\"><span class=\"attr\">spring.velocity.cache</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"attr\">spring.velocity.charset</span>=<span class=\"string\">UTF-8</span></span><br><span class=\"line\"><span class=\"attr\">spring.velocity.layout-url</span>=<span class=\"string\">/templates/default.vm</span></span><br><span class=\"line\"><span class=\"attr\">spring.messages.fallback-to-system-locale</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"attr\">spring.messages.basename</span>=<span class=\"string\">i18n/message</span></span><br><span class=\"line\"><span class=\"attr\">spring.root.password</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">spring.guest.password</span>=<span class=\"string\">guest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">dubbo.registry.address</span>=<span class=\"string\">zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、在项目目录下打包-dubbo-admin\"><a href=\"#3、在项目目录下打包-dubbo-admin\" class=\"headerlink\" title=\"3、在项目目录下打包 dubbo-admin\"></a>3、在项目目录下打包 dubbo-admin</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package -Dmaven.test.skip=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4、执行-dubbo-admin-target-下的-dubbo-admin-0-0-1-SNAPSHOT-jar\"><a href=\"#4、执行-dubbo-admin-target-下的-dubbo-admin-0-0-1-SNAPSHOT-jar\" class=\"headerlink\" title=\"4、执行 dubbo-admin\\target 下的 dubbo-admin-0.0.1-SNAPSHOT.jar\"></a>4、执行 dubbo-admin\\target 下的 dubbo-admin-0.0.1-SNAPSHOT.jar</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar dubbo-admin-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n\n<p>==【注意：zookeeper 的服务一定要打开！】==</p>\n<p>执行成功，访问<a href=\"localhost:7001\">localhost:7001/</a>，需要输入用户名/密码，默认是<code>root/root</code></p>\n<p>登录成功，查看界面</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413160348.png\" alt=\"image-20210413160348304\"></p>\n<p>安装完成！</p>\n<h3 id=\"SpringBoot-Dubbo-Zookeeper\"><a href=\"#SpringBoot-Dubbo-Zookeeper\" class=\"headerlink\" title=\"SpringBoot + Dubbo + Zookeeper\"></a>SpringBoot + Dubbo + Zookeeper</h3><h4 id=\"1、框架搭建\"><a href=\"#1、框架搭建\" class=\"headerlink\" title=\"1、框架搭建\"></a>1、框架搭建</h4><ol>\n<li><p>启动 zookeeper ！</p>\n</li>\n<li><p>IDEA 创建一个空项目</p>\n</li>\n<li><p>创建一个模块，实现服务提供者：provider-server ， 选择 web 依赖即可</p>\n</li>\n<li><p>项目创建完毕，我们写一个服务，比如卖票的服务</p>\n<p>编写接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kuang.provider.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">TicketService</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">getTicket</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编写实现类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kuang.provider.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TicketServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">TicketService</span> &#123;</span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">getTicket</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">&quot;这是一张来自服务提供者的票&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>创建一个模块，实现服务消费者：consumer-server，选择 web 依赖即可</p>\n</li>\n<li><p>项目创建完毕，我们写一个服务，比如用户买票的服务</p>\n<p>编写 service</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kuang.consumer.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//我们需要去拿去注册中心的服务</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需求：用户 想调用服务提供者的买票服务，应该怎么做？</p>\n</li>\n</ol>\n<h4 id=\"2、服务提供者\"><a href=\"#2、服务提供者\" class=\"headerlink\" title=\"2、服务提供者\"></a>2、服务提供者</h4><ol>\n<li><p>将服务提供者注册到注册中心，我们需要整合 Dubbo 和 zookeeper，所以需要导包</p>\n<p>首先，导入 springboot 与 dubbo 的整合包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.dubbo/dubbo-spring-boot-starter --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.dubbo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.7.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>zookeeper 客户端的包我们去 maven 的仓库下载</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.github.sgroschupf/zkclient --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.sgroschupf<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zkclient<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>【新版的坑】zookeeper 及其依赖包，解决日志冲突，还需要剔除日志依赖；</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 引入zookeeper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-framework<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-recipes<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zookeeper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.14<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--排除这个slf4j-log4j12--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>在 springboot 配置文件中配置 dubbo 相关属性！</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当前应用名字</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.application.name</span>=<span class=\"string\">provider-server</span></span><br><span class=\"line\"><span class=\"comment\">#注册中心地址</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.registry.address</span>=<span class=\"string\">zookeeper://127.0.0.1:2181</span></span><br><span class=\"line\"><span class=\"comment\">#扫描指定包下的服务</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.scan.base-packages</span>=<span class=\"string\">com.luojunjie.service</span></span><br></pre></td></tr></table></figure></li>\n<li><p>在 service 的实现类中配置服务注解，发布服务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luojunjie.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.dubbo.config.annotation.DubboService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> IRVING</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@create</span> 2021-04-13 15:11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span> <span class=\"comment\">//放在spring容器中</span></span><br><span class=\"line\"><span class=\"meta\">@DubboService</span> <span class=\"comment\">//将服务注册到dubbo</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TicketServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">TicketService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getTicket</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;我是一张票！！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑理解 ：应用启动起来，dubbo 就会扫描指定的包下带有@component 注解的服务，将它发布在指定的注册中心中！</strong></p>\n</li>\n</ol>\n<h4 id=\"3、服务消费者\"><a href=\"#3、服务消费者\" class=\"headerlink\" title=\"3、服务消费者\"></a>3、服务消费者</h4><ol>\n<li><p>导入依赖，和服务提供者的依赖一样</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 导入依赖dubbo+zookeeper --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.dubbo/dubbo-spring-boot-starter --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.dubbo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.7.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.github.sgroschupf/zkclient --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.sgroschupf<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zkclient<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 引入zookeeper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-framework<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-recipes<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zookeeper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.14<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--排除这个slf4j-log4j12--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>配置参数</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当前应用名字</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.application.name</span>=<span class=\"string\">consumer-server</span></span><br><span class=\"line\"><span class=\"comment\">#注册中心地址</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.registry.address</span>=<span class=\"string\">zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>本来正常步骤是需要将服务提供者的接口打包，然后用 pom 文件导入，我们这里使用简单的方式，直接将服务的接口拿过来，路径必须保证正确，即和服务提供者相同；</strong></p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162217.png\" alt=\"image-20210413162217567\" style=\"zoom:33%;\" /></li>\n<li><p>完善消费者的服务类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luojunjie.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.dubbo.config.annotation.DubboReference;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> IRVING</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@create</span> 2021-04-13 15:12</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@DubboReference</span>  <span class=\"comment\">//远程引用指定的服务，他会按照全类名进行匹配，看谁给注册中心注册了这个全类名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TicketService ticketService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//想拿到票</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">bugTicket</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;在注册中心中拿到=&gt;&quot;</span>+ticketService.getTicket());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>测试！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luojunjie;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.luojunjie.service.UserService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConsumerServerApplicationTests</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">contextLoads</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        userService.bugTicket();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"4、启动测试\"><a href=\"#4、启动测试\" class=\"headerlink\" title=\"4、启动测试\"></a>4、启动测试</h4><ol>\n<li><p>开启 zookeeper</p>\n</li>\n<li><p>打开 dubbo-admin 实施监控</p>\n</li>\n<li><p>开启服务者</p>\n</li>\n<li><p>消费者测试结果：</p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162711.png\" alt=\"image-20210413162711583\" style=\"zoom:50%;\" /></li>\n<li><p>dubbo-admin 监控中心</p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162803.png\" alt=\"image-20210413162802948\" style=\"zoom:50%;\" /></li>\n</ol>\n","more":"<h2 id=\"什么是分布式系统？\"><a href=\"#什么是分布式系统？\" class=\"headerlink\" title=\"什么是分布式系统？\"></a>什么是分布式系统？</h2><p>分布式是若干独立计算机的集合，这些计算机对于用户来说就像单个相关系统。</p>\n<p>分布式系统是由一组通过网络进行通信、为了完成共同的任务而协调工作的计算机节点组成的系统。分布式系统的出现是为了用廉价的、普通的机器完成单个计算机无法完成的计算、存储任务。其目的是<strong>利用更多的机器，处理更多的数据</strong>。</p>\n<p>首先需要明确的是，只有当单个节点的处理能力无法满足日益增长的计算、存储任务的时候，且硬件的提升（加内存、加磁盘、使用更好的 CPU）高昂到得不偿失的时候，应用程序也不能进一步优化的时候，我们才需要考虑分布式系统。因为，分布式系统要解决的问题本身就是和单机系统一样的，而由于分布式系统多节点、通过网络通信的拓扑结构，会引入很多单机系统没有的问题，为了解决这些问题又会引入更多的机制、协议，带来更多的问题。</p>\n<h2 id=\"Dubbo-文档\"><a href=\"#Dubbo-文档\" class=\"headerlink\" title=\"Dubbo 文档\"></a>Dubbo 文档</h2><p>随着互联网的发展，网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行，急需<strong>一个治理系统</strong>确保架构有条不紊的演进。</p>\n<p>在 Dubbo 的官网文档有这样一张图</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110820.png\" alt=\"img\"></p>\n<h3 id=\"单一应用架构\"><a href=\"#单一应用架构\" class=\"headerlink\" title=\"单一应用架构\"></a><strong>单一应用架构</strong></h3><p>当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本。此时，用于简化增删改查工作量的数据访问框架(ORM)是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110902.png\" alt=\"img\"></p>\n<p>适用于小型网站，小型管理系统，将所有功能都部署到一个功能里，简单易用。</p>\n<p><strong>缺点：</strong></p>\n<p>1、性能扩展比较难</p>\n<p>2、协同开发问题</p>\n<p>3、不利于升级维护</p>\n<h3 id=\"垂直应用架构\"><a href=\"#垂直应用架构\" class=\"headerlink\" title=\"垂直应用架构\"></a>垂直应用架构</h3><p>当访问量逐渐增大，单一应用增加机器带来的加速度越来越小，将应用拆成互不相干的几个应用，以提升效率。此时，用于加速前端页面开发的 Web 框架(MVC)是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413110941.png\" alt=\"img\"></p>\n<p>通过切分业务来实现各个模块独立部署，降低了维护和部署的难度，团队各司其职更易管理，性能扩展也更方便，更有针对性。</p>\n<p>缺点：公用模块无法重复利用，开发性的浪费</p>\n<h3 id=\"分布式服务架构\"><a href=\"#分布式服务架构\" class=\"headerlink\" title=\"分布式服务架构\"></a>分布式服务架构</h3><p>当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。此时，用于提高业务复用及整合的**分布式服务框架(RPC)**是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111036.png\" alt=\"img\"></p>\n<h3 id=\"流式计算架构\"><a href=\"#流式计算架构\" class=\"headerlink\" title=\"流式计算架构\"></a>流式计算架构</h3><p>当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。此时，用于<strong>提高机器利用率的资源调度和治理中心</strong>(SOA)[Service Oriented Architecture]是关键。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111136.png\" alt=\"img\"></p>\n<h2 id=\"RPC\"><a href=\"#RPC\" class=\"headerlink\" title=\"RPC\"></a>RPC</h2><h3 id=\"什么是-RPC？\"><a href=\"#什么是-RPC？\" class=\"headerlink\" title=\"什么是 RPC？\"></a>什么是 RPC？</h3><p>RPC【Remote Procedure Call】是指远程过程调用，是一种进程间通信方式，他是一种技术的思想，而不是规范。它允许程序调用另一个地址空间（通常是共享网络的另一台机器上）的过程或函数，而不用程序员显式编码这个远程调用的细节。即程序员无论是调用本地的还是远程的函数，本质上编写的调用代码基本相同。</p>\n<p>也就是说两台服务器 A，B，一个应用部署在 A 服务器上，想要调用 B 服务器上应用提供的函数/方法，由于不在一个内存空间，不能直接调用，需要通过网络来表达调用的语义和传达调用的数据。为什么要用 RPC 呢？就是无法在一个进程内，甚至一个计算机内通过本地调用的方式完成的需求，比如不同的系统间的通讯，甚至不同的组织间的通讯，由于计算能力需要横向扩展，需要在多台机器组成的集群上部署应用。RPC 就是要像调用本地的函数一样去调远程函数。</p>\n<p>推荐阅读文章：<a href=\"https://www.jianshu.com/p/2accc2840a1b\">https://www.jianshu.com/p/2accc2840a1b</a></p>\n<h3 id=\"RPC-基本原理\"><a href=\"#RPC-基本原理\" class=\"headerlink\" title=\"RPC 基本原理\"></a>RPC 基本原理</h3><p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111312.png\" alt=\"img\"></p>\n<h3 id=\"步骤解析：\"><a href=\"#步骤解析：\" class=\"headerlink\" title=\"步骤解析：\"></a>步骤解析：</h3><p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413111426.png\" alt=\"img\"></p>\n<p>RPC 的两个核心模块：通讯、序列化！</p>\n<h2 id=\"测试环境搭建\"><a href=\"#测试环境搭建\" class=\"headerlink\" title=\"测试环境搭建\"></a>测试环境搭建</h2><h3 id=\"Dubbo\"><a href=\"#Dubbo\" class=\"headerlink\" title=\"Dubbo\"></a>Dubbo</h3><p>Apache Dubbo<code>|ˈdʌbəʊ|</code>是一款高性能、轻量级的开源 Java RPC 框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。</p>\n<p>dubbo 官网 <a href=\"http://dubbo.apache.org/zh-cn/index.html\">http://dubbo.apache.org/zh-cn/index.html</a></p>\n<p>1.了解 Dubbo 的特性</p>\n<p>2.查看官方文档</p>\n<p><strong>dubbo 基本概念</strong></p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413112417.png\" alt=\"img\" style=\"zoom:67%;\" />\n\n<p><strong>服务提供者（Provider）：</strong>暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n<p><strong>服务消费者（Consumer）：</strong>调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n<p><strong>注册中心（Registry）：</strong>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</p>\n<p><strong>监控中心（Monitor）：</strong>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</p>\n<p>调用关系说明</p>\n<blockquote>\n<p>服务容器负责启动，加载，运行服务提供者。</p>\n</blockquote>\n<blockquote>\n<p>服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n</blockquote>\n<blockquote>\n<p>服务消费者在启动时，向注册中心订阅自己所需的服务。</p>\n</blockquote>\n<blockquote>\n<p>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。</p>\n</blockquote>\n<blockquote>\n<p>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n</blockquote>\n<blockquote>\n<p>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。</p>\n</blockquote>\n<h3 id=\"Dubbo-环境搭建\"><a href=\"#Dubbo-环境搭建\" class=\"headerlink\" title=\"Dubbo 环境搭建\"></a>Dubbo 环境搭建</h3><ul>\n<li><p>安装 Zookeeper 注册中心</p>\n<ol>\n<li><p>点击下载<a href=\"https://downloads.apache.org/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9-bin.tar.gz\">zookeeper</a>，直接解压</p>\n</li>\n<li><p>运行<code>/bin/zkServer.cmd</code>，初次运行会报错，没有<code>zoo.cfg</code>配置文件</p>\n</li>\n<li><p>修改 zoo.cfg 配置文件</p>\n<p>将 conf 文件夹下面的 zoo_sample.cfg 复制一份改名为 zoo.cfg 即可。</p>\n</li>\n</ol>\n</li>\n</ul>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413155414.png\" alt=\"image-20210413155414083\" style=\"zoom: 67%;\" />\n\n<h3 id=\"安装-Dubbo-admin\"><a href=\"#安装-Dubbo-admin\" class=\"headerlink\" title=\"安装 Dubbo-admin\"></a>安装 Dubbo-admin</h3><p>dubbo 本身并不是一个服务软件。它其实就是一个 jar 包，能够帮你的 java 程序连接到 zookeeper，并利用 zookeeper 消费、提供服务。</p>\n<p>但是为了让用户更好的管理监控众多的 dubbo 服务，官方提供了一个可视化的监控程序 dubbo-admin，不过这个监控即使不装也不影响使用。</p>\n<h4 id=\"1、下载-dubbo-admin\"><a href=\"#1、下载-dubbo-admin\" class=\"headerlink\" title=\"1、下载 dubbo-admin\"></a>1、下载 dubbo-admin</h4><p>地址：<a href=\"https://github.com/apache/dubbo-admin/tree/master\">点击下载</a></p>\n<h4 id=\"2、解压进入目录\"><a href=\"#2、解压进入目录\" class=\"headerlink\" title=\"2、解压进入目录\"></a>2、解压进入目录</h4><p>修改 dubbo-admin\\src\\main\\resources \\application.properties 指定 zookeeper 地址</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">7001</span></span><br><span class=\"line\"><span class=\"attr\">spring.velocity.cache</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"attr\">spring.velocity.charset</span>=<span class=\"string\">UTF-8</span></span><br><span class=\"line\"><span class=\"attr\">spring.velocity.layout-url</span>=<span class=\"string\">/templates/default.vm</span></span><br><span class=\"line\"><span class=\"attr\">spring.messages.fallback-to-system-locale</span>=<span class=\"string\">false</span></span><br><span class=\"line\"><span class=\"attr\">spring.messages.basename</span>=<span class=\"string\">i18n/message</span></span><br><span class=\"line\"><span class=\"attr\">spring.root.password</span>=<span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">spring.guest.password</span>=<span class=\"string\">guest</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">dubbo.registry.address</span>=<span class=\"string\">zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3、在项目目录下打包-dubbo-admin\"><a href=\"#3、在项目目录下打包-dubbo-admin\" class=\"headerlink\" title=\"3、在项目目录下打包 dubbo-admin\"></a>3、在项目目录下打包 dubbo-admin</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package -Dmaven.test.skip=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4、执行-dubbo-admin-target-下的-dubbo-admin-0-0-1-SNAPSHOT-jar\"><a href=\"#4、执行-dubbo-admin-target-下的-dubbo-admin-0-0-1-SNAPSHOT-jar\" class=\"headerlink\" title=\"4、执行 dubbo-admin\\target 下的 dubbo-admin-0.0.1-SNAPSHOT.jar\"></a>4、执行 dubbo-admin\\target 下的 dubbo-admin-0.0.1-SNAPSHOT.jar</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar dubbo-admin-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n\n<p>==【注意：zookeeper 的服务一定要打开！】==</p>\n<p>执行成功，访问<a href=\"localhost:7001\">localhost:7001/</a>，需要输入用户名/密码，默认是<code>root/root</code></p>\n<p>登录成功，查看界面</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413160348.png\" alt=\"image-20210413160348304\"></p>\n<p>安装完成！</p>\n<h3 id=\"SpringBoot-Dubbo-Zookeeper\"><a href=\"#SpringBoot-Dubbo-Zookeeper\" class=\"headerlink\" title=\"SpringBoot + Dubbo + Zookeeper\"></a>SpringBoot + Dubbo + Zookeeper</h3><h4 id=\"1、框架搭建\"><a href=\"#1、框架搭建\" class=\"headerlink\" title=\"1、框架搭建\"></a>1、框架搭建</h4><ol>\n<li><p>启动 zookeeper ！</p>\n</li>\n<li><p>IDEA 创建一个空项目</p>\n</li>\n<li><p>创建一个模块，实现服务提供者：provider-server ， 选择 web 依赖即可</p>\n</li>\n<li><p>项目创建完毕，我们写一个服务，比如卖票的服务</p>\n<p>编写接口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kuang.provider.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">TicketService</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">getTicket</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>编写实现类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kuang.provider.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TicketServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">TicketService</span> &#123;</span><br><span class=\"line\">   <span class=\"meta\">@Override</span></span><br><span class=\"line\">   <span class=\"keyword\">public</span> String <span class=\"title function_\">getTicket</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"string\">&quot;这是一张来自服务提供者的票&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>创建一个模块，实现服务消费者：consumer-server，选择 web 依赖即可</p>\n</li>\n<li><p>项目创建完毕，我们写一个服务，比如用户买票的服务</p>\n<p>编写 service</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.kuang.consumer.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">   <span class=\"comment\">//我们需要去拿去注册中心的服务</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需求：用户 想调用服务提供者的买票服务，应该怎么做？</p>\n</li>\n</ol>\n<h4 id=\"2、服务提供者\"><a href=\"#2、服务提供者\" class=\"headerlink\" title=\"2、服务提供者\"></a>2、服务提供者</h4><ol>\n<li><p>将服务提供者注册到注册中心，我们需要整合 Dubbo 和 zookeeper，所以需要导包</p>\n<p>首先，导入 springboot 与 dubbo 的整合包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.dubbo/dubbo-spring-boot-starter --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.dubbo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.7.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>zookeeper 客户端的包我们去 maven 的仓库下载</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.github.sgroschupf/zkclient --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.sgroschupf<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zkclient<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>【新版的坑】zookeeper 及其依赖包，解决日志冲突，还需要剔除日志依赖；</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 引入zookeeper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-framework<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-recipes<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zookeeper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.14<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--排除这个slf4j-log4j12--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>在 springboot 配置文件中配置 dubbo 相关属性！</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当前应用名字</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.application.name</span>=<span class=\"string\">provider-server</span></span><br><span class=\"line\"><span class=\"comment\">#注册中心地址</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.registry.address</span>=<span class=\"string\">zookeeper://127.0.0.1:2181</span></span><br><span class=\"line\"><span class=\"comment\">#扫描指定包下的服务</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.scan.base-packages</span>=<span class=\"string\">com.luojunjie.service</span></span><br></pre></td></tr></table></figure></li>\n<li><p>在 service 的实现类中配置服务注解，发布服务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luojunjie.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.dubbo.config.annotation.DubboService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> IRVING</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@create</span> 2021-04-13 15:11</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span> <span class=\"comment\">//放在spring容器中</span></span><br><span class=\"line\"><span class=\"meta\">@DubboService</span> <span class=\"comment\">//将服务注册到dubbo</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TicketServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">TicketService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getTicket</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;我是一张票！！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>逻辑理解 ：应用启动起来，dubbo 就会扫描指定的包下带有@component 注解的服务，将它发布在指定的注册中心中！</strong></p>\n</li>\n</ol>\n<h4 id=\"3、服务消费者\"><a href=\"#3、服务消费者\" class=\"headerlink\" title=\"3、服务消费者\"></a>3、服务消费者</h4><ol>\n<li><p>导入依赖，和服务提供者的依赖一样</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 导入依赖dubbo+zookeeper --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.dubbo/dubbo-spring-boot-starter --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.dubbo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dubbo-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.7.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/com.github.sgroschupf/zkclient --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.sgroschupf<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zkclient<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 引入zookeeper --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-framework<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.curator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>curator-recipes<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.12.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.zookeeper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>zookeeper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.14<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--排除这个slf4j-log4j12--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>配置参数</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当前应用名字</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.application.name</span>=<span class=\"string\">consumer-server</span></span><br><span class=\"line\"><span class=\"comment\">#注册中心地址</span></span><br><span class=\"line\"><span class=\"attr\">dubbo.registry.address</span>=<span class=\"string\">zookeeper://127.0.0.1:2181</span></span><br></pre></td></tr></table></figure></li>\n<li><p><strong>本来正常步骤是需要将服务提供者的接口打包，然后用 pom 文件导入，我们这里使用简单的方式，直接将服务的接口拿过来，路径必须保证正确，即和服务提供者相同；</strong></p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162217.png\" alt=\"image-20210413162217567\" style=\"zoom:33%;\" /></li>\n<li><p>完善消费者的服务类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luojunjie.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.dubbo.config.annotation.DubboReference;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> IRVING</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@create</span> 2021-04-13 15:12</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@DubboReference</span>  <span class=\"comment\">//远程引用指定的服务，他会按照全类名进行匹配，看谁给注册中心注册了这个全类名</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> TicketService ticketService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//想拿到票</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">bugTicket</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;在注册中心中拿到=&gt;&quot;</span>+ticketService.getTicket());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>测试！</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.luojunjie;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.luojunjie.service.UserService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ConsumerServerApplicationTests</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">contextLoads</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        userService.bugTicket();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"4、启动测试\"><a href=\"#4、启动测试\" class=\"headerlink\" title=\"4、启动测试\"></a>4、启动测试</h4><ol>\n<li><p>开启 zookeeper</p>\n</li>\n<li><p>打开 dubbo-admin 实施监控</p>\n</li>\n<li><p>开启服务者</p>\n</li>\n<li><p>消费者测试结果：</p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162711.png\" alt=\"image-20210413162711583\" style=\"zoom:50%;\" /></li>\n<li><p>dubbo-admin 监控中心</p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20210413162803.png\" alt=\"image-20210413162802948\" style=\"zoom:50%;\" /></li>\n</ol>\n","categories":[{"name":"随笔小记","path":"api/categories/随笔小记.json"}],"tags":[{"name":"笔记","path":"api/tags/笔记.json"},{"name":"分布式","path":"api/tags/分布式.json"}]}