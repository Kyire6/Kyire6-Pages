{"title":"Lombok 消除冗余代码","slug":"Lombok消除冗余代码","date":"2022-08-01T08:07:57.000Z","updated":"2022-08-01T08:07:57.000Z","comments":true,"path":"api/articles/Lombok消除冗余代码.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807160143.png"],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h2><p><code>Lombok</code> 是一款 Java 开发插件，使得 <code>Java</code> 开发者可以通过其定义的一些注解来消除业务过程中冗余的代码，尤其是简单的 <code>Java</code> 模型对象（<code>POJO</code>）。而当我们如果在开发环境中使用 <code>Lombok</code> 开发插件后，可以省出重复构建，诸如 <code>hashCode</code> 和 <code>equals</code> 这样的方法以及各种业务对象模型的 <code>accessor</code> 和 <code>ToString</code> 等方法的大量时间。对于这些方法，它能够在编译源代码期间自动帮我们生产这些方法，并没有如反射那样降低程序的性能。</p>\n<p>可以用来帮助开发人员消除冗余的代码，对于一些简单的 <code>Java</code> 对象（<code>POJO</code>），它通过注释实现这一目的。</p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>Lombok 的实现原理，基于 <a href=\"https://jcp.org/en/jsr/detail?id=269\">JSR269(Pluggable Annotation Processing API)</a> 规范，自定义编译器注解处理器，用于在 Javac 编译阶段时，扫描使用到 Lombok 定义的注解的类，进行自定义的代码生成。</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p>在 IDEA 中，已经提供了 <a href=\"https://plugins.jetbrains.com/plugin/6317-lombok\">IntelliJ Lombok plugin</a> 插件，方便我们使用 Lombok。安装方式很简单，只需要在 IDEA Plugins 功能中，搜索 Lombok 关键字即可。如下图所示：</p>\n<p>IDEA 2020.3 版本以上已经内置 Lombok Plugin 插件，无需手动安装</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807160143.png\" alt=\"img\"></p>\n<h2 id=\"Lombok-常用注解说明\"><a href=\"#Lombok-常用注解说明\" class=\"headerlink\" title=\"Lombok 常用注解说明\"></a><strong>Lombok 常用注解说明</strong></h2><table>\n<thead>\n<tr>\n<th>@NonNull</th>\n<th>给方法参数增加这个注解会自动在方法内对该参数进行是否为空的校验，如果为空，则抛出 NPE （<code>NullPointerException</code>）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>@Cleanup</td>\n<td>自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成 <code>try-finally</code>这样的代码来关闭流</td>\n</tr>\n<tr>\n<td>@Getter/@Setter</td>\n<td>用在属性上，再也不用自己手写 setter 和 getter 方法了，还可以指定访问范围</td>\n</tr>\n<tr>\n<td>@ToString</td>\n<td>用在类上，可以自动覆写 toString 方法，当然还可以加其他参数，例如@ <code>ToString</code>(<code>exclude</code>=”<code>id</code>”)排除 id 属性，或者<code>@ToString</code>(<code>callSuper</code>=<code>true</code>,<code>includeFieldNames</code>=<code>true</code>)调用父类的 toString 方法，包含所有属性</td>\n</tr>\n<tr>\n<td>@EqualsAndHashCode</td>\n<td>用在类上，自动生成<code>equals</code>方法和<code>hashCode</code>方法</td>\n</tr>\n<tr>\n<td>@NoArgsConstructor</td>\n<td><code>@RequiredArgsConstructor</code> <code>and @AllArgsConstructor</code>：用在类上，自动生成无参构造和使用所有参数的构造函数以及把所有@NonNull 属性作为参数的构造函数，如果指定<code>staticName</code>= <code>“of”</code>参数，同时还会生成一个返回类对象的静态工厂方法，比使用构造函数方便很多</td>\n</tr>\n<tr>\n<td>@Data</td>\n<td>注解在类上，相当于同时使用了<code>@ToString</code>、<code>@EqualsAndHashCode</code>、<code>@Gette</code>r、<code>@Setter</code>和<code>@RequiredArgsConstrutor</code>这些注解，对于<code>POJO</code>类十分有用</td>\n</tr>\n<tr>\n<td>@Value</td>\n<td>用在类上，是<code>@Data</code>的不可变形式，相当于为属性添加 final 声明，只提供<code>getter</code>方法，而不提供<code>setter</code>方法</td>\n</tr>\n<tr>\n<td>@Builder</td>\n<td>用在类、构造器、方法上，为你提供复杂的<code>builder APIs</code>，让你可以像如下方式一样调用<code>Person.builder().name(&quot;Adam Savage&quot;).city(&quot;San Francisco&quot;).job(&quot;Mythbusters&quot;).job(&quot;Unchained Reaction&quot;).build();</code>更多说明参考<code>Builder</code></td>\n</tr>\n<tr>\n<td>@SneakyThrows</td>\n<td>自动抛受检异常，而无需显式在方法上使用 throws 语句</td>\n</tr>\n<tr>\n<td>@Synchronized</td>\n<td>用在方法上，将方法声明为同步的，并自动加锁，而锁对象是一个私有的属性<code>$lock</code>或$<code>LOCK，</code>而<code>java</code>中的<code>synchronized</code>关键字锁对象是<code>this</code>，锁在<code>this</code>或者自己的类对象上存在副作用，就是你不能阻止非受控代码去锁 this 或者类对象，这可能会导致竞争条件或者其它线程错误</td>\n</tr>\n<tr>\n<td>@Getter(lazy=true)</td>\n<td>可以替代经典的<code>Double Check Lock</code>样板代码</td>\n</tr>\n<tr>\n<td>@Log</td>\n<td>根据不同的注解生成不同类型的<code>log</code>对象，但是实例名称都是<code>log</code>，有六种可选实现类</td>\n</tr>\n<tr>\n<td>val</td>\n<td>用在局部变量前面，相当于将变量声明为 final</td>\n</tr>\n</tbody></table>\n<h2 id=\"Lombok-代码示范\"><a href=\"#Lombok-代码示范\" class=\"headerlink\" title=\"Lombok 代码示范\"></a><strong>Lombok 代码示范</strong></h2><ul>\n<li><h6 id=\"Nonnull-为方法和构造函数的参数提供非空检查\"><a href=\"#Nonnull-为方法和构造函数的参数提供非空检查\" class=\"headerlink\" title=\"@Nonnull 为方法和构造函数的参数提供非空检查\"></a>@Nonnull 为方法和构造函数的参数提供非空检查</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">void</span> <span class=\"title function_\">notNullExample</span>(<span class=\"params\"><span class=\"meta\">@NonNull</span> <span class=\"built_in\">String</span> <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span>.<span class=\"title function_\">length</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//=&gt;相当于</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">void</span> <span class=\"title function_\">notNullExample</span>(<span class=\"params\"><span class=\"built_in\">String</span> <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span> != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span>.<span class=\"title function_\">length</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(<span class=\"string\">&quot;null&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Cleanup-自动释放资源\"><a href=\"#Cleanup-自动释放资源\" class=\"headerlink\" title=\"@Cleanup 自动释放资源\"></a>@Cleanup 自动释放资源</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Cleanup</span> <span class=\"title class_\">InputStream</span> inputStream = <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"title class_\">FileNotFoundException</span> e) &#123;</span><br><span class=\"line\">        e.<span class=\"title function_\">printStackTrace</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//=&gt;相当于</span></span><br><span class=\"line\">    <span class=\"title class_\">InputStream</span> inputStream = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        inputStream = <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"title class_\">FileNotFoundException</span> e) &#123;</span><br><span class=\"line\">        e.<span class=\"title function_\">printStackTrace</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inputStream != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                inputStream.<span class=\"title function_\">close</span>();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (<span class=\"title class_\">IOException</span> e) &#123;</span><br><span class=\"line\">                e.<span class=\"title function_\">printStackTrace</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Getter-Setter-对类的属性字段自动生成-Get-Set-方法\"><a href=\"#Getter-Setter-对类的属性字段自动生成-Get-Set-方法\" class=\"headerlink\" title=\"@Getter/@Setter 对类的属性字段自动生成 Get/Set 方法\"></a>@Getter/@Setter 对类的属性字段自动生成 Get/Set 方法</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Setter(AccessLevel.PUBLIC)</span></span><br><span class=\"line\"><span class=\"meta\">@Getter(AccessLevel.PROTECTED)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\"><span class=\"keyword\">private</span> String shap;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"ToString-为类生成一个-toString-方法\"><a href=\"#ToString-为类生成一个-toString-方法\" class=\"headerlink\" title=\"@ToString 为类生成一个 toString 方法\"></a>@ToString 为类生成一个 toString 方法</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ToString</span>(exclude = <span class=\"string\">&quot;id&quot;</span>, callSuper = <span class=\"literal\">true</span>, includeFieldNames = <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int age;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//输出LombokDemo(super=LombokDemo@48524010, name=null, age=0)</span></span><br><span class=\"line\">        <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"EqualsAndHashCode-为类生成-equals-和-hasCode-方法\"><a href=\"#EqualsAndHashCode-为类生成-equals-和-hasCode-方法\" class=\"headerlink\" title=\"@EqualsAndHashCode 为类生成 equals 和 hasCode 方法\"></a>@EqualsAndHashCode 为类生成 equals 和 hasCode 方法</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode</span>(exclude = &#123;<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;shape&quot;</span>&#125;, callSuper = <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> shap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"NoArgsConstructor，-RequiredArgsConstructor-and-AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器\"><a href=\"#NoArgsConstructor，-RequiredArgsConstructor-and-AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器\" class=\"headerlink\" title=\"@NoArgsConstructor，@RequiredArgsConstructor and @AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器\"></a>@NoArgsConstructor，@RequiredArgsConstructor and @AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor</span>(staticName = <span class=\"string\">&quot;of&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> int id;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> shap;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int age;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;circle&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//使用静态工厂方法</span></span><br><span class=\"line\">        <span class=\"title class_\">LombokDemo</span>.<span class=\"title function_\">of</span>(<span class=\"number\">2</span>, <span class=\"string\">&quot;circle&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>();</span><br><span class=\"line\">        <span class=\"comment\">//包含所有参数</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;circle&quot;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Data-在类上使用，相当于同时使用-ToString、-EqualsAndHashCode、-Getter、-Setter-和-RequiredArgsConstructor-这些注解\"><a href=\"#Data-在类上使用，相当于同时使用-ToString、-EqualsAndHashCode、-Getter、-Setter-和-RequiredArgsConstructor-这些注解\" class=\"headerlink\" title=\"@Data 在类上使用，相当于同时使用@ToString、@EqualsAndHashCode、@Getter、@Setter 和@RequiredArgsConstructor 这些注解\"></a>@Data 在类上使用，相当于同时使用@ToString、@EqualsAndHashCode、@Getter、@Setter 和@RequiredArgsConstructor 这些注解</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Menu</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String shopId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String skuMenuId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String skuName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String normalizeSkuName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dishMenuId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dishName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dishNum;</span><br><span class=\"line\">    <span class=\"comment\">//默认阈值</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">float</span> <span class=\"variable\">thresHold</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//新阈值</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">float</span> <span class=\"variable\">newThresHold</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//总得分</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">float</span> <span class=\"variable\">totalScore</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Value-为属性添加-final-声明\"><a href=\"#Value-为属性添加-final-声明\" class=\"headerlink\" title=\"@Value 为属性添加 final 声明\"></a>@Value 为属性添加 final 声明</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Value</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String shap;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"comment\">//相当于</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Builder-提供构建值对象方式\"><a href=\"#Builder-提供构建值对象方式\" class=\"headerlink\" title=\"@Builder 提供构建值对象方式\"></a>@Builder 提供构建值对象方式</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BuilderExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int age;</span><br><span class=\"line\">    <span class=\"meta\">@Singular</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">Set</span>&lt;<span class=\"title class_\">String</span>&gt; occupations;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">BuilderExample</span> test = <span class=\"title class_\">BuilderExample</span>.<span class=\"title function_\">builder</span>().<span class=\"title function_\">age</span>(<span class=\"number\">11</span>).<span class=\"title function_\">name</span>(<span class=\"string\">&quot;test&quot;</span>).<span class=\"title function_\">build</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"SneakyThrows-自动抛受检异常\"><a href=\"#SneakyThrows-自动抛受检异常\" class=\"headerlink\" title=\"@SneakyThrows 自动抛受检异常\"></a>@SneakyThrows 自动抛受检异常</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.SneakyThrows;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows()</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">read</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">write</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UnsupportedEncodingException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//相当于</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">read</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> FileNotFoundException &#123;</span><br><span class=\"line\">        <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">write</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> UnsupportedEncodingException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UnsupportedEncodingException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Synchronized-将方法声明同步并自动加锁\"><a href=\"#Synchronized-将方法声明同步并自动加锁\" class=\"headerlink\" title=\"@Synchronized 将方法声明同步并自动加锁\"></a>@Synchronized 将方法声明同步并自动加锁</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SynchronizedDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Synchronized</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">hello</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//相当于</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> final <span class=\"title class_\">Object</span> $LOCK = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">hello</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        synchronized ($LOCK) &#123;</span><br><span class=\"line\">            <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Getter-lazy-true-可以替代经典的-Double-check-Lock-样板代码\"><a href=\"#Getter-lazy-true-可以替代经典的-Double-check-Lock-样板代码\" class=\"headerlink\" title=\"@Getter(lazy=true)可以替代经典的 Double check Lock 样板代码\"></a>@Getter(lazy=true)可以替代经典的 Double check Lock 样板代码</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterLazyExample</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Getter(lazy = true)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">double</span>[] cached = expensive();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span>[] expensive() &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span>[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">1000000</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; result.length; i++) &#123;</span><br><span class=\"line\">            result[i] = Math.asin(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 相当于如下所示:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.atomic.AtomicReference;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterLazyExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> AtomicReference&lt;java.lang.Object&gt; cached = <span class=\"keyword\">new</span> <span class=\"title class_\">AtomicReference</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span>[] getCached() &#123;</span><br><span class=\"line\">        java.lang.<span class=\"type\">Object</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.cached.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>.cached) &#123;</span><br><span class=\"line\">                value = <span class=\"built_in\">this</span>.cached.get();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">final</span> <span class=\"type\">double</span>[] actualValue = expensive();</span><br><span class=\"line\">                    value = actualValue == <span class=\"literal\">null</span> ? <span class=\"built_in\">this</span>.cached : actualValue;</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.cached.set(value);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"type\">double</span>[]) (value == <span class=\"built_in\">this</span>.cached ? <span class=\"literal\">null</span> : value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span>[] expensive() &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span>[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">1000000</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; result.length; i++) &#123;</span><br><span class=\"line\">            result[i] = Math.asin(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Log-根据不同的注解生成不同类型的-log-对象\"><a href=\"#Log-根据不同的注解生成不同类型的-log-对象\" class=\"headerlink\" title=\"@Log 根据不同的注解生成不同类型的 log 对象\"></a>@Log 根据不同的注解生成不同类型的 log 对象</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CommonsLog</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.commons.logging.LogFactory.getLog(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@Log</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> java.util.logging.Logger.getLogger(LogExample.class.getName());</span><br><span class=\"line\"><span class=\"meta\">@Log4j</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.log4j.Logger.getLogger(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.logging.log4j.LogManager.getLogger(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.slf4j.LoggerFactory.getLogger(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@XSlf4j</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.slf4j.ext.XLoggerFactory.getXLogger(LogExample.class);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"val-将变量声明-final-类型\"><a href=\"#val-将变量声明-final-类型\" class=\"headerlink\" title=\"val 将变量声明 final 类型\"></a>val 将变量声明 final 类型</h6></li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> main(<span class=\"built_in\">String</span>[] args) &#123;</span><br><span class=\"line\">    val sets = <span class=\"keyword\">new</span> HashSet&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">    val lists = <span class=\"keyword\">new</span> ArrayList&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">    val maps = <span class=\"keyword\">new</span> HashMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//=&gt;相当于如下</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"built_in\">Set</span>&lt;<span class=\"built_in\">String</span>&gt; sets2 = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt; lists2 = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; maps2 = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a><strong>前言</strong></h2><p><code>Lombok</code> 是一款 Java 开发插件，使得 <code>Java</code> 开发者可以通过其定义的一些注解来消除业务过程中冗余的代码，尤其是简单的 <code>Java</code> 模型对象（<code>POJO</code>）。而当我们如果在开发环境中使用 <code>Lombok</code> 开发插件后，可以省出重复构建，诸如 <code>hashCode</code> 和 <code>equals</code> 这样的方法以及各种业务对象模型的 <code>accessor</code> 和 <code>ToString</code> 等方法的大量时间。对于这些方法，它能够在编译源代码期间自动帮我们生产这些方法，并没有如反射那样降低程序的性能。</p>\n<p>可以用来帮助开发人员消除冗余的代码，对于一些简单的 <code>Java</code> 对象（<code>POJO</code>），它通过注释实现这一目的。</p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>Lombok 的实现原理，基于 <a href=\"https://jcp.org/en/jsr/detail?id=269\">JSR269(Pluggable Annotation Processing API)</a> 规范，自定义编译器注解处理器，用于在 Javac 编译阶段时，扫描使用到 Lombok 定义的注解的类，进行自定义的代码生成。</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><p>在 IDEA 中，已经提供了 <a href=\"https://plugins.jetbrains.com/plugin/6317-lombok\">IntelliJ Lombok plugin</a> 插件，方便我们使用 Lombok。安装方式很简单，只需要在 IDEA Plugins 功能中，搜索 Lombok 关键字即可。如下图所示：</p>\n<p>IDEA 2020.3 版本以上已经内置 Lombok Plugin 插件，无需手动安装</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220807160143.png\" alt=\"img\"></p>\n<h2 id=\"Lombok-常用注解说明\"><a href=\"#Lombok-常用注解说明\" class=\"headerlink\" title=\"Lombok 常用注解说明\"></a><strong>Lombok 常用注解说明</strong></h2><table>\n<thead>\n<tr>\n<th>@NonNull</th>\n<th>给方法参数增加这个注解会自动在方法内对该参数进行是否为空的校验，如果为空，则抛出 NPE （<code>NullPointerException</code>）</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>@Cleanup</td>\n<td>自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成 <code>try-finally</code>这样的代码来关闭流</td>\n</tr>\n<tr>\n<td>@Getter/@Setter</td>\n<td>用在属性上，再也不用自己手写 setter 和 getter 方法了，还可以指定访问范围</td>\n</tr>\n<tr>\n<td>@ToString</td>\n<td>用在类上，可以自动覆写 toString 方法，当然还可以加其他参数，例如@ <code>ToString</code>(<code>exclude</code>=”<code>id</code>”)排除 id 属性，或者<code>@ToString</code>(<code>callSuper</code>=<code>true</code>,<code>includeFieldNames</code>=<code>true</code>)调用父类的 toString 方法，包含所有属性</td>\n</tr>\n<tr>\n<td>@EqualsAndHashCode</td>\n<td>用在类上，自动生成<code>equals</code>方法和<code>hashCode</code>方法</td>\n</tr>\n<tr>\n<td>@NoArgsConstructor</td>\n<td><code>@RequiredArgsConstructor</code> <code>and @AllArgsConstructor</code>：用在类上，自动生成无参构造和使用所有参数的构造函数以及把所有@NonNull 属性作为参数的构造函数，如果指定<code>staticName</code>= <code>“of”</code>参数，同时还会生成一个返回类对象的静态工厂方法，比使用构造函数方便很多</td>\n</tr>\n<tr>\n<td>@Data</td>\n<td>注解在类上，相当于同时使用了<code>@ToString</code>、<code>@EqualsAndHashCode</code>、<code>@Gette</code>r、<code>@Setter</code>和<code>@RequiredArgsConstrutor</code>这些注解，对于<code>POJO</code>类十分有用</td>\n</tr>\n<tr>\n<td>@Value</td>\n<td>用在类上，是<code>@Data</code>的不可变形式，相当于为属性添加 final 声明，只提供<code>getter</code>方法，而不提供<code>setter</code>方法</td>\n</tr>\n<tr>\n<td>@Builder</td>\n<td>用在类、构造器、方法上，为你提供复杂的<code>builder APIs</code>，让你可以像如下方式一样调用<code>Person.builder().name(&quot;Adam Savage&quot;).city(&quot;San Francisco&quot;).job(&quot;Mythbusters&quot;).job(&quot;Unchained Reaction&quot;).build();</code>更多说明参考<code>Builder</code></td>\n</tr>\n<tr>\n<td>@SneakyThrows</td>\n<td>自动抛受检异常，而无需显式在方法上使用 throws 语句</td>\n</tr>\n<tr>\n<td>@Synchronized</td>\n<td>用在方法上，将方法声明为同步的，并自动加锁，而锁对象是一个私有的属性<code>$lock</code>或$<code>LOCK，</code>而<code>java</code>中的<code>synchronized</code>关键字锁对象是<code>this</code>，锁在<code>this</code>或者自己的类对象上存在副作用，就是你不能阻止非受控代码去锁 this 或者类对象，这可能会导致竞争条件或者其它线程错误</td>\n</tr>\n<tr>\n<td>@Getter(lazy=true)</td>\n<td>可以替代经典的<code>Double Check Lock</code>样板代码</td>\n</tr>\n<tr>\n<td>@Log</td>\n<td>根据不同的注解生成不同类型的<code>log</code>对象，但是实例名称都是<code>log</code>，有六种可选实现类</td>\n</tr>\n<tr>\n<td>val</td>\n<td>用在局部变量前面，相当于将变量声明为 final</td>\n</tr>\n</tbody></table>\n<h2 id=\"Lombok-代码示范\"><a href=\"#Lombok-代码示范\" class=\"headerlink\" title=\"Lombok 代码示范\"></a><strong>Lombok 代码示范</strong></h2><ul>\n<li><h6 id=\"Nonnull-为方法和构造函数的参数提供非空检查\"><a href=\"#Nonnull-为方法和构造函数的参数提供非空检查\" class=\"headerlink\" title=\"@Nonnull 为方法和构造函数的参数提供非空检查\"></a>@Nonnull 为方法和构造函数的参数提供非空检查</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">void</span> <span class=\"title function_\">notNullExample</span>(<span class=\"params\"><span class=\"meta\">@NonNull</span> <span class=\"built_in\">String</span> <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span>.<span class=\"title function_\">length</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//=&gt;相当于</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">void</span> <span class=\"title function_\">notNullExample</span>(<span class=\"params\"><span class=\"built_in\">String</span> <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span> != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span>.<span class=\"title function_\">length</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NullPointerException</span>(<span class=\"string\">&quot;null&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Cleanup-自动释放资源\"><a href=\"#Cleanup-自动释放资源\" class=\"headerlink\" title=\"@Cleanup 自动释放资源\"></a>@Cleanup 自动释放资源</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Cleanup</span> <span class=\"title class_\">InputStream</span> inputStream = <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"title class_\">FileNotFoundException</span> e) &#123;</span><br><span class=\"line\">        e.<span class=\"title function_\">printStackTrace</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//=&gt;相当于</span></span><br><span class=\"line\">    <span class=\"title class_\">InputStream</span> inputStream = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        inputStream = <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(args[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (<span class=\"title class_\">FileNotFoundException</span> e) &#123;</span><br><span class=\"line\">        e.<span class=\"title function_\">printStackTrace</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inputStream != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                inputStream.<span class=\"title function_\">close</span>();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (<span class=\"title class_\">IOException</span> e) &#123;</span><br><span class=\"line\">                e.<span class=\"title function_\">printStackTrace</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Getter-Setter-对类的属性字段自动生成-Get-Set-方法\"><a href=\"#Getter-Setter-对类的属性字段自动生成-Get-Set-方法\" class=\"headerlink\" title=\"@Getter/@Setter 对类的属性字段自动生成 Get/Set 方法\"></a>@Getter/@Setter 对类的属性字段自动生成 Get/Set 方法</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Setter(AccessLevel.PUBLIC)</span></span><br><span class=\"line\"><span class=\"meta\">@Getter(AccessLevel.PROTECTED)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\"><span class=\"keyword\">private</span> String shap;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"ToString-为类生成一个-toString-方法\"><a href=\"#ToString-为类生成一个-toString-方法\" class=\"headerlink\" title=\"@ToString 为类生成一个 toString 方法\"></a>@ToString 为类生成一个 toString 方法</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@ToString</span>(exclude = <span class=\"string\">&quot;id&quot;</span>, callSuper = <span class=\"literal\">true</span>, includeFieldNames = <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int age;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//输出LombokDemo(super=LombokDemo@48524010, name=null, age=0)</span></span><br><span class=\"line\">        <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"EqualsAndHashCode-为类生成-equals-和-hasCode-方法\"><a href=\"#EqualsAndHashCode-为类生成-equals-和-hasCode-方法\" class=\"headerlink\" title=\"@EqualsAndHashCode 为类生成 equals 和 hasCode 方法\"></a>@EqualsAndHashCode 为类生成 equals 和 hasCode 方法</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EqualsAndHashCode</span>(exclude = &#123;<span class=\"string\">&quot;id&quot;</span>, <span class=\"string\">&quot;shape&quot;</span>&#125;, callSuper = <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> shap;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"NoArgsConstructor，-RequiredArgsConstructor-and-AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器\"><a href=\"#NoArgsConstructor，-RequiredArgsConstructor-and-AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器\" class=\"headerlink\" title=\"@NoArgsConstructor，@RequiredArgsConstructor and @AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器\"></a>@NoArgsConstructor，@RequiredArgsConstructor and @AllArgsConstructor，分别为类自动生成无参构造，指定参数构造器和包含所有参数构造器</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor</span>(staticName = <span class=\"string\">&quot;of&quot;</span>)</span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> int id;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> shap;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int age;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;circle&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//使用静态工厂方法</span></span><br><span class=\"line\">        <span class=\"title class_\">LombokDemo</span>.<span class=\"title function_\">of</span>(<span class=\"number\">2</span>, <span class=\"string\">&quot;circle&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>();</span><br><span class=\"line\">        <span class=\"comment\">//包含所有参数</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">LombokDemo</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;circle&quot;</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Data-在类上使用，相当于同时使用-ToString、-EqualsAndHashCode、-Getter、-Setter-和-RequiredArgsConstructor-这些注解\"><a href=\"#Data-在类上使用，相当于同时使用-ToString、-EqualsAndHashCode、-Getter、-Setter-和-RequiredArgsConstructor-这些注解\" class=\"headerlink\" title=\"@Data 在类上使用，相当于同时使用@ToString、@EqualsAndHashCode、@Getter、@Setter 和@RequiredArgsConstructor 这些注解\"></a>@Data 在类上使用，相当于同时使用@ToString、@EqualsAndHashCode、@Getter、@Setter 和@RequiredArgsConstructor 这些注解</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Menu</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String shopId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String skuMenuId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String skuName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String normalizeSkuName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dishMenuId;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dishName;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String dishNum;</span><br><span class=\"line\">    <span class=\"comment\">//默认阈值</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">float</span> <span class=\"variable\">thresHold</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//新阈值</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">float</span> <span class=\"variable\">newThresHold</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//总得分</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">float</span> <span class=\"variable\">totalScore</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Value-为属性添加-final-声明\"><a href=\"#Value-为属性添加-final-声明\" class=\"headerlink\" title=\"@Value 为属性添加 final 声明\"></a>@Value 为属性添加 final 声明</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Value</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LombokDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String shap;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"comment\">//相当于</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Builder-提供构建值对象方式\"><a href=\"#Builder-提供构建值对象方式\" class=\"headerlink\" title=\"@Builder 提供构建值对象方式\"></a>@Builder 提供构建值对象方式</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BuilderExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> int age;</span><br><span class=\"line\">    <span class=\"meta\">@Singular</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">Set</span>&lt;<span class=\"title class_\">String</span>&gt; occupations;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">BuilderExample</span> test = <span class=\"title class_\">BuilderExample</span>.<span class=\"title function_\">builder</span>().<span class=\"title function_\">age</span>(<span class=\"number\">11</span>).<span class=\"title function_\">name</span>(<span class=\"string\">&quot;test&quot;</span>).<span class=\"title function_\">build</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"SneakyThrows-自动抛受检异常\"><a href=\"#SneakyThrows-自动抛受检异常\" class=\"headerlink\" title=\"@SneakyThrows 自动抛受检异常\"></a>@SneakyThrows 自动抛受检异常</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> lombok.SneakyThrows;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows()</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">read</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@SneakyThrows</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">write</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UnsupportedEncodingException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//相当于</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">read</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> FileNotFoundException &#123;</span><br><span class=\"line\">        <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">write</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> UnsupportedEncodingException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UnsupportedEncodingException</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Synchronized-将方法声明同步并自动加锁\"><a href=\"#Synchronized-将方法声明同步并自动加锁\" class=\"headerlink\" title=\"@Synchronized 将方法声明同步并自动加锁\"></a>@Synchronized 将方法声明同步并自动加锁</h6></li>\n</ul>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SynchronizedDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Synchronized</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">hello</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//相当于</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> final <span class=\"title class_\">Object</span> $LOCK = <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">void</span> <span class=\"title function_\">hello</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        synchronized ($LOCK) &#123;</span><br><span class=\"line\">            <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Getter-lazy-true-可以替代经典的-Double-check-Lock-样板代码\"><a href=\"#Getter-lazy-true-可以替代经典的-Double-check-Lock-样板代码\" class=\"headerlink\" title=\"@Getter(lazy=true)可以替代经典的 Double check Lock 样板代码\"></a>@Getter(lazy=true)可以替代经典的 Double check Lock 样板代码</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterLazyExample</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Getter(lazy = true)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">double</span>[] cached = expensive();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span>[] expensive() &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span>[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">1000000</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; result.length; i++) &#123;</span><br><span class=\"line\">            result[i] = Math.asin(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 相当于如下所示:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.atomic.AtomicReference;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">GetterLazyExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> AtomicReference&lt;java.lang.Object&gt; cached = <span class=\"keyword\">new</span> <span class=\"title class_\">AtomicReference</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span>[] getCached() &#123;</span><br><span class=\"line\">        java.lang.<span class=\"type\">Object</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> <span class=\"built_in\">this</span>.cached.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">synchronized</span> (<span class=\"built_in\">this</span>.cached) &#123;</span><br><span class=\"line\">                value = <span class=\"built_in\">this</span>.cached.get();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (value == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">final</span> <span class=\"type\">double</span>[] actualValue = expensive();</span><br><span class=\"line\">                    value = actualValue == <span class=\"literal\">null</span> ? <span class=\"built_in\">this</span>.cached : actualValue;</span><br><span class=\"line\">                    <span class=\"built_in\">this</span>.cached.set(value);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"type\">double</span>[]) (value == <span class=\"built_in\">this</span>.cached ? <span class=\"literal\">null</span> : value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span>[] expensive() &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span>[] result = <span class=\"keyword\">new</span> <span class=\"title class_\">double</span>[<span class=\"number\">1000000</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; result.length; i++) &#123;</span><br><span class=\"line\">            result[i] = Math.asin(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"Log-根据不同的注解生成不同类型的-log-对象\"><a href=\"#Log-根据不同的注解生成不同类型的-log-对象\" class=\"headerlink\" title=\"@Log 根据不同的注解生成不同类型的 log 对象\"></a>@Log 根据不同的注解生成不同类型的 log 对象</h6></li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CommonsLog</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.commons.logging.LogFactory.getLog(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@Log</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> java.util.logging.Logger.getLogger(LogExample.class.getName());</span><br><span class=\"line\"><span class=\"meta\">@Log4j</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.log4j.Logger.getLogger(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@Log4j2</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.apache.logging.log4j.LogManager.getLogger(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.slf4j.LoggerFactory.getLogger(LogExample.class);</span><br><span class=\"line\"><span class=\"meta\">@XSlf4j</span> <span class=\"type\">Creates</span> <span class=\"variable\">log</span> <span class=\"operator\">=</span> org.slf4j.ext.XLoggerFactory.getXLogger(LogExample.class);</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><h6 id=\"val-将变量声明-final-类型\"><a href=\"#val-将变量声明-final-类型\" class=\"headerlink\" title=\"val 将变量声明 final 类型\"></a>val 将变量声明 final 类型</h6></li>\n</ul>\n<figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> main(<span class=\"built_in\">String</span>[] args) &#123;</span><br><span class=\"line\">    val sets = <span class=\"keyword\">new</span> HashSet&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">    val lists = <span class=\"keyword\">new</span> ArrayList&lt;<span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">    val maps = <span class=\"keyword\">new</span> HashMap&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//=&gt;相当于如下</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"built_in\">Set</span>&lt;<span class=\"built_in\">String</span>&gt; sets2 = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"built_in\">List</span>&lt;<span class=\"built_in\">String</span>&gt; lists2 = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"built_in\">Map</span>&lt;<span class=\"built_in\">String</span>, <span class=\"built_in\">String</span>&gt; maps2 = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"后端开发","path":"api/categories/后端开发.json"}],"tags":[{"name":"技巧","path":"api/tags/技巧.json"},{"name":"开发工具","path":"api/tags/开发工具.json"}]}