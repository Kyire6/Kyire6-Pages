{"title":"SpringBoot2 核心技术","slug":"SpringBoot2核心技术","date":"2022-05-18T12:53:32.000Z","updated":"2022-05-18T12:53:32.000Z","comments":true,"path":"api/articles/SpringBoot2核心技术.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515171610.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515224340.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515232710.png"],"content":"<h2 id=\"基础入门\"><a href=\"#基础入门\" class=\"headerlink\" title=\"基础入门\"></a>基础入门</h2><h3 id=\"1、Spring-生态圈\"><a href=\"#1、Spring-生态圈\" class=\"headerlink\" title=\"1、Spring 生态圈\"></a>1、Spring 生态圈</h3><blockquote>\n<p>Spring 官网：<a href=\"https://spring.io/\">https://spring.io</a></p>\n</blockquote>\n<p><strong>Spring 能做什么？</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515171610.png\" alt=\"image-20220515171609895\"></p>\n<p><strong>Spring 的生态：</strong></p>\n<ul>\n<li>web 开发</li>\n<li>数据访问</li>\n<li>安全控制</li>\n<li>分布式</li>\n<li>消息服务</li>\n<li>移动开发</li>\n<li>批处理</li>\n<li>…</li>\n</ul>\n<h3 id=\"2、为什么使用-SpringBoot？\"><a href=\"#2、为什么使用-SpringBoot？\" class=\"headerlink\" title=\"2、为什么使用 SpringBoot？\"></a>2、为什么使用 SpringBoot？</h3><blockquote>\n<p>Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can “just run”.</p>\n<p>能快速创建出生产级别的 Spring 应用。</p>\n</blockquote>\n<p><strong>SpringBoot 的优点：</strong></p>\n<ul>\n<li>创建独立 Spring 应用</li>\n<li>内嵌 web 服务器</li>\n<li>自动 starter 依赖，简化构建配置</li>\n<li>自动配置 Spring 以及第三方功能</li>\n<li>提供生产级别的监控、健康检查及外部化配置</li>\n<li>无代码生成、无需编写 XML</li>\n<li>SpringBoot 是整合 Spring 技术栈的一站式框架</li>\n<li>SpringBoot 是简化 Spring 技术栈的快速开发脚手架</li>\n</ul>\n<p><strong>SpringBoot 的缺点：</strong></p>\n<ul>\n<li>人称版本帝，社区活跃，迭代快，需要时刻关注版本变化</li>\n<li>封装太深，内部原理复杂，不容易精通</li>\n</ul>\n<h3 id=\"3、时代背景\"><a href=\"#3、时代背景\" class=\"headerlink\" title=\"3、时代背景\"></a>3、时代背景</h3><p>SpringBoot 诞生的时代背景，为了解决什么样的应用场景？</p>\n<h4 id=\"3-1、微服务\"><a href=\"#3-1、微服务\" class=\"headerlink\" title=\"3.1、微服务\"></a>3.1、微服务</h4><p><a href=\"https://martinfowler.com/articles/microservices.html\">James Lewis and Martin Fowler (2014)</a> 提出微服务完整概念。</p>\n<blockquote>\n<p>In short, the <strong>microservice architectural style</strong> is an approach to developing a single application as a <strong>suite of small services</strong>, each <strong>running in its own process</strong> and communicating with <strong>lightweight</strong> mechanisms, often an <strong>HTTP</strong> resource API. These services are <strong>built around business capabilities</strong> and <strong>independently deployable</strong> by fully <strong>automated deployment</strong> machinery. There is a <strong>bare minimum of centralized management</strong> of these services, which may be <strong>written in different programming languages</strong> and use different data storage technologies.– <a href=\"https://martinfowler.com/articles/microservices.html\">James Lewis and Martin Fowler (2014)</a></p>\n</blockquote>\n<p><strong>主要提出：</strong></p>\n<ul>\n<li>微服务是一种架构风格</li>\n<li>一个应用拆分为一组小型服务</li>\n<li>每个服务运行在自己的进程内，也就是可独立部署和升级</li>\n<li>服务之间使用轻量级 HTTP 交互</li>\n<li>服务围绕业务功能拆分</li>\n<li>可以由全自动部署机制独立部署</li>\n<li>去中心化，服务自治。服务可以使用不同的语言、不同的存储技术</li>\n</ul>\n<h4 id=\"3-2、分布式\"><a href=\"#3-2、分布式\" class=\"headerlink\" title=\"3.2、分布式\"></a>3.2、分布式</h4><p>分布式架构，讲得是系统服务分布在多个物理隔离的节点上运行，统一对外提供服务。从用户层面来看，就是一组服务节点组成一个系统。</p>\n<p><strong>分布式有哪些困难：</strong></p>\n<ul>\n<li>远程调用</li>\n<li>服务发现</li>\n<li>负载均衡</li>\n<li>服务容错</li>\n<li>配置管理</li>\n<li>服务监控</li>\n<li>链路追踪</li>\n<li>日志管理</li>\n<li>任务调度</li>\n<li>…</li>\n</ul>\n<p><strong>分布式的解决方案：</strong></p>\n<p>==SpringBoot + SpringCloud==</p>\n<h3 id=\"4、如何学习-SpringBoot？\"><a href=\"#4、如何学习-SpringBoot？\" class=\"headerlink\" title=\"4、如何学习 SpringBoot？\"></a>4、如何学习 SpringBoot？</h3><blockquote>\n<p>官方文档：<a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/\">https://docs.spring.io/spring-boot/docs/current/reference/html/</a></p>\n<p>版本更新日志：<a href=\"https://github.com/spring-projects/spring-boot/wiki#release-notes\">https://github.com/spring-projects/spring-boot/wiki#release-notes</a></p>\n</blockquote>\n<h3 id=\"5、SpringBoot-特点\"><a href=\"#5、SpringBoot-特点\" class=\"headerlink\" title=\"5、SpringBoot 特点\"></a>5、SpringBoot 特点</h3><p>首先快速搭建一个<code>SpringBoot</code>应用</p>\n<h4 id=\"5-1、准备工作\"><a href=\"#5-1、准备工作\" class=\"headerlink\" title=\"5.1、准备工作\"></a>5.1、准备工作</h4><p><strong>系统要求</strong></p>\n<ul>\n<li><a href=\"https://www.java.com/\">Java 8</a> &amp; 兼容 java14 .</li>\n<li>Maven 3.3+</li>\n<li>idea 2022.1</li>\n</ul>\n<h5 id=\"maven-设置\"><a href=\"#maven-设置\" class=\"headerlink\" title=\"maven 设置\"></a>maven 设置</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-aliyun<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus aliyun<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jdk-1.8<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">jdk</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建一个-maven-项目\"><a href=\"#创建一个-maven-项目\" class=\"headerlink\" title=\"创建一个 maven 项目\"></a>创建一个 maven 项目</h5><ul>\n<li>创建工程</li>\n</ul>\n<p>过程略，使用 idea 创建即可</p>\n<ul>\n<li>引入依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建主程序</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 主程序类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@SpringBootApplication</span>：这是一个SpringBoot应用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编写接口</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">handle01</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello, Spring Boot 2!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>简化配置</li>\n</ul>\n<p><code>application.properties</code></p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">server</span>.<span class=\"keyword\">port</span>=8888</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试</li>\n</ul>\n<p>运行启动类中的 main 方法，访问接口测试：localhost:8888/hello</p>\n<h4 id=\"5-2、依赖管理\"><a href=\"#5-2、依赖管理\" class=\"headerlink\" title=\"5.2、依赖管理\"></a>5.2、依赖管理</h4><ul>\n<li><strong>父项目做依赖管理</strong></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父项目 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- spring-boot-starter-parent的父项目 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 几乎声明了所有开发中常用的依赖的版本号，自动版本仲裁机制 --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>开发导入 starter 场景启动器</strong></li>\n</ul>\n<p>官方支持的的 starter 列表：<a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using-boot-starter\">Spring Boot Starters</a></p>\n<p><code>spring-boot-starter-*</code>：这个 <code>*</code> 代表的就是某种场景，引入场景启动器可以帮助我们简化开发，依赖管理</p>\n<p>第三方场景启动器：<code>*-spring-boot-starter</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 所有的场景启动器最底层的依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>无需关注版本号，自动根据场景启动器版本仲裁（父项目）</strong></p>\n<ol>\n<li>引入依赖默认都可以不写版本</li>\n<li>引入非版本仲裁的 jar，要写版本号。</li>\n</ol>\n</li>\n<li><p><strong>可以修改默认版本号</strong></p>\n<ol>\n<li>查看 spring-boot-dependencies 里面规定当前依赖的版本 用的 key</li>\n<li>在当前项目里面重写配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;properties&gt;</span></span><br><span class=\"line\">\t<span class=\"section\">&lt;mysql.version&gt;</span><span class=\"attribute\">5</span>.<span class=\"number\">1</span>.<span class=\"number\">43</span>&lt;/mysql.version&gt;</span><br><span class=\"line\"><span class=\"section\">&lt;/properties&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-3、自动配置\"><a href=\"#5-3、自动配置\" class=\"headerlink\" title=\"5.3、自动配置\"></a>5.3、自动配置</h4><p><code>spring-boot-starter-web</code> 这个场景启动器会帮助我们做好很多配置</p>\n<ul>\n<li><p>自动配置好 Tomcat</p>\n<ul>\n<li>引入 Tomcat 依赖</li>\n<li>配置 Tomcat</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>自动配好 SpringMVC</p>\n</li>\n<li><ul>\n<li>引入 SpringMVC 全套组件</li>\n<li>自动配置好 SpringMVC 常用组件（功能）</li>\n</ul>\n</li>\n<li><p>自动配好 Web 常用功能，如：字符编码问题</p>\n<ul>\n<li>SpringBoot 帮我们配置好了所有 web 开发的常用场景</li>\n</ul>\n</li>\n<li><p>默认的包结构</p>\n<ul>\n<li>主程序所在的包及其下面的所有子包里面的组件都会被扫描进来</li>\n<li>无需以前的包扫描配置</li>\n<li>想要改变扫描路径，@SpringBootApplication(scanBasePackages=”com.vansys”)<ul>\n<li>或者使用@ComponentScan 指定扫描路径</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">@SpringBootApplication</span></span><br><span class=\"line\">等同于</span><br><span class=\"line\"><span class=\"variable\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"variable\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"variable\">@ComponentScan</span>(<span class=\"string\">&quot;com.vansys&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>各种配置拥有默认值<ul>\n<li>默认配置最终都是映射到某个类上，如：MultipartProperties</li>\n<li>配置文件的值最终会绑定在每个类上，这个类会在容器中创建对象</li>\n</ul>\n</li>\n<li>按需加载所有自动配置项<ul>\n<li>非常多的 starter</li>\n<li>引入了哪些场景，相对应的场景才会开启</li>\n<li>SprongBoot 所有的自动配置功能都在 spring-boot-autoconfigure 包里面</li>\n</ul>\n</li>\n<li>…</li>\n</ul>\n<h3 id=\"6、容器功能\"><a href=\"#6、容器功能\" class=\"headerlink\" title=\"6、容器功能\"></a>6、容器功能</h3><h4 id=\"6-1、组件添加\"><a href=\"#6-1、组件添加\" class=\"headerlink\" title=\"6.1、组件添加\"></a>6.1、组件添加</h4><h5 id=\"Configuration\"><a href=\"#Configuration\" class=\"headerlink\" title=\"@Configuration\"></a>@Configuration</h5><ul>\n<li><p>基本使用</p>\n</li>\n<li><p>Full 模式与 Lite 模式</p>\n<ul>\n<li><p>配置类组件之间无依赖关系用 Lite 模式，加速容器的启动过程，减少判断</p>\n</li>\n<li><p>配置类组件之间有依赖关系，方法会被调用得到之前的单实例组件，用 Full 模式</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#############################Configuration使用示例######################################</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1、配置类里面使用<span class=\"doctag\">@Bean</span>标注在方法上给容器注册组件，默认也是单实例的</span></span><br><span class=\"line\"><span class=\"comment\"> * 2、配置类本身也是组件</span></span><br><span class=\"line\"><span class=\"comment\"> * 3、proxyBeanMethods：代理bean的方法</span></span><br><span class=\"line\"><span class=\"comment\"> *      Full(proxyBeanMethods = true)、【保证每个<span class=\"doctag\">@Bean</span>方法被调用多少次返回的组件都是单实例的】</span></span><br><span class=\"line\"><span class=\"comment\"> *      Lite(proxyBeanMethods = false)【每个<span class=\"doctag\">@Bean</span>方法被调用多少次返回的组件都是新创建的】</span></span><br><span class=\"line\"><span class=\"comment\"> *      组件依赖必须使用Full模式默认。其他默认是否Lite模式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration(proxyBeanMethods = false)</span> <span class=\"comment\">//告诉SpringBoot这是一个配置类 == 配置文件</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Full:外部无论对配置类中的这个组件注册方法调用多少次获取的都是之前注册容器中的单实例对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">//给容器中添加组件。以方法名作为组件的id。返回类型就是组件类型。返回的值，就是组件在容器中的实例</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">user01</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">zhangsan</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">        <span class=\"comment\">//user组件依赖了Pet组件</span></span><br><span class=\"line\">        zhangsan.setPet(tomcatPet());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> zhangsan;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;tom&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Pet <span class=\"title function_\">tomcatPet</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Pet</span>(<span class=\"string\">&quot;tomcat&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#########################<span class=\"meta\">@Configuration</span>测试代码如下###################################</span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1、返回我们IOC容器</span></span><br><span class=\"line\">        <span class=\"type\">ConfigurableApplicationContext</span> <span class=\"variable\">run</span> <span class=\"operator\">=</span> SpringApplication.run(MainApplication.class, args);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2、查看容器里面的组件</span></span><br><span class=\"line\">        String[] names = run.getBeanDefinitionNames();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String name : names) &#123;</span><br><span class=\"line\">            System.out.println(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3、从容器中获取组件</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Pet</span> <span class=\"variable\">tom01</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;tom&quot;</span>, Pet.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Pet</span> <span class=\"variable\">tom02</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;tom&quot;</span>, Pet.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;组件：&quot;</span>+(tom01 == tom02));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4、com.vansys.config.MyConfig$$EnhancerBySpringCGLIB$$51f1e1ca@1654a892</span></span><br><span class=\"line\">        <span class=\"type\">MyConfig</span> <span class=\"variable\">bean</span> <span class=\"operator\">=</span> run.getBean(MyConfig.class);</span><br><span class=\"line\">        System.out.println(bean);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果@Configuration(proxyBeanMethods = true)代理对象调用方法。SpringBoot总会检查这个组件是否在容器中有。</span></span><br><span class=\"line\">        <span class=\"comment\">//保持组件单实例</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> bean.user01();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user1</span> <span class=\"operator\">=</span> bean.user01();</span><br><span class=\"line\">        System.out.println(user == user1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user01</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;user01&quot;</span>, User.class);</span><br><span class=\"line\">        <span class=\"type\">Pet</span> <span class=\"variable\">tom</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;tom&quot;</span>, Pet.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;用户的宠物：&quot;</span>+(user01.getPet() == tom));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Bean、-Component、-Controller、-Service、-Repository\"><a href=\"#Bean、-Component、-Controller、-Service、-Repository\" class=\"headerlink\" title=\"@Bean、@Component、@Controller、@Service、@Repository\"></a>@Bean、@Component、@Controller、@Service、@Repository</h5><p>在类上使用这些这些注解也可以实现往容器里添加组件</p>\n<h5 id=\"ComponentScan、-Import\"><a href=\"#ComponentScan、-Import\" class=\"headerlink\" title=\"@ComponentScan、@Import\"></a>@ComponentScan、@Import</h5><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给容器中自动创建出这两个类型的组件、默认组件的名字就是全类名</span></span><br><span class=\"line\"><span class=\"keyword\">@Import</span>(&#123;User.class, DBHelper.class&#125;)</span><br><span class=\"line\"><span class=\"variable\">@Configuration</span>(proxyBeanMethods = false) <span class=\"comment\">//告诉SpringBoot这是一个配置类 == 配置文件</span></span><br><span class=\"line\">public class MyConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Conditional\"><a href=\"#Conditional\" class=\"headerlink\" title=\"@Conditional\"></a>@Conditional</h5><p>条件装配：满足@Conditional 指定的条件，则进行组件注入</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515224340.png\" alt=\"image-20220515224340380\"></p>\n<h5 id=\"ImportResource\"><a href=\"#ImportResource\" class=\"headerlink\" title=\"@ImportResource\"></a>@ImportResource</h5><p>原生配置文件引入，可以引入一个 <code>beans.xml</code> 配置文件</p>\n<h4 id=\"6-2、配置绑定\"><a href=\"#6-2、配置绑定\" class=\"headerlink\" title=\"6.2、配置绑定\"></a>6.2、配置绑定</h4><h5 id=\"Component-ConfigurationProperties\"><a href=\"#Component-ConfigurationProperties\" class=\"headerlink\" title=\"@Component + @ConfigurationProperties\"></a>@Component + @ConfigurationProperties</h5><p>通过 <code>prefix</code> 匹配 <code>application.properties</code> 核心配置文件的配置，并指定注入到容器中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 只有在容器中的组件，才会拥有SpringBoot提供的强大功能</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;mycar&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer price;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getBrand</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBrand</span><span class=\"params\">(String brand)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.brand = brand;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getPrice</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPrice</span><span class=\"params\">(Integer price)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.price = price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Car&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;brand=&#x27;&quot;</span> + brand + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, price=&quot;</span> + price +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"EnableConfigurationProperties-ConfigurationProperties\"><a href=\"#EnableConfigurationProperties-ConfigurationProperties\" class=\"headerlink\" title=\"@EnableConfigurationProperties + @ConfigurationProperties\"></a>@EnableConfigurationProperties + @ConfigurationProperties</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties(Car.class)</span></span><br><span class=\"line\"><span class=\"comment\">//1、开启Car配置绑定功能</span></span><br><span class=\"line\"><span class=\"comment\">//2、把这个Car这个组件自动注册到容器中</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyConfig</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Spring 注解详解：<a href=\"https://www.bilibili.com/video/BV1gW411W7wy\">https://www.bilibili.com/video/BV1gW411W7wy</a></p>\n</blockquote>\n<h3 id=\"7、自动配置原理入门\"><a href=\"#7、自动配置原理入门\" class=\"headerlink\" title=\"7、自动配置原理入门\"></a>7、自动配置原理入门</h3><h4 id=\"7-1、引导加载自动配置类\"><a href=\"#7-1、引导加载自动配置类\" class=\"headerlink\" title=\"7.1、引导加载自动配置类\"></a>7.1、引导加载自动配置类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(</span></span><br><span class=\"line\"><span class=\"meta\">    excludeFilters = &#123;@Filter(</span></span><br><span class=\"line\"><span class=\"meta\">    type = FilterType.CUSTOM,</span></span><br><span class=\"line\"><span class=\"meta\">    classes = &#123;TypeExcludeFilter.class&#125;</span></span><br><span class=\"line\"><span class=\"meta\">), @Filter(</span></span><br><span class=\"line\"><span class=\"meta\">    type = FilterType.CUSTOM,</span></span><br><span class=\"line\"><span class=\"meta\">    classes = &#123;AutoConfigurationExcludeFilter.class&#125;</span></span><br><span class=\"line\"><span class=\"meta\">)&#125;</span></span><br><span class=\"line\"><span class=\"meta\">)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>SpringBootConfiguration</p>\n<ul>\n<li>@Configuration：表明当前是一个配置类</li>\n</ul>\n</li>\n<li><p>@ComponentScan</p>\n<ul>\n<li>指定扫描哪些包下的组件</li>\n</ul>\n</li>\n<li><p>@EnableAutoConfiguration</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@AutoConfigurationPackage</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;AutoConfigurationImportSelector.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableAutoConfiguration &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">ENABLED_OVERRIDE_PROPERTY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;spring.boot.enableautoconfiguration&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;?&gt;[] exclude() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    String[] excludeName() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>@AutoConfigurationPackage</li>\n</ul>\n<p>自动配置包？指定了默认的包规则</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//利用Registrar给容器中导入一系列组件</span></span><br><span class=\"line\"><span class=\"comment\">//将指定的一个包下的所有组件导入进来？MainApplication 所在包下。</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;AutoConfigurationPackages.Registrar.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> AutoConfigurationPackage &#123;</span><br><span class=\"line\">    String[] basePackages() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;?&gt;[] basePackageClasses() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>@Import(AutoConfigurationImportSelector.class)</li>\n</ul>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、利用get<span class=\"constructor\">AutoConfigurationEntry(<span class=\"params\">annotationMetadata</span>)</span>;给容器中批量导入一些组件</span><br><span class=\"line\"><span class=\"number\">2</span>、调用List&lt;String&gt; configurations = get<span class=\"constructor\">CandidateConfigurations(<span class=\"params\">annotationMetadata</span>, <span class=\"params\">attributes</span>)</span>获取到所有需要导入到容器中的配置类</span><br><span class=\"line\"><span class=\"number\">3</span>、利用工厂加载 Map&lt;String, List&lt;String&gt;&gt; load<span class=\"constructor\">SpringFactories(@Nullable ClassLoader <span class=\"params\">classLoader</span>)</span>；得到所有的组件</span><br><span class=\"line\"><span class=\"number\">4</span>、从META-INF/spring.factories位置来加载一个文件。</span><br><span class=\"line\">\t默认扫描我们当前系统里面所有META-INF/spring.factories位置的文件</span><br><span class=\"line\">    spring-boot-autoconfigure-<span class=\"number\">2.6</span>.<span class=\"number\">7.</span><span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">RELEASE</span>.</span></span>jar包里面也有META-INF/spring.factories</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515232710.png\" alt=\"image-20220515232710021\"></p>\n<blockquote>\n<p>spring-boot-autoconfigure-2.6.7.RELEASE.jar/META-INF/spring.factories 文件里面写死了 spring-boot 一启动就要给容器中加载的所有配置类</p>\n</blockquote>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Auto Configure</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.<span class=\"keyword\">function</span>.client.ClientHttpConnectorAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.<span class=\"keyword\">function</span>.client.WebClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-2、按需开启自动配置项\"><a href=\"#7-2、按需开启自动配置项\" class=\"headerlink\" title=\"7.2、按需开启自动配置项\"></a>7.2、按需开启自动配置项</h4><p><code>spring-boot-2.6.7.RELEASE</code> 版本默认提供了 133 个自动配置项，全为 <code>xxxAutoConfiguration</code> 的自动配置类，但是根据 Spring 的 <code>@Conditional</code> 注解，最终会按需配置。</p>\n<h4 id=\"7-3、修改默认配置\"><a href=\"#7-3、修改默认配置\" class=\"headerlink\" title=\"7.3、修改默认配置\"></a>7.3、修改默认配置</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//给容器中加入了文件上传解析器；</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"comment\">//容器中有这个类型组件</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnBean(MultipartResolver.class)</span></span><br><span class=\"line\"><span class=\"comment\">//容器中没有这个名字 multipartResolver 的组件</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean(name = DispatcherServlet.MULTIPART_RESOLVER_BEAN_NAME)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MultipartResolver <span class=\"title function_\">multipartResolver</span><span class=\"params\">(MultipartResolver resolver)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//给@Bean标注的方法传入了对象参数，这个参数的值就会从容器中找。</span></span><br><span class=\"line\">    <span class=\"comment\">//SpringMVC multipartResolver。防止有些用户配置的文件上传解析器不符合规范</span></span><br><span class=\"line\">    <span class=\"comment\">// Detect if the user has created a MultipartResolver but named it incorrectly</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> resolver;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>==SpringBoot 默认会在底层配好所有的组件。但是如果用户自己配置了以用户的优先==</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> CharacterEncodingFilter <span class=\"title function_\">characterEncodingFilter</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ul>\n<li><p>SpringBoot 先加载所有的自动配置类 xxxxxAutoConfiguration</p>\n</li>\n<li><p>每个自动配置类按照条件进行生效，默认都会绑定配置文件指定的值。xxxxProperties 里面拿。xxxProperties 和配置文件进行了绑定</p>\n</li>\n<li><p>生效的配置类就会给容器中装配很多组件</p>\n</li>\n<li><p>只要容器中有这些组件，相当于这些功能就有了</p>\n</li>\n<li><p>定制化配置</p>\n</li>\n<li><ul>\n<li>用户直接自己使用@Bean 替换底层的组件</li>\n<li>用户去看这个组件是获取的配置文件什么值就去修改。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>xxxxxAutoConfiguration —&gt; 组件 —&gt;** **xxxxProperties 里面拿值 —-&gt; application.properties</p>\n</blockquote>\n<h2 id=\"核心功能\"><a href=\"#核心功能\" class=\"headerlink\" title=\"核心功能\"></a>核心功能</h2><h3 id=\"1、配置文件\"><a href=\"#1、配置文件\" class=\"headerlink\" title=\"1、配置文件\"></a>1、配置文件</h3><h4 id=\"1-1、文件类型\"><a href=\"#1-1、文件类型\" class=\"headerlink\" title=\"1.1、文件类型\"></a>1.1、文件类型</h4><ul>\n<li>properties</li>\n</ul>\n<p>同以前的 properties 用法</p>\n<ul>\n<li>yaml</li>\n</ul>\n<p>YAML 是 <code>YAML Ain&#39;t Markup Language</code>（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：<code>Yet Another Markup Language</code>（仍是一种标记语言）。</p>\n<p>非常适合用来做以数据为中心的配置文件</p>\n<p><strong>基本语法</strong></p>\n<ul>\n<li><code>key: value</code>；kv 之间有空格</li>\n<li>大小写敏感</li>\n<li>使用缩进表示层级关系</li>\n<li>缩进不允许使用 tab，只允许空格</li>\n<li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li>\n<li><code>#</code> 表示注释</li>\n<li>‘’ 与 “” 表示字符串内容，会被 转义/不转义</li>\n</ul>\n<p><strong>数据类型</strong></p>\n<ul>\n<li>字面量：单个的、不可再分的值。date、boolean、string、number、null</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">k:</span> <span class=\"string\">v</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对象：键值对的集合。map、hash、set、object</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">行内写法：k:</span> &#123;<span class=\"string\">k1:v1</span>,<span class=\"string\">k2:v2</span>,<span class=\"string\">k3:v3</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#或</span></span><br><span class=\"line\"><span class=\"attr\">k:</span></span><br><span class=\"line\">  <span class=\"attr\">k1:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">  <span class=\"attr\">k2:</span> <span class=\"string\">v2</span></span><br><span class=\"line\">  <span class=\"attr\">K3:</span> <span class=\"string\">v3</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>数组：一组按次序排列的值。array、list、queue</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">行内写法：k:</span> [<span class=\"string\">v1</span>,<span class=\"string\">v2</span>,<span class=\"string\">v3</span>]</span><br><span class=\"line\"><span class=\"comment\">#或</span></span><br><span class=\"line\"><span class=\"attr\">k:</span></span><br><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"string\">v1</span></span><br><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"string\">v2</span></span><br><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"string\">v3</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>示例</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String userName;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Boolean boss;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Date birth;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Pet pet;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String[] interests;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List&lt;String&gt; animal;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Map&lt;String, Object&gt; score;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Set&lt;Double&gt; salarys;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Map&lt;String, List&lt;Pet&gt;&gt; allPets;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Pet</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Double weight;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yaml表示以上对象</span></span><br><span class=\"line\"><span class=\"attr\">person:</span></span><br><span class=\"line\">  <span class=\"attr\">userName:</span> <span class=\"string\">zhangsan</span></span><br><span class=\"line\">  <span class=\"attr\">boss:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">birth:</span> <span class=\"number\">2019</span><span class=\"string\">/12/12</span> <span class=\"number\">20</span><span class=\"string\">:12:33</span></span><br><span class=\"line\">  <span class=\"attr\">age:</span> <span class=\"number\">18</span></span><br><span class=\"line\">  <span class=\"attr\">pet:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">tomcat</span></span><br><span class=\"line\">    <span class=\"attr\">weight:</span> <span class=\"number\">23.4</span></span><br><span class=\"line\">  <span class=\"attr\">interests:</span> [<span class=\"string\">篮球</span>,<span class=\"string\">游泳</span>]</span><br><span class=\"line\">  <span class=\"attr\">animal:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">jerry</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">mario</span></span><br><span class=\"line\">  <span class=\"attr\">score:</span></span><br><span class=\"line\">    <span class=\"attr\">english:</span></span><br><span class=\"line\">      <span class=\"attr\">first:</span> <span class=\"number\">30</span></span><br><span class=\"line\">      <span class=\"attr\">second:</span> <span class=\"number\">40</span></span><br><span class=\"line\">      <span class=\"attr\">third:</span> <span class=\"number\">50</span></span><br><span class=\"line\">    <span class=\"attr\">math:</span> [<span class=\"number\">131</span>,<span class=\"number\">140</span>,<span class=\"number\">148</span>]</span><br><span class=\"line\">    <span class=\"attr\">chinese:</span> &#123;<span class=\"attr\">first:</span> <span class=\"number\">128</span>,<span class=\"attr\">second:</span> <span class=\"number\">136</span>&#125;</span><br><span class=\"line\">  <span class=\"attr\">salarys:</span> [<span class=\"number\">3999</span>,<span class=\"number\">4999.98</span>,<span class=\"number\">5999.99</span>]</span><br><span class=\"line\">  <span class=\"attr\">allPets:</span></span><br><span class=\"line\">    <span class=\"attr\">sick:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">name:</span> <span class=\"string\">tom</span>&#125;</span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">name:</span> <span class=\"string\">jerry</span>,<span class=\"attr\">weight:</span> <span class=\"number\">47</span>&#125;</span><br><span class=\"line\">    <span class=\"attr\">health:</span> [&#123;<span class=\"attr\">name:</span> <span class=\"string\">mario</span>,<span class=\"attr\">weight:</span> <span class=\"number\">47</span>&#125;]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2、配置提示\"><a href=\"#1-2、配置提示\" class=\"headerlink\" title=\"1.2、配置提示\"></a>1.2、配置提示</h4><p>==自定义的类和配置文件绑定一般没有提示==</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 如果在项目中使用 AspectJ，则需要确保注释处理器仅运行一次。 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">proc</span>&gt;</span>none<span class=\"tag\">&lt;/<span class=\"name\">proc</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、Web-开发\"><a href=\"#2、Web-开发\" class=\"headerlink\" title=\"2、Web 开发\"></a>2、Web 开发</h3><h4 id=\"2-1、SpringMVC-自动配置概览\"><a href=\"#2-1、SpringMVC-自动配置概览\" class=\"headerlink\" title=\"2.1、SpringMVC 自动配置概览\"></a>2.1、SpringMVC 自动配置概览</h4><p>Spring Boot provides auto-configuration for Spring MVC that <strong>works well with most applications.(大多场景我们都无需自定义配置)</strong></p>\n<p>The auto-configuration adds the following features on top of Spring’s defaults:</p>\n<ul>\n<li><p>Inclusion of <code>ContentNegotiatingViewResolver</code> and <code>BeanNameViewResolver</code> beans.</p>\n</li>\n<li><ul>\n<li>内容协商视图解析器和 BeanName 视图解析器</li>\n</ul>\n</li>\n<li><p>Support for serving static resources, including support for WebJars (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-static-content\">later in this document</a>)).</p>\n</li>\n<li><ul>\n<li>静态资源（包括 webjars）</li>\n</ul>\n</li>\n<li><p>Automatic registration of <code>Converter</code>, <code>GenericConverter</code>, and <code>Formatter</code> beans.</p>\n</li>\n<li><ul>\n<li>自动注册 <code>Converter，GenericConverter，Formatter</code></li>\n</ul>\n</li>\n<li><p>Support for <code>HttpMessageConverters</code> (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-message-converters\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>支持 <code>HttpMessageConverters</code> （后来我们配合内容协商理解原理）</li>\n</ul>\n</li>\n<li><p>Automatic registration of <code>MessageCodesResolver</code> (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-message-codes\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>自动注册 <code>MessageCodesResolver</code> （国际化用）</li>\n</ul>\n</li>\n<li><p>Static <code>index.html</code> support.</p>\n</li>\n<li><ul>\n<li>静态 index.html 页支持</li>\n</ul>\n</li>\n<li><p>Custom <code>Favicon</code> support (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-favicon\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>自定义 <code>Favicon</code></li>\n</ul>\n</li>\n<li><p>Automatic use of a <code>ConfigurableWebBindingInitializer</code> bean (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-web-binding-initializer\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>自动使用 <code>ConfigurableWebBindingInitializer</code> ，（DataBinder 负责将请求数据绑定到 JavaBean 上）</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>If you want to keep those Spring Boot MVC customizations and make more <a href=\"https://docs.spring.io/spring/docs/5.2.9.RELEASE/spring-framework-reference/web.html#mvc\">MVC customizations</a> (interceptors, formatters, view controllers, and other features), you can add your own <code>@Configuration</code> class of type <code>WebMvcConfigurer</code> but <strong>without</strong> <code>@EnableWebMvc</code>.</p>\n<p><strong>不用@EnableWebMvc 注解。使用</strong> <code>@Configuration**</code> <strong>+</strong> <code>WebMvcConfigurer</code> <strong>自定义规则</strong></p>\n</blockquote>\n<blockquote>\n<p>If you want to provide custom instances of <code>RequestMappingHandlerMapping</code>, <code>RequestMappingHandlerAdapter</code>, or <code>ExceptionHandlerExceptionResolver</code>, and still keep the Spring Boot MVC customizations, you can declare a bean of type <code>WebMvcRegistrations</code> and use it to provide custom instances of those components.</p>\n<p><strong>声明</strong> <code>WebMvcRegistrations</code> <strong>改变默认底层组件</strong></p>\n</blockquote>\n<blockquote>\n<p>If you want to take complete control of Spring MVC, you can add your own <code>@Configuration</code> annotated with <code>@EnableWebMvc</code>, or alternatively add your own <code>@Configuration</code>-annotated <code>DelegatingWebMvcConfiguration</code> as described in the Javadoc of <code>@EnableWebMvc</code>.</p>\n<p><strong>使用</strong> ==@EnableWebMvc+@Configuration+DelegatingWebMvcConfiguration 全面接管 SpringMVC==</p>\n</blockquote>\n","more":"<h2 id=\"基础入门\"><a href=\"#基础入门\" class=\"headerlink\" title=\"基础入门\"></a>基础入门</h2><h3 id=\"1、Spring-生态圈\"><a href=\"#1、Spring-生态圈\" class=\"headerlink\" title=\"1、Spring 生态圈\"></a>1、Spring 生态圈</h3><blockquote>\n<p>Spring 官网：<a href=\"https://spring.io/\">https://spring.io</a></p>\n</blockquote>\n<p><strong>Spring 能做什么？</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515171610.png\" alt=\"image-20220515171609895\"></p>\n<p><strong>Spring 的生态：</strong></p>\n<ul>\n<li>web 开发</li>\n<li>数据访问</li>\n<li>安全控制</li>\n<li>分布式</li>\n<li>消息服务</li>\n<li>移动开发</li>\n<li>批处理</li>\n<li>…</li>\n</ul>\n<h3 id=\"2、为什么使用-SpringBoot？\"><a href=\"#2、为什么使用-SpringBoot？\" class=\"headerlink\" title=\"2、为什么使用 SpringBoot？\"></a>2、为什么使用 SpringBoot？</h3><blockquote>\n<p>Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can “just run”.</p>\n<p>能快速创建出生产级别的 Spring 应用。</p>\n</blockquote>\n<p><strong>SpringBoot 的优点：</strong></p>\n<ul>\n<li>创建独立 Spring 应用</li>\n<li>内嵌 web 服务器</li>\n<li>自动 starter 依赖，简化构建配置</li>\n<li>自动配置 Spring 以及第三方功能</li>\n<li>提供生产级别的监控、健康检查及外部化配置</li>\n<li>无代码生成、无需编写 XML</li>\n<li>SpringBoot 是整合 Spring 技术栈的一站式框架</li>\n<li>SpringBoot 是简化 Spring 技术栈的快速开发脚手架</li>\n</ul>\n<p><strong>SpringBoot 的缺点：</strong></p>\n<ul>\n<li>人称版本帝，社区活跃，迭代快，需要时刻关注版本变化</li>\n<li>封装太深，内部原理复杂，不容易精通</li>\n</ul>\n<h3 id=\"3、时代背景\"><a href=\"#3、时代背景\" class=\"headerlink\" title=\"3、时代背景\"></a>3、时代背景</h3><p>SpringBoot 诞生的时代背景，为了解决什么样的应用场景？</p>\n<h4 id=\"3-1、微服务\"><a href=\"#3-1、微服务\" class=\"headerlink\" title=\"3.1、微服务\"></a>3.1、微服务</h4><p><a href=\"https://martinfowler.com/articles/microservices.html\">James Lewis and Martin Fowler (2014)</a> 提出微服务完整概念。</p>\n<blockquote>\n<p>In short, the <strong>microservice architectural style</strong> is an approach to developing a single application as a <strong>suite of small services</strong>, each <strong>running in its own process</strong> and communicating with <strong>lightweight</strong> mechanisms, often an <strong>HTTP</strong> resource API. These services are <strong>built around business capabilities</strong> and <strong>independently deployable</strong> by fully <strong>automated deployment</strong> machinery. There is a <strong>bare minimum of centralized management</strong> of these services, which may be <strong>written in different programming languages</strong> and use different data storage technologies.– <a href=\"https://martinfowler.com/articles/microservices.html\">James Lewis and Martin Fowler (2014)</a></p>\n</blockquote>\n<p><strong>主要提出：</strong></p>\n<ul>\n<li>微服务是一种架构风格</li>\n<li>一个应用拆分为一组小型服务</li>\n<li>每个服务运行在自己的进程内，也就是可独立部署和升级</li>\n<li>服务之间使用轻量级 HTTP 交互</li>\n<li>服务围绕业务功能拆分</li>\n<li>可以由全自动部署机制独立部署</li>\n<li>去中心化，服务自治。服务可以使用不同的语言、不同的存储技术</li>\n</ul>\n<h4 id=\"3-2、分布式\"><a href=\"#3-2、分布式\" class=\"headerlink\" title=\"3.2、分布式\"></a>3.2、分布式</h4><p>分布式架构，讲得是系统服务分布在多个物理隔离的节点上运行，统一对外提供服务。从用户层面来看，就是一组服务节点组成一个系统。</p>\n<p><strong>分布式有哪些困难：</strong></p>\n<ul>\n<li>远程调用</li>\n<li>服务发现</li>\n<li>负载均衡</li>\n<li>服务容错</li>\n<li>配置管理</li>\n<li>服务监控</li>\n<li>链路追踪</li>\n<li>日志管理</li>\n<li>任务调度</li>\n<li>…</li>\n</ul>\n<p><strong>分布式的解决方案：</strong></p>\n<p>==SpringBoot + SpringCloud==</p>\n<h3 id=\"4、如何学习-SpringBoot？\"><a href=\"#4、如何学习-SpringBoot？\" class=\"headerlink\" title=\"4、如何学习 SpringBoot？\"></a>4、如何学习 SpringBoot？</h3><blockquote>\n<p>官方文档：<a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/\">https://docs.spring.io/spring-boot/docs/current/reference/html/</a></p>\n<p>版本更新日志：<a href=\"https://github.com/spring-projects/spring-boot/wiki#release-notes\">https://github.com/spring-projects/spring-boot/wiki#release-notes</a></p>\n</blockquote>\n<h3 id=\"5、SpringBoot-特点\"><a href=\"#5、SpringBoot-特点\" class=\"headerlink\" title=\"5、SpringBoot 特点\"></a>5、SpringBoot 特点</h3><p>首先快速搭建一个<code>SpringBoot</code>应用</p>\n<h4 id=\"5-1、准备工作\"><a href=\"#5-1、准备工作\" class=\"headerlink\" title=\"5.1、准备工作\"></a>5.1、准备工作</h4><p><strong>系统要求</strong></p>\n<ul>\n<li><a href=\"https://www.java.com/\">Java 8</a> &amp; 兼容 java14 .</li>\n<li>Maven 3.3+</li>\n<li>idea 2022.1</li>\n</ul>\n<h5 id=\"maven-设置\"><a href=\"#maven-设置\" class=\"headerlink\" title=\"maven 设置\"></a>maven 设置</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>nexus-aliyun<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Nexus aliyun<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">profiles</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>jdk-1.8<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">activeByDefault</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">activeByDefault</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">jdk</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">jdk</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">activation</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.source</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.source</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.target</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.target</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">profile</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"创建一个-maven-项目\"><a href=\"#创建一个-maven-项目\" class=\"headerlink\" title=\"创建一个 maven 项目\"></a>创建一个 maven 项目</h5><ul>\n<li>创建工程</li>\n</ul>\n<p>过程略，使用 idea 创建即可</p>\n<ul>\n<li>引入依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建主程序</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 主程序类</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@SpringBootApplication</span>：这是一个SpringBoot应用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>编写接口</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">handle01</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Hello, Spring Boot 2!&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>简化配置</li>\n</ul>\n<p><code>application.properties</code></p>\n<figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">server</span>.<span class=\"keyword\">port</span>=8888</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试</li>\n</ul>\n<p>运行启动类中的 main 方法，访问接口测试：localhost:8888/hello</p>\n<h4 id=\"5-2、依赖管理\"><a href=\"#5-2、依赖管理\" class=\"headerlink\" title=\"5.2、依赖管理\"></a>5.2、依赖管理</h4><ul>\n<li><strong>父项目做依赖管理</strong></li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 父项目 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- spring-boot-starter-parent的父项目 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 几乎声明了所有开发中常用的依赖的版本号，自动版本仲裁机制 --&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>开发导入 starter 场景启动器</strong></li>\n</ul>\n<p>官方支持的的 starter 列表：<a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using-boot-starter\">Spring Boot Starters</a></p>\n<p><code>spring-boot-starter-*</code>：这个 <code>*</code> 代表的就是某种场景，引入场景启动器可以帮助我们简化开发，依赖管理</p>\n<p>第三方场景启动器：<code>*-spring-boot-starter</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 所有的场景启动器最底层的依赖 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>无需关注版本号，自动根据场景启动器版本仲裁（父项目）</strong></p>\n<ol>\n<li>引入依赖默认都可以不写版本</li>\n<li>引入非版本仲裁的 jar，要写版本号。</li>\n</ol>\n</li>\n<li><p><strong>可以修改默认版本号</strong></p>\n<ol>\n<li>查看 spring-boot-dependencies 里面规定当前依赖的版本 用的 key</li>\n<li>在当前项目里面重写配置</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;properties&gt;</span></span><br><span class=\"line\">\t<span class=\"section\">&lt;mysql.version&gt;</span><span class=\"attribute\">5</span>.<span class=\"number\">1</span>.<span class=\"number\">43</span>&lt;/mysql.version&gt;</span><br><span class=\"line\"><span class=\"section\">&lt;/properties&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-3、自动配置\"><a href=\"#5-3、自动配置\" class=\"headerlink\" title=\"5.3、自动配置\"></a>5.3、自动配置</h4><p><code>spring-boot-starter-web</code> 这个场景启动器会帮助我们做好很多配置</p>\n<ul>\n<li><p>自动配置好 Tomcat</p>\n<ul>\n<li>引入 Tomcat 依赖</li>\n<li>配置 Tomcat</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li><p>自动配好 SpringMVC</p>\n</li>\n<li><ul>\n<li>引入 SpringMVC 全套组件</li>\n<li>自动配置好 SpringMVC 常用组件（功能）</li>\n</ul>\n</li>\n<li><p>自动配好 Web 常用功能，如：字符编码问题</p>\n<ul>\n<li>SpringBoot 帮我们配置好了所有 web 开发的常用场景</li>\n</ul>\n</li>\n<li><p>默认的包结构</p>\n<ul>\n<li>主程序所在的包及其下面的所有子包里面的组件都会被扫描进来</li>\n<li>无需以前的包扫描配置</li>\n<li>想要改变扫描路径，@SpringBootApplication(scanBasePackages=”com.vansys”)<ul>\n<li>或者使用@ComponentScan 指定扫描路径</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">@SpringBootApplication</span></span><br><span class=\"line\">等同于</span><br><span class=\"line\"><span class=\"variable\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"variable\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"variable\">@ComponentScan</span>(<span class=\"string\">&quot;com.vansys&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>各种配置拥有默认值<ul>\n<li>默认配置最终都是映射到某个类上，如：MultipartProperties</li>\n<li>配置文件的值最终会绑定在每个类上，这个类会在容器中创建对象</li>\n</ul>\n</li>\n<li>按需加载所有自动配置项<ul>\n<li>非常多的 starter</li>\n<li>引入了哪些场景，相对应的场景才会开启</li>\n<li>SprongBoot 所有的自动配置功能都在 spring-boot-autoconfigure 包里面</li>\n</ul>\n</li>\n<li>…</li>\n</ul>\n<h3 id=\"6、容器功能\"><a href=\"#6、容器功能\" class=\"headerlink\" title=\"6、容器功能\"></a>6、容器功能</h3><h4 id=\"6-1、组件添加\"><a href=\"#6-1、组件添加\" class=\"headerlink\" title=\"6.1、组件添加\"></a>6.1、组件添加</h4><h5 id=\"Configuration\"><a href=\"#Configuration\" class=\"headerlink\" title=\"@Configuration\"></a>@Configuration</h5><ul>\n<li><p>基本使用</p>\n</li>\n<li><p>Full 模式与 Lite 模式</p>\n<ul>\n<li><p>配置类组件之间无依赖关系用 Lite 模式，加速容器的启动过程，减少判断</p>\n</li>\n<li><p>配置类组件之间有依赖关系，方法会被调用得到之前的单实例组件，用 Full 模式</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#############################Configuration使用示例######################################</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1、配置类里面使用<span class=\"doctag\">@Bean</span>标注在方法上给容器注册组件，默认也是单实例的</span></span><br><span class=\"line\"><span class=\"comment\"> * 2、配置类本身也是组件</span></span><br><span class=\"line\"><span class=\"comment\"> * 3、proxyBeanMethods：代理bean的方法</span></span><br><span class=\"line\"><span class=\"comment\"> *      Full(proxyBeanMethods = true)、【保证每个<span class=\"doctag\">@Bean</span>方法被调用多少次返回的组件都是单实例的】</span></span><br><span class=\"line\"><span class=\"comment\"> *      Lite(proxyBeanMethods = false)【每个<span class=\"doctag\">@Bean</span>方法被调用多少次返回的组件都是新创建的】</span></span><br><span class=\"line\"><span class=\"comment\"> *      组件依赖必须使用Full模式默认。其他默认是否Lite模式</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration(proxyBeanMethods = false)</span> <span class=\"comment\">//告诉SpringBoot这是一个配置类 == 配置文件</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyConfig</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Full:外部无论对配置类中的这个组件注册方法调用多少次获取的都是之前注册容器中的单实例对象</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span> <span class=\"comment\">//给容器中添加组件。以方法名作为组件的id。返回类型就是组件类型。返回的值，就是组件在容器中的实例</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> User <span class=\"title function_\">user01</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">zhangsan</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\">        <span class=\"comment\">//user组件依赖了Pet组件</span></span><br><span class=\"line\">        zhangsan.setPet(tomcatPet());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> zhangsan;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean(&quot;tom&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Pet <span class=\"title function_\">tomcatPet</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Pet</span>(<span class=\"string\">&quot;tomcat&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#########################<span class=\"meta\">@Configuration</span>测试代码如下###################################</span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1、返回我们IOC容器</span></span><br><span class=\"line\">        <span class=\"type\">ConfigurableApplicationContext</span> <span class=\"variable\">run</span> <span class=\"operator\">=</span> SpringApplication.run(MainApplication.class, args);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2、查看容器里面的组件</span></span><br><span class=\"line\">        String[] names = run.getBeanDefinitionNames();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String name : names) &#123;</span><br><span class=\"line\">            System.out.println(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3、从容器中获取组件</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Pet</span> <span class=\"variable\">tom01</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;tom&quot;</span>, Pet.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Pet</span> <span class=\"variable\">tom02</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;tom&quot;</span>, Pet.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;组件：&quot;</span>+(tom01 == tom02));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4、com.vansys.config.MyConfig$$EnhancerBySpringCGLIB$$51f1e1ca@1654a892</span></span><br><span class=\"line\">        <span class=\"type\">MyConfig</span> <span class=\"variable\">bean</span> <span class=\"operator\">=</span> run.getBean(MyConfig.class);</span><br><span class=\"line\">        System.out.println(bean);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果@Configuration(proxyBeanMethods = true)代理对象调用方法。SpringBoot总会检查这个组件是否在容器中有。</span></span><br><span class=\"line\">        <span class=\"comment\">//保持组件单实例</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> bean.user01();</span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user1</span> <span class=\"operator\">=</span> bean.user01();</span><br><span class=\"line\">        System.out.println(user == user1);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user01</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;user01&quot;</span>, User.class);</span><br><span class=\"line\">        <span class=\"type\">Pet</span> <span class=\"variable\">tom</span> <span class=\"operator\">=</span> run.getBean(<span class=\"string\">&quot;tom&quot;</span>, Pet.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;用户的宠物：&quot;</span>+(user01.getPet() == tom));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Bean、-Component、-Controller、-Service、-Repository\"><a href=\"#Bean、-Component、-Controller、-Service、-Repository\" class=\"headerlink\" title=\"@Bean、@Component、@Controller、@Service、@Repository\"></a>@Bean、@Component、@Controller、@Service、@Repository</h5><p>在类上使用这些这些注解也可以实现往容器里添加组件</p>\n<h5 id=\"ComponentScan、-Import\"><a href=\"#ComponentScan、-Import\" class=\"headerlink\" title=\"@ComponentScan、@Import\"></a>@ComponentScan、@Import</h5><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 给容器中自动创建出这两个类型的组件、默认组件的名字就是全类名</span></span><br><span class=\"line\"><span class=\"keyword\">@Import</span>(&#123;User.class, DBHelper.class&#125;)</span><br><span class=\"line\"><span class=\"variable\">@Configuration</span>(proxyBeanMethods = false) <span class=\"comment\">//告诉SpringBoot这是一个配置类 == 配置文件</span></span><br><span class=\"line\">public class MyConfig &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Conditional\"><a href=\"#Conditional\" class=\"headerlink\" title=\"@Conditional\"></a>@Conditional</h5><p>条件装配：满足@Conditional 指定的条件，则进行组件注入</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515224340.png\" alt=\"image-20220515224340380\"></p>\n<h5 id=\"ImportResource\"><a href=\"#ImportResource\" class=\"headerlink\" title=\"@ImportResource\"></a>@ImportResource</h5><p>原生配置文件引入，可以引入一个 <code>beans.xml</code> 配置文件</p>\n<h4 id=\"6-2、配置绑定\"><a href=\"#6-2、配置绑定\" class=\"headerlink\" title=\"6.2、配置绑定\"></a>6.2、配置绑定</h4><h5 id=\"Component-ConfigurationProperties\"><a href=\"#Component-ConfigurationProperties\" class=\"headerlink\" title=\"@Component + @ConfigurationProperties\"></a>@Component + @ConfigurationProperties</h5><p>通过 <code>prefix</code> 匹配 <code>application.properties</code> 核心配置文件的配置，并指定注入到容器中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 只有在容器中的组件，才会拥有SpringBoot提供的强大功能</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@ConfigurationProperties(prefix = &quot;mycar&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String brand;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer price;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getBrand</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> brand;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setBrand</span><span class=\"params\">(String brand)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.brand = brand;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Integer <span class=\"title function_\">getPrice</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPrice</span><span class=\"params\">(Integer price)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.price = price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Car&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;brand=&#x27;&quot;</span> + brand + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, price=&quot;</span> + price +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"EnableConfigurationProperties-ConfigurationProperties\"><a href=\"#EnableConfigurationProperties-ConfigurationProperties\" class=\"headerlink\" title=\"@EnableConfigurationProperties + @ConfigurationProperties\"></a>@EnableConfigurationProperties + @ConfigurationProperties</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableConfigurationProperties(Car.class)</span></span><br><span class=\"line\"><span class=\"comment\">//1、开启Car配置绑定功能</span></span><br><span class=\"line\"><span class=\"comment\">//2、把这个Car这个组件自动注册到容器中</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyConfig</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Spring 注解详解：<a href=\"https://www.bilibili.com/video/BV1gW411W7wy\">https://www.bilibili.com/video/BV1gW411W7wy</a></p>\n</blockquote>\n<h3 id=\"7、自动配置原理入门\"><a href=\"#7、自动配置原理入门\" class=\"headerlink\" title=\"7、自动配置原理入门\"></a>7、自动配置原理入门</h3><h4 id=\"7-1、引导加载自动配置类\"><a href=\"#7-1、引导加载自动配置类\" class=\"headerlink\" title=\"7.1、引导加载自动配置类\"></a>7.1、引导加载自动配置类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SpringBootConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan(</span></span><br><span class=\"line\"><span class=\"meta\">    excludeFilters = &#123;@Filter(</span></span><br><span class=\"line\"><span class=\"meta\">    type = FilterType.CUSTOM,</span></span><br><span class=\"line\"><span class=\"meta\">    classes = &#123;TypeExcludeFilter.class&#125;</span></span><br><span class=\"line\"><span class=\"meta\">), @Filter(</span></span><br><span class=\"line\"><span class=\"meta\">    type = FilterType.CUSTOM,</span></span><br><span class=\"line\"><span class=\"meta\">    classes = &#123;AutoConfigurationExcludeFilter.class&#125;</span></span><br><span class=\"line\"><span class=\"meta\">)&#125;</span></span><br><span class=\"line\"><span class=\"meta\">)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MainApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(MainApplication.class,args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>SpringBootConfiguration</p>\n<ul>\n<li>@Configuration：表明当前是一个配置类</li>\n</ul>\n</li>\n<li><p>@ComponentScan</p>\n<ul>\n<li>指定扫描哪些包下的组件</li>\n</ul>\n</li>\n<li><p>@EnableAutoConfiguration</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@AutoConfigurationPackage</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;AutoConfigurationImportSelector.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> EnableAutoConfiguration &#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">ENABLED_OVERRIDE_PROPERTY</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;spring.boot.enableautoconfiguration&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;?&gt;[] exclude() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    String[] excludeName() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>@AutoConfigurationPackage</li>\n</ul>\n<p>自动配置包？指定了默认的包规则</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//利用Registrar给容器中导入一系列组件</span></span><br><span class=\"line\"><span class=\"comment\">//将指定的一个包下的所有组件导入进来？MainApplication 所在包下。</span></span><br><span class=\"line\"><span class=\"meta\">@Import(&#123;AutoConfigurationPackages.Registrar.class&#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> AutoConfigurationPackage &#123;</span><br><span class=\"line\">    String[] basePackages() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    Class&lt;?&gt;[] basePackageClasses() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>@Import(AutoConfigurationImportSelector.class)</li>\n</ul>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>、利用get<span class=\"constructor\">AutoConfigurationEntry(<span class=\"params\">annotationMetadata</span>)</span>;给容器中批量导入一些组件</span><br><span class=\"line\"><span class=\"number\">2</span>、调用List&lt;String&gt; configurations = get<span class=\"constructor\">CandidateConfigurations(<span class=\"params\">annotationMetadata</span>, <span class=\"params\">attributes</span>)</span>获取到所有需要导入到容器中的配置类</span><br><span class=\"line\"><span class=\"number\">3</span>、利用工厂加载 Map&lt;String, List&lt;String&gt;&gt; load<span class=\"constructor\">SpringFactories(@Nullable ClassLoader <span class=\"params\">classLoader</span>)</span>；得到所有的组件</span><br><span class=\"line\"><span class=\"number\">4</span>、从META-INF/spring.factories位置来加载一个文件。</span><br><span class=\"line\">\t默认扫描我们当前系统里面所有META-INF/spring.factories位置的文件</span><br><span class=\"line\">    spring-boot-autoconfigure-<span class=\"number\">2.6</span>.<span class=\"number\">7.</span><span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">RELEASE</span>.</span></span>jar包里面也有META-INF/spring.factories</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220515232710.png\" alt=\"image-20220515232710021\"></p>\n<blockquote>\n<p>spring-boot-autoconfigure-2.6.7.RELEASE.jar/META-INF/spring.factories 文件里面写死了 spring-boot 一启动就要给容器中加载的所有配置类</p>\n</blockquote>\n<figure class=\"highlight livescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Auto Configure</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.EnableAutoConfiguration=<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRestClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.jdbc.JdbcRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jReactiveRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.neo4j.Neo4jAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.<span class=\"keyword\">function</span>.client.ClientHttpConnectorAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.reactive.<span class=\"keyword\">function</span>.client.WebClientAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.websocket.reactive.WebSocketReactiveAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.websocket.servlet.WebSocketMessagingAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration,<span class=\"string\">\\</span></span><br><span class=\"line\">org.springframework.boot.autoconfigure.webservices.client.WebServiceTemplateAutoConfiguration</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-2、按需开启自动配置项\"><a href=\"#7-2、按需开启自动配置项\" class=\"headerlink\" title=\"7.2、按需开启自动配置项\"></a>7.2、按需开启自动配置项</h4><p><code>spring-boot-2.6.7.RELEASE</code> 版本默认提供了 133 个自动配置项，全为 <code>xxxAutoConfiguration</code> 的自动配置类，但是根据 Spring 的 <code>@Conditional</code> 注解，最终会按需配置。</p>\n<h4 id=\"7-3、修改默认配置\"><a href=\"#7-3、修改默认配置\" class=\"headerlink\" title=\"7.3、修改默认配置\"></a>7.3、修改默认配置</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//给容器中加入了文件上传解析器；</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"comment\">//容器中有这个类型组件</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnBean(MultipartResolver.class)</span></span><br><span class=\"line\"><span class=\"comment\">//容器中没有这个名字 multipartResolver 的组件</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean(name = DispatcherServlet.MULTIPART_RESOLVER_BEAN_NAME)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> MultipartResolver <span class=\"title function_\">multipartResolver</span><span class=\"params\">(MultipartResolver resolver)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//给@Bean标注的方法传入了对象参数，这个参数的值就会从容器中找。</span></span><br><span class=\"line\">    <span class=\"comment\">//SpringMVC multipartResolver。防止有些用户配置的文件上传解析器不符合规范</span></span><br><span class=\"line\">    <span class=\"comment\">// Detect if the user has created a MultipartResolver but named it incorrectly</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> resolver;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>==SpringBoot 默认会在底层配好所有的组件。但是如果用户自己配置了以用户的优先==</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"meta\">@ConditionalOnMissingBean</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> CharacterEncodingFilter <span class=\"title function_\">characterEncodingFilter</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结：</p>\n<ul>\n<li><p>SpringBoot 先加载所有的自动配置类 xxxxxAutoConfiguration</p>\n</li>\n<li><p>每个自动配置类按照条件进行生效，默认都会绑定配置文件指定的值。xxxxProperties 里面拿。xxxProperties 和配置文件进行了绑定</p>\n</li>\n<li><p>生效的配置类就会给容器中装配很多组件</p>\n</li>\n<li><p>只要容器中有这些组件，相当于这些功能就有了</p>\n</li>\n<li><p>定制化配置</p>\n</li>\n<li><ul>\n<li>用户直接自己使用@Bean 替换底层的组件</li>\n<li>用户去看这个组件是获取的配置文件什么值就去修改。</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>xxxxxAutoConfiguration —&gt; 组件 —&gt;** **xxxxProperties 里面拿值 —-&gt; application.properties</p>\n</blockquote>\n<h2 id=\"核心功能\"><a href=\"#核心功能\" class=\"headerlink\" title=\"核心功能\"></a>核心功能</h2><h3 id=\"1、配置文件\"><a href=\"#1、配置文件\" class=\"headerlink\" title=\"1、配置文件\"></a>1、配置文件</h3><h4 id=\"1-1、文件类型\"><a href=\"#1-1、文件类型\" class=\"headerlink\" title=\"1.1、文件类型\"></a>1.1、文件类型</h4><ul>\n<li>properties</li>\n</ul>\n<p>同以前的 properties 用法</p>\n<ul>\n<li>yaml</li>\n</ul>\n<p>YAML 是 <code>YAML Ain&#39;t Markup Language</code>（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，YAML 的意思其实是：<code>Yet Another Markup Language</code>（仍是一种标记语言）。</p>\n<p>非常适合用来做以数据为中心的配置文件</p>\n<p><strong>基本语法</strong></p>\n<ul>\n<li><code>key: value</code>；kv 之间有空格</li>\n<li>大小写敏感</li>\n<li>使用缩进表示层级关系</li>\n<li>缩进不允许使用 tab，只允许空格</li>\n<li>缩进的空格数不重要，只要相同层级的元素左对齐即可</li>\n<li><code>#</code> 表示注释</li>\n<li>‘’ 与 “” 表示字符串内容，会被 转义/不转义</li>\n</ul>\n<p><strong>数据类型</strong></p>\n<ul>\n<li>字面量：单个的、不可再分的值。date、boolean、string、number、null</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">k:</span> <span class=\"string\">v</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对象：键值对的集合。map、hash、set、object</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">行内写法：k:</span> &#123;<span class=\"string\">k1:v1</span>,<span class=\"string\">k2:v2</span>,<span class=\"string\">k3:v3</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#或</span></span><br><span class=\"line\"><span class=\"attr\">k:</span></span><br><span class=\"line\">  <span class=\"attr\">k1:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">  <span class=\"attr\">k2:</span> <span class=\"string\">v2</span></span><br><span class=\"line\">  <span class=\"attr\">K3:</span> <span class=\"string\">v3</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>数组：一组按次序排列的值。array、list、queue</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">行内写法：k:</span> [<span class=\"string\">v1</span>,<span class=\"string\">v2</span>,<span class=\"string\">v3</span>]</span><br><span class=\"line\"><span class=\"comment\">#或</span></span><br><span class=\"line\"><span class=\"attr\">k:</span></span><br><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"string\">v1</span></span><br><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"string\">v2</span></span><br><span class=\"line\"> <span class=\"bullet\">-</span> <span class=\"string\">v3</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>示例</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String userName;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Boolean boss;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Date birth;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Integer age;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Pet pet;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String[] interests;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> List&lt;String&gt; animal;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Map&lt;String, Object&gt; score;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Set&lt;Double&gt; salarys;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Map&lt;String, List&lt;Pet&gt;&gt; allPets;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Pet</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Double weight;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yaml表示以上对象</span></span><br><span class=\"line\"><span class=\"attr\">person:</span></span><br><span class=\"line\">  <span class=\"attr\">userName:</span> <span class=\"string\">zhangsan</span></span><br><span class=\"line\">  <span class=\"attr\">boss:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">birth:</span> <span class=\"number\">2019</span><span class=\"string\">/12/12</span> <span class=\"number\">20</span><span class=\"string\">:12:33</span></span><br><span class=\"line\">  <span class=\"attr\">age:</span> <span class=\"number\">18</span></span><br><span class=\"line\">  <span class=\"attr\">pet:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">tomcat</span></span><br><span class=\"line\">    <span class=\"attr\">weight:</span> <span class=\"number\">23.4</span></span><br><span class=\"line\">  <span class=\"attr\">interests:</span> [<span class=\"string\">篮球</span>,<span class=\"string\">游泳</span>]</span><br><span class=\"line\">  <span class=\"attr\">animal:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">jerry</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">mario</span></span><br><span class=\"line\">  <span class=\"attr\">score:</span></span><br><span class=\"line\">    <span class=\"attr\">english:</span></span><br><span class=\"line\">      <span class=\"attr\">first:</span> <span class=\"number\">30</span></span><br><span class=\"line\">      <span class=\"attr\">second:</span> <span class=\"number\">40</span></span><br><span class=\"line\">      <span class=\"attr\">third:</span> <span class=\"number\">50</span></span><br><span class=\"line\">    <span class=\"attr\">math:</span> [<span class=\"number\">131</span>,<span class=\"number\">140</span>,<span class=\"number\">148</span>]</span><br><span class=\"line\">    <span class=\"attr\">chinese:</span> &#123;<span class=\"attr\">first:</span> <span class=\"number\">128</span>,<span class=\"attr\">second:</span> <span class=\"number\">136</span>&#125;</span><br><span class=\"line\">  <span class=\"attr\">salarys:</span> [<span class=\"number\">3999</span>,<span class=\"number\">4999.98</span>,<span class=\"number\">5999.99</span>]</span><br><span class=\"line\">  <span class=\"attr\">allPets:</span></span><br><span class=\"line\">    <span class=\"attr\">sick:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">name:</span> <span class=\"string\">tom</span>&#125;</span><br><span class=\"line\">      <span class=\"bullet\">-</span> &#123;<span class=\"attr\">name:</span> <span class=\"string\">jerry</span>,<span class=\"attr\">weight:</span> <span class=\"number\">47</span>&#125;</span><br><span class=\"line\">    <span class=\"attr\">health:</span> [&#123;<span class=\"attr\">name:</span> <span class=\"string\">mario</span>,<span class=\"attr\">weight:</span> <span class=\"number\">47</span>&#125;]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-2、配置提示\"><a href=\"#1-2、配置提示\" class=\"headerlink\" title=\"1.2、配置提示\"></a>1.2、配置提示</h4><p>==自定义的类和配置文件绑定一般没有提示==</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 如果在项目中使用 AspectJ，则需要确保注释处理器仅运行一次。 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">proc</span>&gt;</span>none<span class=\"tag\">&lt;/<span class=\"name\">proc</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、Web-开发\"><a href=\"#2、Web-开发\" class=\"headerlink\" title=\"2、Web 开发\"></a>2、Web 开发</h3><h4 id=\"2-1、SpringMVC-自动配置概览\"><a href=\"#2-1、SpringMVC-自动配置概览\" class=\"headerlink\" title=\"2.1、SpringMVC 自动配置概览\"></a>2.1、SpringMVC 自动配置概览</h4><p>Spring Boot provides auto-configuration for Spring MVC that <strong>works well with most applications.(大多场景我们都无需自定义配置)</strong></p>\n<p>The auto-configuration adds the following features on top of Spring’s defaults:</p>\n<ul>\n<li><p>Inclusion of <code>ContentNegotiatingViewResolver</code> and <code>BeanNameViewResolver</code> beans.</p>\n</li>\n<li><ul>\n<li>内容协商视图解析器和 BeanName 视图解析器</li>\n</ul>\n</li>\n<li><p>Support for serving static resources, including support for WebJars (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-static-content\">later in this document</a>)).</p>\n</li>\n<li><ul>\n<li>静态资源（包括 webjars）</li>\n</ul>\n</li>\n<li><p>Automatic registration of <code>Converter</code>, <code>GenericConverter</code>, and <code>Formatter</code> beans.</p>\n</li>\n<li><ul>\n<li>自动注册 <code>Converter，GenericConverter，Formatter</code></li>\n</ul>\n</li>\n<li><p>Support for <code>HttpMessageConverters</code> (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-message-converters\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>支持 <code>HttpMessageConverters</code> （后来我们配合内容协商理解原理）</li>\n</ul>\n</li>\n<li><p>Automatic registration of <code>MessageCodesResolver</code> (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-message-codes\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>自动注册 <code>MessageCodesResolver</code> （国际化用）</li>\n</ul>\n</li>\n<li><p>Static <code>index.html</code> support.</p>\n</li>\n<li><ul>\n<li>静态 index.html 页支持</li>\n</ul>\n</li>\n<li><p>Custom <code>Favicon</code> support (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-favicon\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>自定义 <code>Favicon</code></li>\n</ul>\n</li>\n<li><p>Automatic use of a <code>ConfigurableWebBindingInitializer</code> bean (covered <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-spring-mvc-web-binding-initializer\">later in this document</a>).</p>\n</li>\n<li><ul>\n<li>自动使用 <code>ConfigurableWebBindingInitializer</code> ，（DataBinder 负责将请求数据绑定到 JavaBean 上）</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>If you want to keep those Spring Boot MVC customizations and make more <a href=\"https://docs.spring.io/spring/docs/5.2.9.RELEASE/spring-framework-reference/web.html#mvc\">MVC customizations</a> (interceptors, formatters, view controllers, and other features), you can add your own <code>@Configuration</code> class of type <code>WebMvcConfigurer</code> but <strong>without</strong> <code>@EnableWebMvc</code>.</p>\n<p><strong>不用@EnableWebMvc 注解。使用</strong> <code>@Configuration**</code> <strong>+</strong> <code>WebMvcConfigurer</code> <strong>自定义规则</strong></p>\n</blockquote>\n<blockquote>\n<p>If you want to provide custom instances of <code>RequestMappingHandlerMapping</code>, <code>RequestMappingHandlerAdapter</code>, or <code>ExceptionHandlerExceptionResolver</code>, and still keep the Spring Boot MVC customizations, you can declare a bean of type <code>WebMvcRegistrations</code> and use it to provide custom instances of those components.</p>\n<p><strong>声明</strong> <code>WebMvcRegistrations</code> <strong>改变默认底层组件</strong></p>\n</blockquote>\n<blockquote>\n<p>If you want to take complete control of Spring MVC, you can add your own <code>@Configuration</code> annotated with <code>@EnableWebMvc</code>, or alternatively add your own <code>@Configuration</code>-annotated <code>DelegatingWebMvcConfiguration</code> as described in the Javadoc of <code>@EnableWebMvc</code>.</p>\n<p><strong>使用</strong> ==@EnableWebMvc+@Configuration+DelegatingWebMvcConfiguration 全面接管 SpringMVC==</p>\n</blockquote>\n","categories":[{"name":"后端开发","path":"api/categories/后端开发.json"}],"tags":[{"name":"技巧","path":"api/tags/技巧.json"},{"name":"笔记","path":"api/tags/笔记.json"},{"name":"微服务","path":"api/tags/微服务.json"}]}