{"title":"错误码及全局异常处理","slug":"错误码及全局异常处理","date":"2022-04-07T13:19:13.000Z","updated":"2022-04-07T13:19:13.000Z","comments":true,"path":"api/articles/错误码及全局异常处理.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328132128.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328132228.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328135114.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328151505.png"],"content":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>在软件开发过程中，不可避免的是需要处理各种异常，在 Java 中，处理异常的方式一般就是采用<code>try&#123;...&#125;catch&#123;...&#125;finally&#123;...&#125;</code>代码块。在业务系统中，可能会有大量的异常处理代码块，这样不仅有大量的冗余代码，而且还影响代码的可读性。比较下面两张图：</p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328132128.png\" alt=\"image-20220328132128521\" style=\"zoom:67%;\" />\n\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328132228.png\" alt=\"image-20220328132228437\" style=\"zoom:67%;\" />\n\n<p>可以看到，明显第二种的代码简洁，可读性高！此处的代码是在 Controller 层中的，在 Service 层中会有更多的异常处理代码块。</p>\n<p>那么我们应该如何优雅的进行异常处理呢？</p>\n<h2 id=\"什么是统一异常处理\"><a href=\"#什么是统一异常处理\" class=\"headerlink\" title=\"什么是统一异常处理\"></a>什么是统一异常处理</h2><p>在 Spring 里，我们可以使用@ControllerAdvice 来处理一些全局性的东西，最常见的是结合@ExceptionHandler 注解用于全局异常的处理。</p>\n<p>@ControllerAdvice 是在类上声明的注解，其用法主要有三点：</p>\n<ul>\n<li><code>@ExceptionHandler</code>注解标注的方法：用于捕获 Controller 中抛出的不同类型的异常，从而达到异常全局处理的目的</li>\n<li><code>@InitBinder</code>注解标注的方法：用于请求中注册自定义参数的解析，从而达到自定义请求参数格式的目的</li>\n<li><code>@ModelAttribute</code>注解标注的方法：表示此方法会在执行目标 Controller 方法之前执行</li>\n</ul>\n<p>跟异常处理有关的只有<code>@ExceptionHandler</code>注解，从字面意思上理解，就是<code>异常处理器</code>的意思，其实际作用也正是如此：若在某个<code>Controller</code>类定义一个异常处理方法，并在方法上添加该注解，那么当出现指定的异常时，会执行该处理异常的方法，其可以使用<code>SpringMVC</code>提供的数据绑定，比如接受一个当前抛出的<code>Throwable</code>对象。</p>\n<p>但是，这样一来，就必须在每一个<code>Controller</code>类都定义一套这样的异常处理方法，因为异常可以是各种各样。这样一来，就会造成大量的冗余代码，而且若需要新增一种异常的处理逻辑，就必须修改所有<code>Controller</code>类了，很不优雅。</p>\n<p>当然你可能会说，那就定义个类似<code>BaseController</code>的基类，这样总行了吧。</p>\n<p>这种做法虽然没错，但仍不尽善尽美，因为这样的代码有一定的侵入性和耦合性。简简单单的<code>Controller</code>，我为啥非得继承这样一个类呢，万一已经继承其他基类了呢。大家都知道<code>Java</code>只能继承一个类。</p>\n<p>那有没有一种方案，既不需要跟<code>Controller</code>耦合，也可以将定义的 <strong>异常处理器</strong> 应用到所有控制器呢？所以注解<code>@ControllerAdvice</code>出现了，简单的说，该注解可以把异常处理器应用到所有控制器，而不是单个控制器。借助该注解，我们可以实现：在独立的某个地方，比如单独一个类，定义一套对各种异常的处理机制，然后在类的签名加上注解<code>@ControllerAdvice</code>，统一对 <code>不同阶段的</code>、<code>不同异常</code> 进行处理。这就是统一异常处理的原理。</p>\n<blockquote>\n<p>注意到上面对异常按阶段进行分类，大体可以分成：进入<code>Controller</code>前的异常 和 <code>Service</code> 层异常，具体可以参考下图：</p>\n</blockquote>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328135114.png\" alt=\"image-20220328135114123\" style=\"zoom:67%;\" />\n\n<h2 id=\"统一异常处理实战\"><a href=\"#统一异常处理实战\" class=\"headerlink\" title=\"统一异常处理实战\"></a>统一异常处理实战</h2><p>通过全局统一的异常处理将自定义的错误码以 json 的格式返回给前端。</p>\n<h3 id=\"统一返回结果类\"><a href=\"#统一返回结果类\" class=\"headerlink\" title=\"统一返回结果类\"></a>统一返回结果类</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.jeecg.common.api.vo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.<span class=\"keyword\">annotation</span>.JsonIgnore;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.ApiModel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.CommonConstant;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.enums.ErrorCodeEnum;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 接口返回对象 -更新</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: luo_Jj</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2022/3/24 17:58</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(value=<span class=\"string\">&quot;接口返回对象&quot;</span>, description=<span class=\"string\">&quot;接口返回对象&quot;</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Result</span>&lt;<span class=\"type\">T</span>&gt; <span class=\"title\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> static <span class=\"keyword\">final</span> long serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 成功标志</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;成功标志&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> boolean success = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 返回处理消息</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;返回处理消息&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String message = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 返回代码</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;返回代码&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String code = <span class=\"string\">&quot;000000&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 返回数据对象 data</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;返回数据对象&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> T result;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 时间戳</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;时间戳&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> long timestamp = System.currentTimeMillis();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result() &#123;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result(String code,String message) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result&lt;T&gt; success(String message) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.code = CommonConstant.SC_OK_200;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.success = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; OK() &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_OK_200);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; OK(T <span class=\"keyword\">data</span>) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_OK_200);</span><br><span class=\"line\">\t\tr.setResult(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; OK(String msg, T <span class=\"keyword\">data</span>) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_OK_200);</span><br><span class=\"line\">\t\tr.setMessage(msg);</span><br><span class=\"line\">\t\tr.setResult(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(String msg, T <span class=\"keyword\">data</span>) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_INTERNAL_SERVER_ERROR_500);</span><br><span class=\"line\">\t\tr.setMessage(msg);</span><br><span class=\"line\">\t\tr.setResult(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(String msg) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> error(CommonConstant.SC_INTERNAL_SERVER_ERROR_500, msg);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@description</span>: 传递一个错误码枚举</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@author</span>: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@date</span>: 2022/3/28 14:55</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> errorCodeEnum:</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@return</span>: org.jeecg.common.api.vo.Result&lt;T&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(ErrorCodeEnum errorCodeEnum) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> error(errorCodeEnum.getCode(), errorCodeEnum.getMessage());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(String code, String msg) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setCode(code);</span><br><span class=\"line\">\t\tr.setMessage(msg);</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result&lt;T&gt; error500(String message) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.code = CommonConstant.SC_INTERNAL_SERVER_ERROR_500;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.success = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"错误码枚举类\"><a href=\"#错误码枚举类\" class=\"headerlink\" title=\"错误码枚举类\"></a>错误码枚举类</h3><p>需要定义一个枚举类，包含所有的自定义的结果码：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package org.<span class=\"property\">jeecg</span>.<span class=\"property\">common</span>.<span class=\"property\">constant</span>.<span class=\"property\">enums</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">AllArgsConstructor</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">Getter</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">NoArgsConstructor</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 错误码枚举</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2022年03月24日 17:15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">ResultCodeEnum</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    * 错误产生来源分为 A/B/C</span></span><br><span class=\"line\"><span class=\"comment\">    * A 表示错误来源于用户，比如参数错误，用户安装版本过低，用户支付超时等问题；</span></span><br><span class=\"line\"><span class=\"comment\">    * B 表示错误来源于当前系统，往往是业务逻辑出错，或程序健壮性差等问题；</span></span><br><span class=\"line\"><span class=\"comment\">    * C 表示错误来源于第三方服务，比如 CDN 服务出错，消息投递超时等问题；</span></span><br><span class=\"line\"><span class=\"comment\">    * 四位数字编号从 0001 到 9999，大类之间的步长间距预留 100</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * 错误码分为一级宏观错误码、二级宏观错误码、三级宏观错误码。</span></span><br><span class=\"line\"><span class=\"comment\">    * 调用第三方服务出错是一级，中间件错误是二级，消息服务出错是三级。</span></span><br><span class=\"line\"><span class=\"comment\">    * 说明：在无法更加具体确定的错误场景中，可以直接使用一级宏观错误码，分别是：A0001（用户端错误）、B0001（系统执行出错）、C0001（调用第三方服务出错）。</span></span><br><span class=\"line\"><span class=\"comment\">    * 错误码表：http://192.168.88.211:8090/pages/viewpage.action?pageId=5473234</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*一切ok*/</span></span><br><span class=\"line\">    <span class=\"title function_\">SUCCESS_ERROR</span>(<span class=\"string\">&quot;000000&quot;</span>,<span class=\"string\">&quot;成功&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*用户端错误码*/</span></span><br><span class=\"line\">    <span class=\"title function_\">CLIENT_ERROR</span>(<span class=\"string\">&quot;A0001&quot;</span>,<span class=\"string\">&quot;用户端错误&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*服务端错误码*/</span></span><br><span class=\"line\">    <span class=\"title function_\">SYSTEM_ERROR</span>(<span class=\"string\">&quot;B0001&quot;</span>,<span class=\"string\">&quot;系统执行出错&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*第三方服务错误码*/</span></span><br><span class=\"line\">    <span class=\"title function_\">TPA_ERROR</span>(<span class=\"string\">&quot;C0001&quot;</span>,<span class=\"string\">&quot;调用第三方服务出错&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 错误码 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> code;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 错误描述 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> message;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义业务异常类\"><a href=\"#自定义业务异常类\" class=\"headerlink\" title=\"自定义业务异常类\"></a>自定义业务异常类</h3><p>自定义一个业务异常类，以后和业务有关的异常通通抛出这个异常类，只需将定义好的错误枚举传入即可。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.jeecg.common.exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"type\">Getter</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"type\">Setter</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.enums.<span class=\"type\">ResultCodeEnum</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* @description: 万序自定义异常</span></span><br><span class=\"line\"><span class=\"comment\">* @author: luo_Jj</span></span><br><span class=\"line\"><span class=\"comment\">* @date: 2022/3/24 18:15</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@Setter</span></span><br><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VanxSoftException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> static <span class=\"keyword\">final</span> long serialVersionUID = <span class=\"number\">1</span>L;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"type\">ResultCodeEnum</span> resultCodeEnum;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic <span class=\"type\">VanxSoftException</span>(<span class=\"type\">ResultCodeEnum</span> resultCodeEnum)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(resultCodeEnum.getMessage());</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.resultCodeEnum = resultCodeEnum;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"全局异常处理类\"><a href=\"#全局异常处理类\" class=\"headerlink\" title=\"全局异常处理类\"></a>全局异常处理类</h3><p>定义一个全局异常处理类</p>\n<ol>\n<li>通过 <code>@RestControllerAdvice</code> 指定该类为 <code>Controller</code> 增强类并返回 <code>json</code> 到前端</li>\n<li>通过 <code>@ExceptionHandler</code> 自定义捕获的异常类型</li>\n</ol>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package org.jeecg.common.<span class=\"keyword\">exception</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">import lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\">import org.apache.shiro.authz.AuthorizationException;</span><br><span class=\"line\">import org.apache.shiro.authz.UnauthorizedException;</span><br><span class=\"line\">import org.jeecg.common.api.vo.Result;</span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Value;</span><br><span class=\"line\">import org.springframework.dao.DataIntegrityViolationException;</span><br><span class=\"line\">import org.springframework.dao.DuplicateKeyException;</span><br><span class=\"line\">import org.springframework.data.redis.connection.PoolException;</span><br><span class=\"line\">import org.springframework.http.HttpStatus;</span><br><span class=\"line\">import org.springframework.web.HttpRequestMethodNotSupportedException;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class=\"line\">import org.springframework.web.multipart.MaxUploadSizeExceededException;</span><br><span class=\"line\">import org.springframework.web.servlet.NoHandlerFoundException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 异常处理器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * @Author scott</span></span><br><span class=\"line\"><span class=\"comment\"> * @Date 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">@RestControllerAdvice</span><br><span class=\"line\">@Slf4j</span><br><span class=\"line\">public <span class=\"keyword\">class</span> JeecgBootExceptionHandler &#123;</span><br><span class=\"line\">    @<span class=\"constructor\">Value(<span class=\"string\">&quot;$&#123;spring.servlet.multipart.max-file-size&#125;&quot;</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String maxFileSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理自定义异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(JeecgBootException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">JeecgBootException(JeecgBootException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(e.get<span class=\"constructor\">Message()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理自定义异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(JeecgBoot401Exception.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    @<span class=\"constructor\">ResponseStatus(HttpStatus.UNAUTHORIZED)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">JeecgBoot401Exception(JeecgBoot401Exception <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"keyword\">new</span> <span class=\"constructor\">Result(<span class=\"string\">&quot;401&quot;</span>, <span class=\"params\">e</span>.<span class=\"params\">getMessage</span>()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * @description: 处理自定义异常-万序系统异常</span></span><br><span class=\"line\"><span class=\"comment\">    * @author: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\">    * @date: 2022/3/25 11:33</span></span><br><span class=\"line\"><span class=\"comment\">    * @param e:</span></span><br><span class=\"line\"><span class=\"comment\">    * @return: org.jeecg.common.api.vo.Result&lt;?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(VanxSoftException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">VanxSoftException(VanxSoftException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(e.get<span class=\"constructor\">ResultCodeEnum()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(NoHandlerFoundException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handler<span class=\"constructor\">NoFoundException(Exception <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;404&quot;</span>, <span class=\"string\">&quot;路径不存在，请检查路径是否正确&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(DuplicateKeyException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">DuplicateKeyException(DuplicateKeyException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;数据库中已存在该记录&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(&#123;UnauthorizedException.<span class=\"params\">class</span>, AuthorizationException.<span class=\"params\">class</span>&#125;)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">AuthorizationException(AuthorizationException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>noauth(<span class=\"string\">&quot;没有权限，请联系管理员授权&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(Exception.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">Exception(Exception <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;操作失败，&quot;</span> + e.get<span class=\"constructor\">Message()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param e</span></span><br><span class=\"line\"><span class=\"comment\">     * @return</span></span><br><span class=\"line\"><span class=\"comment\">     * @Author 政辉</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(HttpRequestMethodNotSupportedException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">HttpRequestMethodNotSupportedException(HttpRequestMethodNotSupportedException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        StringBuffer sb = <span class=\"keyword\">new</span> <span class=\"constructor\">StringBuffer()</span>;</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;不支持&quot;</span>);</span><br><span class=\"line\">        sb.append(e.get<span class=\"constructor\">Method()</span>);</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;请求方法，&quot;</span>);</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;支持以下&quot;</span>);</span><br><span class=\"line\">        String<span class=\"literal\">[]</span> methods = e.get<span class=\"constructor\">SupportedMethods()</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (methods != null) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (String str : methods) &#123;</span><br><span class=\"line\">                sb.append(str);</span><br><span class=\"line\">                sb.append(<span class=\"string\">&quot;、&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        log.error(sb.<span class=\"keyword\">to</span><span class=\"constructor\">String()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;405&quot;</span>, sb.<span class=\"keyword\">to</span><span class=\"constructor\">String()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * spring默认上传大小100MB 超出大小捕获异常MaxUploadSizeExceededException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(MaxUploadSizeExceededException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">MaxUploadSizeExceededException(MaxUploadSizeExceededException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">String</span>.</span></span>format(<span class=\"string\">&quot;文件大小超出%s限制, 请压缩或降低文件质量! &quot;</span>, maxFileSize));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(DataIntegrityViolationException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">DataIntegrityViolationException(DataIntegrityViolationException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;字段太长,超出数据库字段的长度&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(PoolException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">PoolException(PoolException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;Redis 连接异常!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><h3 id=\"编写-TestController-测试\"><a href=\"#编写-TestController-测试\" class=\"headerlink\" title=\"编写 TestController 测试\"></a>编写 TestController 测试</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.jeecg.modules.exception.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.Api;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.ApiOperation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.api.vo.Result;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.enums.ResultCodeEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.exception.VanxSoftException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.<span class=\"keyword\">annotation</span>.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.<span class=\"keyword\">annotation</span>.RequestMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.<span class=\"keyword\">annotation</span>.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 全局异常处理</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2022年03月24日 17:45</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(<span class=\"string\">&quot;/exception&quot;</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@Api(tags=<span class=\"string\">&quot;全局异常处理&quot;</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExceptionController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiOperation(<span class=\"string\">&quot;测试请求&quot;</span>)</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = <span class=\"string\">&quot;/test&quot;</span>, method = RequestMethod.POST)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result&lt;JSONObject&gt; testClientError()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> new VanxSoftException(ResultCodeEnum.SYSTEM_ERROR);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328151505.png\" alt=\"image-20220328151505665\"></p>\n","more":"<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>在软件开发过程中，不可避免的是需要处理各种异常，在 Java 中，处理异常的方式一般就是采用<code>try&#123;...&#125;catch&#123;...&#125;finally&#123;...&#125;</code>代码块。在业务系统中，可能会有大量的异常处理代码块，这样不仅有大量的冗余代码，而且还影响代码的可读性。比较下面两张图：</p>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328132128.png\" alt=\"image-20220328132128521\" style=\"zoom:67%;\" />\n\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328132228.png\" alt=\"image-20220328132228437\" style=\"zoom:67%;\" />\n\n<p>可以看到，明显第二种的代码简洁，可读性高！此处的代码是在 Controller 层中的，在 Service 层中会有更多的异常处理代码块。</p>\n<p>那么我们应该如何优雅的进行异常处理呢？</p>\n<h2 id=\"什么是统一异常处理\"><a href=\"#什么是统一异常处理\" class=\"headerlink\" title=\"什么是统一异常处理\"></a>什么是统一异常处理</h2><p>在 Spring 里，我们可以使用@ControllerAdvice 来处理一些全局性的东西，最常见的是结合@ExceptionHandler 注解用于全局异常的处理。</p>\n<p>@ControllerAdvice 是在类上声明的注解，其用法主要有三点：</p>\n<ul>\n<li><code>@ExceptionHandler</code>注解标注的方法：用于捕获 Controller 中抛出的不同类型的异常，从而达到异常全局处理的目的</li>\n<li><code>@InitBinder</code>注解标注的方法：用于请求中注册自定义参数的解析，从而达到自定义请求参数格式的目的</li>\n<li><code>@ModelAttribute</code>注解标注的方法：表示此方法会在执行目标 Controller 方法之前执行</li>\n</ul>\n<p>跟异常处理有关的只有<code>@ExceptionHandler</code>注解，从字面意思上理解，就是<code>异常处理器</code>的意思，其实际作用也正是如此：若在某个<code>Controller</code>类定义一个异常处理方法，并在方法上添加该注解，那么当出现指定的异常时，会执行该处理异常的方法，其可以使用<code>SpringMVC</code>提供的数据绑定，比如接受一个当前抛出的<code>Throwable</code>对象。</p>\n<p>但是，这样一来，就必须在每一个<code>Controller</code>类都定义一套这样的异常处理方法，因为异常可以是各种各样。这样一来，就会造成大量的冗余代码，而且若需要新增一种异常的处理逻辑，就必须修改所有<code>Controller</code>类了，很不优雅。</p>\n<p>当然你可能会说，那就定义个类似<code>BaseController</code>的基类，这样总行了吧。</p>\n<p>这种做法虽然没错，但仍不尽善尽美，因为这样的代码有一定的侵入性和耦合性。简简单单的<code>Controller</code>，我为啥非得继承这样一个类呢，万一已经继承其他基类了呢。大家都知道<code>Java</code>只能继承一个类。</p>\n<p>那有没有一种方案，既不需要跟<code>Controller</code>耦合，也可以将定义的 <strong>异常处理器</strong> 应用到所有控制器呢？所以注解<code>@ControllerAdvice</code>出现了，简单的说，该注解可以把异常处理器应用到所有控制器，而不是单个控制器。借助该注解，我们可以实现：在独立的某个地方，比如单独一个类，定义一套对各种异常的处理机制，然后在类的签名加上注解<code>@ControllerAdvice</code>，统一对 <code>不同阶段的</code>、<code>不同异常</code> 进行处理。这就是统一异常处理的原理。</p>\n<blockquote>\n<p>注意到上面对异常按阶段进行分类，大体可以分成：进入<code>Controller</code>前的异常 和 <code>Service</code> 层异常，具体可以参考下图：</p>\n</blockquote>\n<img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328135114.png\" alt=\"image-20220328135114123\" style=\"zoom:67%;\" />\n\n<h2 id=\"统一异常处理实战\"><a href=\"#统一异常处理实战\" class=\"headerlink\" title=\"统一异常处理实战\"></a>统一异常处理实战</h2><p>通过全局统一的异常处理将自定义的错误码以 json 的格式返回给前端。</p>\n<h3 id=\"统一返回结果类\"><a href=\"#统一返回结果类\" class=\"headerlink\" title=\"统一返回结果类\"></a>统一返回结果类</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.jeecg.common.api.vo;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.<span class=\"keyword\">annotation</span>.JsonIgnore;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.ApiModel;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.Data;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.CommonConstant;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.enums.ErrorCodeEnum;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.Serializable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 接口返回对象 -更新</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: luo_Jj</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2022/3/24 17:58</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@ApiModel(value=<span class=\"string\">&quot;接口返回对象&quot;</span>, description=<span class=\"string\">&quot;接口返回对象&quot;</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Result</span>&lt;<span class=\"type\">T</span>&gt; <span class=\"title\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> static <span class=\"keyword\">final</span> long serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 成功标志</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;成功标志&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> boolean success = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 返回处理消息</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;返回处理消息&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String message = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 返回代码</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;返回代码&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String code = <span class=\"string\">&quot;000000&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 返回数据对象 data</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;返回数据对象&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> T result;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 时间戳</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">\t<span class=\"meta\">@ApiModelProperty(value = <span class=\"string\">&quot;时间戳&quot;</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> long timestamp = System.currentTimeMillis();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result() &#123;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result(String code,String message) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.code = code;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result&lt;T&gt; success(String message) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.code = CommonConstant.SC_OK_200;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.success = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; OK() &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_OK_200);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; OK(T <span class=\"keyword\">data</span>) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_OK_200);</span><br><span class=\"line\">\t\tr.setResult(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; OK(String msg, T <span class=\"keyword\">data</span>) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_OK_200);</span><br><span class=\"line\">\t\tr.setMessage(msg);</span><br><span class=\"line\">\t\tr.setResult(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(String msg, T <span class=\"keyword\">data</span>) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\tr.setCode(CommonConstant.SC_INTERNAL_SERVER_ERROR_500);</span><br><span class=\"line\">\t\tr.setMessage(msg);</span><br><span class=\"line\">\t\tr.setResult(<span class=\"keyword\">data</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(String msg) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> error(CommonConstant.SC_INTERNAL_SERVER_ERROR_500, msg);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@description</span>: 传递一个错误码枚举</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@author</span>: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@date</span>: 2022/3/28 14:55</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@param</span> errorCodeEnum:</span></span><br><span class=\"line\"><span class=\"comment\">\t* <span class=\"doctag\">@return</span>: org.jeecg.common.api.vo.Result&lt;T&gt;</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(ErrorCodeEnum errorCodeEnum) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> error(errorCodeEnum.getCode(), errorCodeEnum.getMessage());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> static&lt;T&gt; Result&lt;T&gt; error(String code, String msg) &#123;</span><br><span class=\"line\">\t\tResult&lt;T&gt; r = new Result&lt;T&gt;();</span><br><span class=\"line\">\t\tr.setCode(code);</span><br><span class=\"line\">\t\tr.setMessage(msg);</span><br><span class=\"line\">\t\tr.setSuccess(<span class=\"literal\">false</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> r;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> Result&lt;T&gt; error500(String message) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.message = message;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.code = CommonConstant.SC_INTERNAL_SERVER_ERROR_500;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.success = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"错误码枚举类\"><a href=\"#错误码枚举类\" class=\"headerlink\" title=\"错误码枚举类\"></a>错误码枚举类</h3><p>需要定义一个枚举类，包含所有的自定义的结果码：</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package org.<span class=\"property\">jeecg</span>.<span class=\"property\">common</span>.<span class=\"property\">constant</span>.<span class=\"property\">enums</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">AllArgsConstructor</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">Getter</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"property\">NoArgsConstructor</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 错误码枚举</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2022年03月24日 17:15</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">ResultCodeEnum</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    * 错误产生来源分为 A/B/C</span></span><br><span class=\"line\"><span class=\"comment\">    * A 表示错误来源于用户，比如参数错误，用户安装版本过低，用户支付超时等问题；</span></span><br><span class=\"line\"><span class=\"comment\">    * B 表示错误来源于当前系统，往往是业务逻辑出错，或程序健壮性差等问题；</span></span><br><span class=\"line\"><span class=\"comment\">    * C 表示错误来源于第三方服务，比如 CDN 服务出错，消息投递超时等问题；</span></span><br><span class=\"line\"><span class=\"comment\">    * 四位数字编号从 0001 到 9999，大类之间的步长间距预留 100</span></span><br><span class=\"line\"><span class=\"comment\">    *</span></span><br><span class=\"line\"><span class=\"comment\">    * 错误码分为一级宏观错误码、二级宏观错误码、三级宏观错误码。</span></span><br><span class=\"line\"><span class=\"comment\">    * 调用第三方服务出错是一级，中间件错误是二级，消息服务出错是三级。</span></span><br><span class=\"line\"><span class=\"comment\">    * 说明：在无法更加具体确定的错误场景中，可以直接使用一级宏观错误码，分别是：A0001（用户端错误）、B0001（系统执行出错）、C0001（调用第三方服务出错）。</span></span><br><span class=\"line\"><span class=\"comment\">    * 错误码表：http://192.168.88.211:8090/pages/viewpage.action?pageId=5473234</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*一切ok*/</span></span><br><span class=\"line\">    <span class=\"title function_\">SUCCESS_ERROR</span>(<span class=\"string\">&quot;000000&quot;</span>,<span class=\"string\">&quot;成功&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*用户端错误码*/</span></span><br><span class=\"line\">    <span class=\"title function_\">CLIENT_ERROR</span>(<span class=\"string\">&quot;A0001&quot;</span>,<span class=\"string\">&quot;用户端错误&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*服务端错误码*/</span></span><br><span class=\"line\">    <span class=\"title function_\">SYSTEM_ERROR</span>(<span class=\"string\">&quot;B0001&quot;</span>,<span class=\"string\">&quot;系统执行出错&quot;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*第三方服务错误码*/</span></span><br><span class=\"line\">    <span class=\"title function_\">TPA_ERROR</span>(<span class=\"string\">&quot;C0001&quot;</span>,<span class=\"string\">&quot;调用第三方服务出错&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 错误码 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> code;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** 错误描述 */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"title class_\">String</span> message;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"自定义业务异常类\"><a href=\"#自定义业务异常类\" class=\"headerlink\" title=\"自定义业务异常类\"></a>自定义业务异常类</h3><p>自定义一个业务异常类，以后和业务有关的异常通通抛出这个异常类，只需将定义好的错误枚举传入即可。</p>\n<figure class=\"highlight scala\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.jeecg.common.exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"type\">Getter</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.<span class=\"type\">Setter</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.enums.<span class=\"type\">ResultCodeEnum</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* @description: 万序自定义异常</span></span><br><span class=\"line\"><span class=\"comment\">* @author: luo_Jj</span></span><br><span class=\"line\"><span class=\"comment\">* @date: 2022/3/24 18:15</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"meta\">@Setter</span></span><br><span class=\"line\">public <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VanxSoftException</span> <span class=\"keyword\">extends</span> <span class=\"title\">RuntimeException</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> static <span class=\"keyword\">final</span> long serialVersionUID = <span class=\"number\">1</span>L;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"type\">ResultCodeEnum</span> resultCodeEnum;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic <span class=\"type\">VanxSoftException</span>(<span class=\"type\">ResultCodeEnum</span> resultCodeEnum)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">super</span>(resultCodeEnum.getMessage());</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.resultCodeEnum = resultCodeEnum;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"全局异常处理类\"><a href=\"#全局异常处理类\" class=\"headerlink\" title=\"全局异常处理类\"></a>全局异常处理类</h3><p>定义一个全局异常处理类</p>\n<ol>\n<li>通过 <code>@RestControllerAdvice</code> 指定该类为 <code>Controller</code> 增强类并返回 <code>json</code> 到前端</li>\n<li>通过 <code>@ExceptionHandler</code> 自定义捕获的异常类型</li>\n</ol>\n<figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package org.jeecg.common.<span class=\"keyword\">exception</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">import lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\">import org.apache.shiro.authz.AuthorizationException;</span><br><span class=\"line\">import org.apache.shiro.authz.UnauthorizedException;</span><br><span class=\"line\">import org.jeecg.common.api.vo.Result;</span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Value;</span><br><span class=\"line\">import org.springframework.dao.DataIntegrityViolationException;</span><br><span class=\"line\">import org.springframework.dao.DuplicateKeyException;</span><br><span class=\"line\">import org.springframework.data.redis.connection.PoolException;</span><br><span class=\"line\">import org.springframework.http.HttpStatus;</span><br><span class=\"line\">import org.springframework.web.HttpRequestMethodNotSupportedException;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.RestControllerAdvice;</span><br><span class=\"line\">import org.springframework.web.multipart.MaxUploadSizeExceededException;</span><br><span class=\"line\">import org.springframework.web.servlet.NoHandlerFoundException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 异常处理器</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * @Author scott</span></span><br><span class=\"line\"><span class=\"comment\"> * @Date 2019</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">@RestControllerAdvice</span><br><span class=\"line\">@Slf4j</span><br><span class=\"line\">public <span class=\"keyword\">class</span> JeecgBootExceptionHandler &#123;</span><br><span class=\"line\">    @<span class=\"constructor\">Value(<span class=\"string\">&quot;$&#123;spring.servlet.multipart.max-file-size&#125;&quot;</span>)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String maxFileSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理自定义异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(JeecgBootException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">JeecgBootException(JeecgBootException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(e.get<span class=\"constructor\">Message()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 处理自定义异常</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(JeecgBoot401Exception.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    @<span class=\"constructor\">ResponseStatus(HttpStatus.UNAUTHORIZED)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">JeecgBoot401Exception(JeecgBoot401Exception <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"keyword\">new</span> <span class=\"constructor\">Result(<span class=\"string\">&quot;401&quot;</span>, <span class=\"params\">e</span>.<span class=\"params\">getMessage</span>()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * @description: 处理自定义异常-万序系统异常</span></span><br><span class=\"line\"><span class=\"comment\">    * @author: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\">    * @date: 2022/3/25 11:33</span></span><br><span class=\"line\"><span class=\"comment\">    * @param e:</span></span><br><span class=\"line\"><span class=\"comment\">    * @return: org.jeecg.common.api.vo.Result&lt;?&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(VanxSoftException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">VanxSoftException(VanxSoftException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(e.get<span class=\"constructor\">ResultCodeEnum()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(NoHandlerFoundException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handler<span class=\"constructor\">NoFoundException(Exception <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;404&quot;</span>, <span class=\"string\">&quot;路径不存在，请检查路径是否正确&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(DuplicateKeyException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">DuplicateKeyException(DuplicateKeyException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;数据库中已存在该记录&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(&#123;UnauthorizedException.<span class=\"params\">class</span>, AuthorizationException.<span class=\"params\">class</span>&#125;)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">AuthorizationException(AuthorizationException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>noauth(<span class=\"string\">&quot;没有权限，请联系管理员授权&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(Exception.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">Exception(Exception <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;操作失败，&quot;</span> + e.get<span class=\"constructor\">Message()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * @param e</span></span><br><span class=\"line\"><span class=\"comment\">     * @return</span></span><br><span class=\"line\"><span class=\"comment\">     * @Author 政辉</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(HttpRequestMethodNotSupportedException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">HttpRequestMethodNotSupportedException(HttpRequestMethodNotSupportedException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        StringBuffer sb = <span class=\"keyword\">new</span> <span class=\"constructor\">StringBuffer()</span>;</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;不支持&quot;</span>);</span><br><span class=\"line\">        sb.append(e.get<span class=\"constructor\">Method()</span>);</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;请求方法，&quot;</span>);</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;支持以下&quot;</span>);</span><br><span class=\"line\">        String<span class=\"literal\">[]</span> methods = e.get<span class=\"constructor\">SupportedMethods()</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (methods != null) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (String str : methods) &#123;</span><br><span class=\"line\">                sb.append(str);</span><br><span class=\"line\">                sb.append(<span class=\"string\">&quot;、&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        log.error(sb.<span class=\"keyword\">to</span><span class=\"constructor\">String()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;405&quot;</span>, sb.<span class=\"keyword\">to</span><span class=\"constructor\">String()</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * spring默认上传大小100MB 超出大小捕获异常MaxUploadSizeExceededException</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(MaxUploadSizeExceededException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">MaxUploadSizeExceededException(MaxUploadSizeExceededException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">String</span>.</span></span>format(<span class=\"string\">&quot;文件大小超出%s限制, 请压缩或降低文件质量! &quot;</span>, maxFileSize));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(DataIntegrityViolationException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">DataIntegrityViolationException(DataIntegrityViolationException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;字段太长,超出数据库字段的长度&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @<span class=\"constructor\">ExceptionHandler(PoolException.<span class=\"params\">class</span>)</span></span><br><span class=\"line\">    public Result&lt;?&gt; handle<span class=\"constructor\">PoolException(PoolException <span class=\"params\">e</span>)</span> &#123;</span><br><span class=\"line\">        log.error(e.get<span class=\"constructor\">Message()</span>, e);</span><br><span class=\"line\">        return <span class=\"module-access\"><span class=\"module\"><span class=\"identifier\">Result</span>.</span></span>error(<span class=\"string\">&quot;Redis 连接异常!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><h3 id=\"编写-TestController-测试\"><a href=\"#编写-TestController-测试\" class=\"headerlink\" title=\"编写 TestController 测试\"></a>编写 TestController 测试</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> org.jeecg.modules.exception.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.Api;</span><br><span class=\"line\"><span class=\"keyword\">import</span> io.swagger.annotations.ApiOperation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.api.vo.Result;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.constant.enums.ResultCodeEnum;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.jeecg.common.exception.VanxSoftException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.<span class=\"keyword\">annotation</span>.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.<span class=\"keyword\">annotation</span>.RequestMethod;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.<span class=\"keyword\">annotation</span>.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 全局异常处理</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span>: luo_jj</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span>: 2022年03月24日 17:45</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(<span class=\"string\">&quot;/exception&quot;</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@Api(tags=<span class=\"string\">&quot;全局异常处理&quot;</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExceptionController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ApiOperation(<span class=\"string\">&quot;测试请求&quot;</span>)</span></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping(value = <span class=\"string\">&quot;/test&quot;</span>, method = RequestMethod.POST)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result&lt;JSONObject&gt; testClientError()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> new VanxSoftException(ResultCodeEnum.SYSTEM_ERROR);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220328151505.png\" alt=\"image-20220328151505665\"></p>\n","categories":[{"name":"后端开发","path":"api/categories/后端开发.json"}],"tags":[{"name":"技巧","path":"api/tags/技巧.json"},{"name":"笔记","path":"api/tags/笔记.json"}]}