{"title":"Windows Terminal + PowerShell 7 + Scoop 打造 Windows 系统下最强终端","slug":"WindowsTerminal+PowerShell7+Scoop打造Windows系统下最强终端","date":"2024-07-23T07:10:19.000Z","updated":"2024-07-23T07:10:19.000Z","comments":true,"path":"api/articles/WindowsTerminal+PowerShell7+Scoop打造Windows系统下最强终端.json","excerpt":null,"covers":["D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\image-20241118160856468.png","D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\image-20241118160919429.png","D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\sankey-glyphs-combined-diagram.png"],"content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>最近因电脑系统故障而重装系统，借此机会正好使用 Windows 全新的 <code>Terminal(终端)</code> + <code>PowerShell 7</code> + <code>Scoop</code> 来打造 Windows 系统下最强终端，之前一直用的 <code>Git for Windows</code> 提供的 <code>Git Bash</code>，安装 <code>Zsh + Oh My Zsh</code> 优化体验，但是 <code>Zsh</code> 毕竟是 <code>UNIX/类UNIX</code> 系统的命令行解释器，在 Windows 系统上体验终归不是最优的。</p>\n<p><code>Windows Terminal</code> 是一个现代、功能强大的终端应用程序，支持多标签页、自定义主题、Unicode 和 UTF-8 字符、以及与 PowerShell、CMD 和 WSL 的无缝集成。</p>\n<p><code>PowerShell</code> 作为微软开发任务自动化和配置管理框架，最初就是为 Windows 系统设计(现在也支持 Linux 和 MacOS)，且通过强大的脚本语言，适合更灵活更复杂的自动化任务。</p>\n<p><code>Scoop</code> 是一个用于 Windows 的命令行安装器，简化了软件的安装、更新和管理过程，并支持无管理员权限安装。新系统的软件开发环境也在本文中通过 Scoop 来管理安装。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>按照以下步骤，一步一步打造 Windows Terminal + PowerShell 7 + Scoop 最强 Windows 终端</p>\n<h3 id=\"Scoop\"><a href=\"#Scoop\" class=\"headerlink\" title=\"Scoop\"></a>Scoop</h3><h4 id=\"执行策略\"><a href=\"#执行策略\" class=\"headerlink\" title=\"执行策略\"></a>执行策略</h4><p>以管理员身份打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Set-ExecutionPolicy</span> <span class=\"literal\">-ExecutionPolicy</span> RemoteSigned <span class=\"literal\">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装路径\"><a href=\"#安装路径\" class=\"headerlink\" title=\"安装路径\"></a>安装路径</h4><p>Scoop 可以自定义 Scoop 安装路径与使用 Scoop 安装的软件路径：</p>\n<ul>\n<li>Scoop 本身和安装软件的路径为：<code>C:\\Users\\[username]\\scoop</code></li>\n<li>Scoop 全局安装软件的路径为：<code>C:\\ProgramData\\scoop</code></li>\n</ul>\n<p>在开始安装 Scoop 前，可以提前设置环境变量来决定其安装路径</p>\n<p>对于 Scoop 本身和安装软件的路径，打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$env:SCOOP</span>=<span class=\"string\">&#x27;D:\\Scoop&#x27;</span></span><br><span class=\"line\">[<span class=\"type\">Environment</span>]::SetEnvironmentVariable(<span class=\"string\">&#x27;SCOOP&#x27;</span>, <span class=\"variable\">$env:SCOOP</span>, <span class=\"string\">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>对于 Scoop 全局安装软件的路径，以 <code>管理员身份</code> 打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$env:SCOOP_GLOBAL</span>=<span class=\"string\">&#x27;D:\\Scoop\\Global&#x27;</span></span><br><span class=\"line\">[<span class=\"type\">Environment</span>]::SetEnvironmentVariable(<span class=\"string\">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class=\"variable\">$env:SCOOP_GLOBAL</span>, <span class=\"string\">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h4><p>打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Invoke-Expression</span> (<span class=\"built_in\">New-Object</span> System.Net.WebClient).DownloadString(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 或者短命令</span></span><br><span class=\"line\"><span class=\"built_in\">iwr</span> <span class=\"literal\">-useb</span> get.scoop.sh | <span class=\"built_in\">iex</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># https://get.scoop.sh 地址实际是 https://raw.githubusercontent.com/scoopinstaller/install/master/install.ps1，若网络环境无法访问 GitHub，可以使用第三方 GitHub 加速服务</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>详细教程：<a href=\"https://blog.dejavu.moe/posts/windows-scoop/\">使用 Scoop 管理 Windows 下的软件和开发环境 · Dejavu’s Blog</a></p>\n</blockquote>\n<h3 id=\"Windows-Terminal\"><a href=\"#Windows-Terminal\" class=\"headerlink\" title=\"Windows Terminal\"></a>Windows Terminal</h3><p>Windows 11 自带新版本 <a href=\"https://github.com/microsoft/terminal\">Windows Terminal</a>，无需额外安装，若某些 LTSC 版本系统没有，建议直接从 <a href=\"https://www.microsoft.com/store/productId/9N0DX20HK701\">微软应用商店</a> 安装最新稳定版</p>\n<h3 id=\"PowerShell-7\"><a href=\"#PowerShell-7\" class=\"headerlink\" title=\"PowerShell 7\"></a>PowerShell 7</h3><p><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell 7</a> 直接在 [Releases](<a href=\"https://github.com/PowerShell/PowerShell/releases\">Releases · PowerShell/PowerShell</a>) 页面下载最新版本的安装包（根据系统架构选择，例如：Windows 11 x64 选择 <code>PowerShell-x-win-x64.msi.msi</code> 格式），双击运行安装程序，在 <code>Optional Actions</code> 勾选以下三项：</p>\n<ul>\n<li>添加到系统环境变量</li>\n<li>注册到 Windows 事件日志报表</li>\n<li>开启远程处理</li>\n</ul>\n<p><img src=\"D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\image-20241118160856468.png\" alt=\"image-20241118160856468\"></p>\n<p>下一步选择 PowerShell 更新选项，勾选以下两个选项后续可以通过 Microsoft Update 更新 PowerShell</p>\n<p><img src=\"D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\image-20241118160919429.png\" alt=\"image-20241118160919429\"></p>\n<h3 id=\"Nerd-Font\"><a href=\"#Nerd-Font\" class=\"headerlink\" title=\"Nerd Font\"></a>Nerd Font</h3><p><a href=\"https://github.com/jandedobbeleer/oh-my-posh\">oh-my-posh</a> 内置主题里的图标、符号需要安装额外的字体才能完美显示，这里我们选择 <a href=\"https://github.com/ryanoasis/nerd-fonts\">Nerd Font</a> 字体， Nerd Fonts 是一个专为开发者设计的字体聚合器和修补工具，它增强了原有字体的功能</p>\n<p><img src=\"D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\sankey-glyphs-combined-diagram.png\" alt=\"sankey-glyphs-combined-diagram\"></p>\n<p>可以在 <a href=\"https://www.nerdfonts.com/\">Nerd Fonts 官网</a> 挑选喜欢的字体，然后在 <a href=\"https://github.com/ryanoasis/nerd-fonts/releases\">Releases</a> 页面下载对应的字体文件安装</p>\n<blockquote>\n<p>本文中演示使用的是 Nerd Fonts 修补过的 JetBrainsMono 字体</p>\n</blockquote>\n<h3 id=\"PSReadLine\"><a href=\"#PSReadLine\" class=\"headerlink\" title=\"PSReadLine\"></a>PSReadLine</h3><p><a href=\"https://github.com/PowerShell/PSReadLine\">PSReadLine</a> 是一个 PowerShell 模块，可以让 PowerShell 的命令行更好用，这里我们通过 Scoop 安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 extras bucket</span></span><br><span class=\"line\">scoop bucket add extras</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 PSReadLine</span></span><br><span class=\"line\">scoop install PSReadLine</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"posh-git\"><a href=\"#posh-git\" class=\"headerlink\" title=\"posh-git\"></a>posh-git</h3><p><a href=\"https://github.com/dahlbyk/posh-git\">posh-git</a> 是一个 PowerShell 模块，可以让 git 更好用，这里我们通过 Scoop 安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过 scoop 安装 posh-git</span></span><br><span class=\"line\">scoop install posh<span class=\"literal\">-git</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"oh-my-posh\"><a href=\"#oh-my-posh\" class=\"headerlink\" title=\"oh-my-posh\"></a>oh-my-posh</h3><p><a href=\"https://ohmyposh.dev/\">oh-my-posh</a> 是一个全平台终端美化工具，可以让 PowerShell 终端更美观，这里我们通过 Scoop 安装</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过 scoop 安装 oh-my-posh</span></span><br><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>oh-my-posh</span><br></pre></td></tr></table></figure>\n\n","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>最近因电脑系统故障而重装系统，借此机会正好使用 Windows 全新的 <code>Terminal(终端)</code> + <code>PowerShell 7</code> + <code>Scoop</code> 来打造 Windows 系统下最强终端，之前一直用的 <code>Git for Windows</code> 提供的 <code>Git Bash</code>，安装 <code>Zsh + Oh My Zsh</code> 优化体验，但是 <code>Zsh</code> 毕竟是 <code>UNIX/类UNIX</code> 系统的命令行解释器，在 Windows 系统上体验终归不是最优的。</p>\n<p><code>Windows Terminal</code> 是一个现代、功能强大的终端应用程序，支持多标签页、自定义主题、Unicode 和 UTF-8 字符、以及与 PowerShell、CMD 和 WSL 的无缝集成。</p>\n<p><code>PowerShell</code> 作为微软开发任务自动化和配置管理框架，最初就是为 Windows 系统设计(现在也支持 Linux 和 MacOS)，且通过强大的脚本语言，适合更灵活更复杂的自动化任务。</p>\n<p><code>Scoop</code> 是一个用于 Windows 的命令行安装器，简化了软件的安装、更新和管理过程，并支持无管理员权限安装。新系统的软件开发环境也在本文中通过 Scoop 来管理安装。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>按照以下步骤，一步一步打造 Windows Terminal + PowerShell 7 + Scoop 最强 Windows 终端</p>\n<h3 id=\"Scoop\"><a href=\"#Scoop\" class=\"headerlink\" title=\"Scoop\"></a>Scoop</h3><h4 id=\"执行策略\"><a href=\"#执行策略\" class=\"headerlink\" title=\"执行策略\"></a>执行策略</h4><p>以管理员身份打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Set-ExecutionPolicy</span> <span class=\"literal\">-ExecutionPolicy</span> RemoteSigned <span class=\"literal\">-Scope</span> CurrentUser</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"安装路径\"><a href=\"#安装路径\" class=\"headerlink\" title=\"安装路径\"></a>安装路径</h4><p>Scoop 可以自定义 Scoop 安装路径与使用 Scoop 安装的软件路径：</p>\n<ul>\n<li>Scoop 本身和安装软件的路径为：<code>C:\\Users\\[username]\\scoop</code></li>\n<li>Scoop 全局安装软件的路径为：<code>C:\\ProgramData\\scoop</code></li>\n</ul>\n<p>在开始安装 Scoop 前，可以提前设置环境变量来决定其安装路径</p>\n<p>对于 Scoop 本身和安装软件的路径，打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$env:SCOOP</span>=<span class=\"string\">&#x27;D:\\Scoop&#x27;</span></span><br><span class=\"line\">[<span class=\"type\">Environment</span>]::SetEnvironmentVariable(<span class=\"string\">&#x27;SCOOP&#x27;</span>, <span class=\"variable\">$env:SCOOP</span>, <span class=\"string\">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>对于 Scoop 全局安装软件的路径，以 <code>管理员身份</code> 打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$env:SCOOP_GLOBAL</span>=<span class=\"string\">&#x27;D:\\Scoop\\Global&#x27;</span></span><br><span class=\"line\">[<span class=\"type\">Environment</span>]::SetEnvironmentVariable(<span class=\"string\">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class=\"variable\">$env:SCOOP_GLOBAL</span>, <span class=\"string\">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"开始安装\"><a href=\"#开始安装\" class=\"headerlink\" title=\"开始安装\"></a>开始安装</h4><p>打开 Windows Terminal/PowerShell，执行以下命令</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Invoke-Expression</span> (<span class=\"built_in\">New-Object</span> System.Net.WebClient).DownloadString(<span class=\"string\">&#x27;https://get.scoop.sh&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 或者短命令</span></span><br><span class=\"line\"><span class=\"built_in\">iwr</span> <span class=\"literal\">-useb</span> get.scoop.sh | <span class=\"built_in\">iex</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># https://get.scoop.sh 地址实际是 https://raw.githubusercontent.com/scoopinstaller/install/master/install.ps1，若网络环境无法访问 GitHub，可以使用第三方 GitHub 加速服务</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>详细教程：<a href=\"https://blog.dejavu.moe/posts/windows-scoop/\">使用 Scoop 管理 Windows 下的软件和开发环境 · Dejavu’s Blog</a></p>\n</blockquote>\n<h3 id=\"Windows-Terminal\"><a href=\"#Windows-Terminal\" class=\"headerlink\" title=\"Windows Terminal\"></a>Windows Terminal</h3><p>Windows 11 自带新版本 <a href=\"https://github.com/microsoft/terminal\">Windows Terminal</a>，无需额外安装，若某些 LTSC 版本系统没有，建议直接从 <a href=\"https://www.microsoft.com/store/productId/9N0DX20HK701\">微软应用商店</a> 安装最新稳定版</p>\n<h3 id=\"PowerShell-7\"><a href=\"#PowerShell-7\" class=\"headerlink\" title=\"PowerShell 7\"></a>PowerShell 7</h3><p><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell 7</a> 直接在 [Releases](<a href=\"https://github.com/PowerShell/PowerShell/releases\">Releases · PowerShell/PowerShell</a>) 页面下载最新版本的安装包（根据系统架构选择，例如：Windows 11 x64 选择 <code>PowerShell-x-win-x64.msi.msi</code> 格式），双击运行安装程序，在 <code>Optional Actions</code> 勾选以下三项：</p>\n<ul>\n<li>添加到系统环境变量</li>\n<li>注册到 Windows 事件日志报表</li>\n<li>开启远程处理</li>\n</ul>\n<p><img src=\"D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\image-20241118160856468.png\" alt=\"image-20241118160856468\"></p>\n<p>下一步选择 PowerShell 更新选项，勾选以下两个选项后续可以通过 Microsoft Update 更新 PowerShell</p>\n<p><img src=\"D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\image-20241118160919429.png\" alt=\"image-20241118160919429\"></p>\n<h3 id=\"Nerd-Font\"><a href=\"#Nerd-Font\" class=\"headerlink\" title=\"Nerd Font\"></a>Nerd Font</h3><p><a href=\"https://github.com/jandedobbeleer/oh-my-posh\">oh-my-posh</a> 内置主题里的图标、符号需要安装额外的字体才能完美显示，这里我们选择 <a href=\"https://github.com/ryanoasis/nerd-fonts\">Nerd Font</a> 字体， Nerd Fonts 是一个专为开发者设计的字体聚合器和修补工具，它增强了原有字体的功能</p>\n<p><img src=\"D:\\workspace\\OtherProjects\\Blog\\source_posts\\assets\\sankey-glyphs-combined-diagram.png\" alt=\"sankey-glyphs-combined-diagram\"></p>\n<p>可以在 <a href=\"https://www.nerdfonts.com/\">Nerd Fonts 官网</a> 挑选喜欢的字体，然后在 <a href=\"https://github.com/ryanoasis/nerd-fonts/releases\">Releases</a> 页面下载对应的字体文件安装</p>\n<blockquote>\n<p>本文中演示使用的是 Nerd Fonts 修补过的 JetBrainsMono 字体</p>\n</blockquote>\n<h3 id=\"PSReadLine\"><a href=\"#PSReadLine\" class=\"headerlink\" title=\"PSReadLine\"></a>PSReadLine</h3><p><a href=\"https://github.com/PowerShell/PSReadLine\">PSReadLine</a> 是一个 PowerShell 模块，可以让 PowerShell 的命令行更好用，这里我们通过 Scoop 安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 extras bucket</span></span><br><span class=\"line\">scoop bucket add extras</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 PSReadLine</span></span><br><span class=\"line\">scoop install PSReadLine</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"posh-git\"><a href=\"#posh-git\" class=\"headerlink\" title=\"posh-git\"></a>posh-git</h3><p><a href=\"https://github.com/dahlbyk/posh-git\">posh-git</a> 是一个 PowerShell 模块，可以让 git 更好用，这里我们通过 Scoop 安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过 scoop 安装 posh-git</span></span><br><span class=\"line\">scoop install posh<span class=\"literal\">-git</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"oh-my-posh\"><a href=\"#oh-my-posh\" class=\"headerlink\" title=\"oh-my-posh\"></a>oh-my-posh</h3><p><a href=\"https://ohmyposh.dev/\">oh-my-posh</a> 是一个全平台终端美化工具，可以让 PowerShell 终端更美观，这里我们通过 Scoop 安装</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过 scoop 安装 oh-my-posh</span></span><br><span class=\"line\"><span class=\"keyword\">scoop </span><span class=\"keyword\">install </span>oh-my-posh</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"Windows","path":"api/categories/Windows.json"}],"tags":[{"name":"技巧","path":"api/tags/技巧.json"},{"name":"笔记","path":"api/tags/笔记.json"}]}