{"title":"Docker 安装 Nexus3 并搭建 Docker 私有镜像仓库","slug":"Docker安装Nexus3并搭建Docker私有镜像仓库","date":"2022-06-17T05:27:19.000Z","updated":"2022-06-17T05:27:19.000Z","comments":true,"path":"api/articles/Docker安装Nexus3并搭建Docker私有镜像仓库.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617133124.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617134246.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617135103.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141027.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141322.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141707.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624120037.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624131513.png","https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624131705.png"],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Nexus 是 Sonatype 公司发布的一款仓库（Repository）管理软件，常用来搭建 Maven 私服，所以也有人将 Nexus 称为“Maven 仓库管理器”。</p>\n<p>Nexus Repository 提供多种包格式的仓库：</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617133124.png\" alt=\"image-20220617133124634\"></p>\n<blockquote>\n<p>官方文档：<a href=\"https://help.sonatype.com/repomanager3\">https://help.sonatype.com/repomanager3</a></p>\n</blockquote>\n<h2 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h2><p>这里采用 Docker 进行安装</p>\n<h3 id=\"安装-nexus3\"><a href=\"#安装-nexus3\" class=\"headerlink\" title=\"安装 nexus3\"></a>安装 nexus3</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">--privileged=<span class=\"literal\">true</span> --name=nexus3 \\</span><br><span class=\"line\">-p 8081:8081 \\</span><br><span class=\"line\">-p 8082:8082 \\</span><br><span class=\"line\">-p 8083:8083 \\</span><br><span class=\"line\">-p 8084:8084 \\</span><br><span class=\"line\">-v /u01/cicd/nexus3/data:/nexus-data \\</span><br><span class=\"line\">sonatype/nexus3:3.30.0</span><br></pre></td></tr></table></figure>\n\n<p>参数说明：</p>\n<p><code>8081</code>：可以通过 http 访问 nexus 应用</p>\n<p><code>8082</code>：docker(hosted)私有仓库，可以 pull 和 push</p>\n<p><code>8083</code>：docker(proxy)代理远程仓库，只能 pull</p>\n<p><code>8084</code>：docker(group)私有仓库和代理的组，只能 pull</p>\n<p><code>-v</code>：建立容器与宿主机的连接，将容器中的数据持久化到宿主机上</p>\n<p><code>/nexus-data</code>：容器内 nexus 存放数据的目录</p>\n<p><code>/u01/cicd/nexus3/data</code>：宿主机映射容器内数据目录</p>\n<h3 id=\"访问网页端\"><a href=\"#访问网页端\" class=\"headerlink\" title=\"访问网页端\"></a>访问网页端</h3><p>容器启动成功后访问：<a href=\"http://192.168.88.236:8081/\">http://192.168.88.236:8081/</a></p>\n<p>默认用户/密码：admin/admin123</p>\n<h2 id=\"创建-Docker-镜像仓库\"><a href=\"#创建-Docker-镜像仓库\" class=\"headerlink\" title=\"创建 Docker 镜像仓库\"></a>创建 Docker 镜像仓库</h2><p><code>Repository -&gt; Repositories -&gt; Create repository</code></p>\n<p><strong>repository 的类型</strong></p>\n<ol>\n<li><code>hosted</code>，本地仓库，通常我们会部署自己的构件到这一类型的仓库。比如公司的第二方库。</li>\n<li><code>proxy</code>，代理仓库，它们被用来代理远程的公共仓库，如 maven 中央仓库。</li>\n<li><code>group</code>，仓库组，用来合并多个 hosted/proxy 仓库，当你的项目希望在多个 repository 使用资源时就不需要多次引用了，只需要引用一个 group 即可。</li>\n</ol>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617134246.png\" alt=\"image-20220617134246522\"></p>\n<h3 id=\"创建-docker-hosted-类型的仓库\"><a href=\"#创建-docker-hosted-类型的仓库\" class=\"headerlink\" title=\"创建 docker(hosted)类型的仓库\"></a>创建 docker(hosted)类型的仓库</h3><p>hosted 类型的仓库主要用于将自己的镜像上传至私库。</p>\n<p>在创建镜像仓库的页面中，设置镜像仓库的相关信息（名称、HTTP 端口、是否允许匿名拉取镜像等）。</p>\n<p><strong>注意：这里设置的 HTTP 端口（8082）是后续拉取/推送镜像的端口</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617135103.png\" alt=\"image-20220617135103754\"></p>\n<h3 id=\"创建-docker-proxy-类型的仓库\"><a href=\"#创建-docker-proxy-类型的仓库\" class=\"headerlink\" title=\"创建 docker(proxy)类型的仓库\"></a>创建 docker(proxy)类型的仓库</h3><p>proxy 类型的仓库主要是用于代理中央镜像仓库，从外网将镜像拉取至本地仓库中。</p>\n<p>这里用的是阿里云的镜像地址，国内访问比较快。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141027.png\" alt=\"image-20220617141027757\"></p>\n<h3 id=\"创建-docker-group-类型的仓库\"><a href=\"#创建-docker-group-类型的仓库\" class=\"headerlink\" title=\"创建 docker(group)类型的仓库\"></a>创建 docker(group)类型的仓库</h3><p>用于拉取镜像到本地使用，集成代理仓库和本地仓库的镜像。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141322.png\" alt=\"image-20220617141322000\"></p>\n<h3 id=\"配置-Docker-Realm\"><a href=\"#配置-Docker-Realm\" class=\"headerlink\" title=\"配置 Docker Realm\"></a>配置 Docker Realm</h3><p>将 Docker Bearer Token Realm 配置到右边，保存</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141707.png\" alt=\"image-20220617141707436\"></p>\n<h3 id=\"修改-docker-配置\"><a href=\"#修改-docker-配置\" class=\"headerlink\" title=\"修改 docker 配置\"></a>修改 docker 配置</h3><p>在 <code>/etc/docker/daemon.json</code> 文件中添加下面的内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;insecure-registries&quot;</span>: [<span class=\"string\">&quot;192.168.88.236:8082&quot;</span>,<span class=\"string\">&quot;192.168.88.236:8084&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>8082</code>：<code>docker-hosted</code> 仓库端口</li>\n<li><code>8084</code>：<code>docker-group</code> 仓库端口</li>\n</ul>\n<p>重启 <code>docker</code> 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ service docker restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看是否生效</span></span><br><span class=\"line\">$ docker info</span><br><span class=\"line\">Insecure Registries:</span><br><span class=\"line\"> 192.168.88.236:8082</span><br><span class=\"line\"> 192.168.88.236:8084</span><br><span class=\"line\"> 127.0.0.0/8</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"上传-拉取镜像\"><a href=\"#上传-拉取镜像\" class=\"headerlink\" title=\"上传/拉取镜像\"></a>上传/拉取镜像</h3><h4 id=\"登录私服\"><a href=\"#登录私服\" class=\"headerlink\" title=\"登录私服\"></a>登录私服</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker login -u admin -p wx123\\!@<span class=\"comment\"># 192.168.88.236:8082</span></span><br><span class=\"line\">WARNING! Using --password via the CLI is insecure. Use --password-stdin.</span><br><span class=\"line\">WARNING! Your password will be stored unencrypted <span class=\"keyword\">in</span> /root/.docker/config.json.</span><br><span class=\"line\">Configure a credential helper to remove this warning. See</span><br><span class=\"line\">https://docs.docker.com/engine/reference/commandline/login/<span class=\"comment\">#credentials-store</span></span><br><span class=\"line\"></span><br><span class=\"line\">Login Succeeded <span class=\"comment\"># 登录成功</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"上传镜像\"><a href=\"#上传镜像\" class=\"headerlink\" title=\"上传镜像\"></a>上传镜像</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取 hello-wrold 镜像</span></span><br><span class=\"line\">$ docker pull hello-world</span><br><span class=\"line\">Using default tag: latest</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">2db29710123e: Pull complete</span><br><span class=\"line\">Digest: sha256:13e367d31ae85359f42d637adf6da428f76d75dc9afeb3c21faea0d976f5c651</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> hello-world:latest</span><br><span class=\"line\">docker.io/library/hello-world:latest</span><br><span class=\"line\"><span class=\"comment\"># 创建 tag（仓库地址/镜像名称:TAG）</span></span><br><span class=\"line\">$ docker tag hello-world 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\"><span class=\"comment\"># push 镜像</span></span><br><span class=\"line\">$ docker push 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\">The push refers to repository [192.168.88.236:8082/myhello-world]</span><br><span class=\"line\">e07ee1baac5f: Pushed</span><br><span class=\"line\">1.0: digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4 size: 525</span><br></pre></td></tr></table></figure>\n\n<p><strong>上传私库成功！</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624120037.png\" alt=\"image-20220624120029872\"></p>\n<h4 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\">1.0: Pulling from myhello-world</span><br><span class=\"line\">Digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4</span><br><span class=\"line\">Status: Image is up to <span class=\"built_in\">date</span> <span class=\"keyword\">for</span> 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\">192.168.88.236:8082/myhello-world:1.0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"权限管理\"><a href=\"#权限管理\" class=\"headerlink\" title=\"权限管理\"></a>权限管理</h3><p>默认是使用 <code>admin</code> 用户登录的，权限太高，可以创建一个 <code>docker</code> 账号，并创建对应的角色，分配 <code>nx-repository-view-docker-*-*</code> 权限</p>\n<p><strong>创建角色</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624131513.png\" alt=\"image-20220624131513867\"></p>\n<p><strong>创建用户</strong></p>\n<p>创建用户，并加入对应的角色组</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624131705.png\" alt=\"image-20220624131705122\"></p>\n","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Nexus 是 Sonatype 公司发布的一款仓库（Repository）管理软件，常用来搭建 Maven 私服，所以也有人将 Nexus 称为“Maven 仓库管理器”。</p>\n<p>Nexus Repository 提供多种包格式的仓库：</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617133124.png\" alt=\"image-20220617133124634\"></p>\n<blockquote>\n<p>官方文档：<a href=\"https://help.sonatype.com/repomanager3\">https://help.sonatype.com/repomanager3</a></p>\n</blockquote>\n<h2 id=\"安装部署\"><a href=\"#安装部署\" class=\"headerlink\" title=\"安装部署\"></a>安装部署</h2><p>这里采用 Docker 进行安装</p>\n<h3 id=\"安装-nexus3\"><a href=\"#安装-nexus3\" class=\"headerlink\" title=\"安装 nexus3\"></a>安装 nexus3</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -itd \\</span><br><span class=\"line\">--privileged=<span class=\"literal\">true</span> --name=nexus3 \\</span><br><span class=\"line\">-p 8081:8081 \\</span><br><span class=\"line\">-p 8082:8082 \\</span><br><span class=\"line\">-p 8083:8083 \\</span><br><span class=\"line\">-p 8084:8084 \\</span><br><span class=\"line\">-v /u01/cicd/nexus3/data:/nexus-data \\</span><br><span class=\"line\">sonatype/nexus3:3.30.0</span><br></pre></td></tr></table></figure>\n\n<p>参数说明：</p>\n<p><code>8081</code>：可以通过 http 访问 nexus 应用</p>\n<p><code>8082</code>：docker(hosted)私有仓库，可以 pull 和 push</p>\n<p><code>8083</code>：docker(proxy)代理远程仓库，只能 pull</p>\n<p><code>8084</code>：docker(group)私有仓库和代理的组，只能 pull</p>\n<p><code>-v</code>：建立容器与宿主机的连接，将容器中的数据持久化到宿主机上</p>\n<p><code>/nexus-data</code>：容器内 nexus 存放数据的目录</p>\n<p><code>/u01/cicd/nexus3/data</code>：宿主机映射容器内数据目录</p>\n<h3 id=\"访问网页端\"><a href=\"#访问网页端\" class=\"headerlink\" title=\"访问网页端\"></a>访问网页端</h3><p>容器启动成功后访问：<a href=\"http://192.168.88.236:8081/\">http://192.168.88.236:8081/</a></p>\n<p>默认用户/密码：admin/admin123</p>\n<h2 id=\"创建-Docker-镜像仓库\"><a href=\"#创建-Docker-镜像仓库\" class=\"headerlink\" title=\"创建 Docker 镜像仓库\"></a>创建 Docker 镜像仓库</h2><p><code>Repository -&gt; Repositories -&gt; Create repository</code></p>\n<p><strong>repository 的类型</strong></p>\n<ol>\n<li><code>hosted</code>，本地仓库，通常我们会部署自己的构件到这一类型的仓库。比如公司的第二方库。</li>\n<li><code>proxy</code>，代理仓库，它们被用来代理远程的公共仓库，如 maven 中央仓库。</li>\n<li><code>group</code>，仓库组，用来合并多个 hosted/proxy 仓库，当你的项目希望在多个 repository 使用资源时就不需要多次引用了，只需要引用一个 group 即可。</li>\n</ol>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617134246.png\" alt=\"image-20220617134246522\"></p>\n<h3 id=\"创建-docker-hosted-类型的仓库\"><a href=\"#创建-docker-hosted-类型的仓库\" class=\"headerlink\" title=\"创建 docker(hosted)类型的仓库\"></a>创建 docker(hosted)类型的仓库</h3><p>hosted 类型的仓库主要用于将自己的镜像上传至私库。</p>\n<p>在创建镜像仓库的页面中，设置镜像仓库的相关信息（名称、HTTP 端口、是否允许匿名拉取镜像等）。</p>\n<p><strong>注意：这里设置的 HTTP 端口（8082）是后续拉取/推送镜像的端口</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617135103.png\" alt=\"image-20220617135103754\"></p>\n<h3 id=\"创建-docker-proxy-类型的仓库\"><a href=\"#创建-docker-proxy-类型的仓库\" class=\"headerlink\" title=\"创建 docker(proxy)类型的仓库\"></a>创建 docker(proxy)类型的仓库</h3><p>proxy 类型的仓库主要是用于代理中央镜像仓库，从外网将镜像拉取至本地仓库中。</p>\n<p>这里用的是阿里云的镜像地址，国内访问比较快。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141027.png\" alt=\"image-20220617141027757\"></p>\n<h3 id=\"创建-docker-group-类型的仓库\"><a href=\"#创建-docker-group-类型的仓库\" class=\"headerlink\" title=\"创建 docker(group)类型的仓库\"></a>创建 docker(group)类型的仓库</h3><p>用于拉取镜像到本地使用，集成代理仓库和本地仓库的镜像。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141322.png\" alt=\"image-20220617141322000\"></p>\n<h3 id=\"配置-Docker-Realm\"><a href=\"#配置-Docker-Realm\" class=\"headerlink\" title=\"配置 Docker Realm\"></a>配置 Docker Realm</h3><p>将 Docker Bearer Token Realm 配置到右边，保存</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220617141707.png\" alt=\"image-20220617141707436\"></p>\n<h3 id=\"修改-docker-配置\"><a href=\"#修改-docker-配置\" class=\"headerlink\" title=\"修改 docker 配置\"></a>修改 docker 配置</h3><p>在 <code>/etc/docker/daemon.json</code> 文件中添加下面的内容：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;insecure-registries&quot;</span>: [<span class=\"string\">&quot;192.168.88.236:8082&quot;</span>,<span class=\"string\">&quot;192.168.88.236:8084&quot;</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>8082</code>：<code>docker-hosted</code> 仓库端口</li>\n<li><code>8084</code>：<code>docker-group</code> 仓库端口</li>\n</ul>\n<p>重启 <code>docker</code> 服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ service docker restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看是否生效</span></span><br><span class=\"line\">$ docker info</span><br><span class=\"line\">Insecure Registries:</span><br><span class=\"line\"> 192.168.88.236:8082</span><br><span class=\"line\"> 192.168.88.236:8084</span><br><span class=\"line\"> 127.0.0.0/8</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"上传-拉取镜像\"><a href=\"#上传-拉取镜像\" class=\"headerlink\" title=\"上传/拉取镜像\"></a>上传/拉取镜像</h3><h4 id=\"登录私服\"><a href=\"#登录私服\" class=\"headerlink\" title=\"登录私服\"></a>登录私服</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker login -u admin -p wx123\\!@<span class=\"comment\"># 192.168.88.236:8082</span></span><br><span class=\"line\">WARNING! Using --password via the CLI is insecure. Use --password-stdin.</span><br><span class=\"line\">WARNING! Your password will be stored unencrypted <span class=\"keyword\">in</span> /root/.docker/config.json.</span><br><span class=\"line\">Configure a credential helper to remove this warning. See</span><br><span class=\"line\">https://docs.docker.com/engine/reference/commandline/login/<span class=\"comment\">#credentials-store</span></span><br><span class=\"line\"></span><br><span class=\"line\">Login Succeeded <span class=\"comment\"># 登录成功</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"上传镜像\"><a href=\"#上传镜像\" class=\"headerlink\" title=\"上传镜像\"></a>上传镜像</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取 hello-wrold 镜像</span></span><br><span class=\"line\">$ docker pull hello-world</span><br><span class=\"line\">Using default tag: latest</span><br><span class=\"line\">latest: Pulling from library/hello-world</span><br><span class=\"line\">2db29710123e: Pull complete</span><br><span class=\"line\">Digest: sha256:13e367d31ae85359f42d637adf6da428f76d75dc9afeb3c21faea0d976f5c651</span><br><span class=\"line\">Status: Downloaded newer image <span class=\"keyword\">for</span> hello-world:latest</span><br><span class=\"line\">docker.io/library/hello-world:latest</span><br><span class=\"line\"><span class=\"comment\"># 创建 tag（仓库地址/镜像名称:TAG）</span></span><br><span class=\"line\">$ docker tag hello-world 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\"><span class=\"comment\"># push 镜像</span></span><br><span class=\"line\">$ docker push 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\">The push refers to repository [192.168.88.236:8082/myhello-world]</span><br><span class=\"line\">e07ee1baac5f: Pushed</span><br><span class=\"line\">1.0: digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4 size: 525</span><br></pre></td></tr></table></figure>\n\n<p><strong>上传私库成功！</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624120037.png\" alt=\"image-20220624120029872\"></p>\n<h4 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\">1.0: Pulling from myhello-world</span><br><span class=\"line\">Digest: sha256:f54a58bc1aac5ea1a25d796ae155dc228b3f0e11d046ae276b39c4bf2f13d8c4</span><br><span class=\"line\">Status: Image is up to <span class=\"built_in\">date</span> <span class=\"keyword\">for</span> 192.168.88.236:8082/myhello-world:1.0</span><br><span class=\"line\">192.168.88.236:8082/myhello-world:1.0</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"权限管理\"><a href=\"#权限管理\" class=\"headerlink\" title=\"权限管理\"></a>权限管理</h3><p>默认是使用 <code>admin</code> 用户登录的，权限太高，可以创建一个 <code>docker</code> 账号，并创建对应的角色，分配 <code>nx-repository-view-docker-*-*</code> 权限</p>\n<p><strong>创建角色</strong></p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624131513.png\" alt=\"image-20220624131513867\"></p>\n<p><strong>创建用户</strong></p>\n<p>创建用户，并加入对应的角色组</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20220624131705.png\" alt=\"image-20220624131705122\"></p>\n","categories":[{"name":"Linux","path":"api/categories/Linux.json"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json"},{"name":"容器","path":"api/tags/容器.json"}]}