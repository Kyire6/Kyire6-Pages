{"title":"Git 分支管理规范","slug":"Git分支管理规范","date":"2022-10-26T03:06:05.000Z","updated":"2022-10-26T03:06:05.000Z","comments":true,"path":"api/articles/Git分支管理规范.json","excerpt":null,"covers":["https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20221028110813.png"],"content":"<h2 id=\"分支分类\"><a href=\"#分支分类\" class=\"headerlink\" title=\"分支分类\"></a>分支分类</h2><ol>\n<li><strong>根据生命周期区分</strong></li>\n</ol>\n<ul>\n<li><strong>主分支：</strong>master，develop；</li>\n<li><strong>临时分支：</strong>feature/_，release/_，hotfix/*；</li>\n</ul>\n<ol start=\"2\">\n<li><strong>根据用途区分</strong></li>\n</ol>\n<ul>\n<li><strong>发布/预发布分支：</strong>master，release/*；</li>\n<li><strong>开发分支：</strong>develop；</li>\n<li><strong>功能分支：</strong>feature/*；<ul>\n<li><strong>热修复分支：</strong>hotfix/*；</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分支用途\"><a href=\"#分支用途\" class=\"headerlink\" title=\"分支用途\"></a>分支用途</h2><h3 id=\"master-分支\"><a href=\"#master-分支\" class=\"headerlink\" title=\"master 分支\"></a>master 分支</h3><p>master 分支主要放稳定、随时可上线的版本。这个分支只能从别的分支上合并过来，一般来讲，从 develop 上合并，或者从 bugfix 分支上合并过来。不能直接在 master 分支上进行 commit 文件。因为是稳定的版本，所以每次版本发布都要在这个分支上添加<code>标签</code>(tag)。</p>\n<h3 id=\"develop-分支\"><a href=\"#develop-分支\" class=\"headerlink\" title=\"develop 分支\"></a>develop 分支</h3><p>develop 分支是所有开发分支的母体，所有的开发分支都要从 develop 上切出来，开发完成之后最后都要合并到 develop 上。</p>\n<h3 id=\"hotfix-分支\"><a href=\"#hotfix-分支\" class=\"headerlink\" title=\"hotfix 分支\"></a>hotfix 分支</h3><p>命名规则：<code>hotfix/*</code> –&gt; <code>hotfix/v+bug修复的版本号</code></p>\n<p>hotfix 分支用来修复生产中的紧急 bug，由于 develop 分支尚处于开发过程中，代码不稳定，不能直接应用于生产。所以从 master 分支上切出一个分支，修复完成之后合并到 master 分支，并且合并到 develop 上。</p>\n<h3 id=\"release-分支\"><a href=\"#release-分支\" class=\"headerlink\" title=\"release 分支\"></a>release 分支</h3><p>命名规则：<code>release/*</code> –&gt; <code>release/v+发布的版本号</code></p>\n<p>release 分支可以称之为预发布的版本。当我们认为 develop 版本的代码已经趋于成熟，我们可以打一个 release 分支。在 release 分支上测试完成之后，要将代码合并到 master 分支和 develop 上。master 分支是线上版本，而合并到 develop 版本是因为，在测试过程中，一些细节的东西可能会修改，因此这些优化的内容也应该合并到最终版本以及开发版本中。</p>\n<h3 id=\"feature-分支\"><a href=\"#feature-分支\" class=\"headerlink\" title=\"feature 分支\"></a>feature 分支</h3><p>命名规则：<code>feature/*</code> –&gt; <code>feature/功能名称</code></p>\n<p>feature 分支是最经常使用的分支了。当我们收到一个新的开发功能时，应该在 develop 分支上切出一个 feature 分支。用来完成新功能的开发，开发完成之后，要合并进 develop 分支上。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20221028110813.png\" alt=\"img\"></p>\n<blockquote>\n<p><a href=\"https://blog.kyire.site/2022/08/05/c7bea606.html\">Git Flow 工作流 | Kyire の Blog</a></p>\n</blockquote>\n","more":"<h2 id=\"分支分类\"><a href=\"#分支分类\" class=\"headerlink\" title=\"分支分类\"></a>分支分类</h2><ol>\n<li><strong>根据生命周期区分</strong></li>\n</ol>\n<ul>\n<li><strong>主分支：</strong>master，develop；</li>\n<li><strong>临时分支：</strong>feature/_，release/_，hotfix/*；</li>\n</ul>\n<ol start=\"2\">\n<li><strong>根据用途区分</strong></li>\n</ol>\n<ul>\n<li><strong>发布/预发布分支：</strong>master，release/*；</li>\n<li><strong>开发分支：</strong>develop；</li>\n<li><strong>功能分支：</strong>feature/*；<ul>\n<li><strong>热修复分支：</strong>hotfix/*；</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"分支用途\"><a href=\"#分支用途\" class=\"headerlink\" title=\"分支用途\"></a>分支用途</h2><h3 id=\"master-分支\"><a href=\"#master-分支\" class=\"headerlink\" title=\"master 分支\"></a>master 分支</h3><p>master 分支主要放稳定、随时可上线的版本。这个分支只能从别的分支上合并过来，一般来讲，从 develop 上合并，或者从 bugfix 分支上合并过来。不能直接在 master 分支上进行 commit 文件。因为是稳定的版本，所以每次版本发布都要在这个分支上添加<code>标签</code>(tag)。</p>\n<h3 id=\"develop-分支\"><a href=\"#develop-分支\" class=\"headerlink\" title=\"develop 分支\"></a>develop 分支</h3><p>develop 分支是所有开发分支的母体，所有的开发分支都要从 develop 上切出来，开发完成之后最后都要合并到 develop 上。</p>\n<h3 id=\"hotfix-分支\"><a href=\"#hotfix-分支\" class=\"headerlink\" title=\"hotfix 分支\"></a>hotfix 分支</h3><p>命名规则：<code>hotfix/*</code> –&gt; <code>hotfix/v+bug修复的版本号</code></p>\n<p>hotfix 分支用来修复生产中的紧急 bug，由于 develop 分支尚处于开发过程中，代码不稳定，不能直接应用于生产。所以从 master 分支上切出一个分支，修复完成之后合并到 master 分支，并且合并到 develop 上。</p>\n<h3 id=\"release-分支\"><a href=\"#release-分支\" class=\"headerlink\" title=\"release 分支\"></a>release 分支</h3><p>命名规则：<code>release/*</code> –&gt; <code>release/v+发布的版本号</code></p>\n<p>release 分支可以称之为预发布的版本。当我们认为 develop 版本的代码已经趋于成熟，我们可以打一个 release 分支。在 release 分支上测试完成之后，要将代码合并到 master 分支和 develop 上。master 分支是线上版本，而合并到 develop 版本是因为，在测试过程中，一些细节的东西可能会修改，因此这些优化的内容也应该合并到最终版本以及开发版本中。</p>\n<h3 id=\"feature-分支\"><a href=\"#feature-分支\" class=\"headerlink\" title=\"feature 分支\"></a>feature 分支</h3><p>命名规则：<code>feature/*</code> –&gt; <code>feature/功能名称</code></p>\n<p>feature 分支是最经常使用的分支了。当我们收到一个新的开发功能时，应该在 develop 分支上切出一个 feature 分支。用来完成新功能的开发，开发完成之后，要合并进 develop 分支上。</p>\n<p><img src=\"https://my-typora-oss.oss-cn-shanghai.aliyuncs.com/image-master/20221028110813.png\" alt=\"img\"></p>\n<blockquote>\n<p><a href=\"https://blog.kyire.site/2022/08/05/c7bea606.html\">Git Flow 工作流 | Kyire の Blog</a></p>\n</blockquote>\n","categories":[{"name":"DevOps","path":"api/categories/DevOps.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"},{"name":"开发规范","path":"api/tags/开发规范.json"}]}